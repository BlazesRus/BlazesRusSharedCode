using System;
using System.Collections.Generic;
using System.Text;
using System.Windows;

namespace CSharpSharedCode.ExperimentalCode
{
    //Using to access private fields of contained class
    using PrivateFieldAccessor;
    //// Generated by .NET Reflector from C:\WINDOWS\Microsoft.Net\assembly\GAC_MSIL\WindowsBase\v4.0_4.0.0.0__31bf3856ad364e35\WindowsBase.dll
    //namespace System.Windows
    //{
    //    using MS.Internal;
    //    using MS.Internal.WindowsBase;
    //    using MS.Utility;
    //    using System;
    //    using System.Collections;
    //    using System.Collections.Generic;
    //    using System.ComponentModel;
    //    using System.Diagnostics;
    //    using System.Runtime.CompilerServices;
    //    using System.Runtime.InteropServices;
    //    using System.Windows.Markup;
    //    using System.Windows.Threading;
    //    
    //    [TypeConverter("System.Windows.Markup.DependencyPropertyConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null"), ValueSerializer(typeof(DependencyPropertyValueSerializer))]
    //    public sealed class DependencyProperty
    public class CustomDependencyProperty
    {
        public System.Windows.DependencyProperty StoredDependancyProperty;
        //    {
        //        private PropertyMetadata _defaultMetadata;
        //        private CoerceValueCallback _designerCoerceValueCallback;
        //        internal InsertionSortMap _metadataMap;
        //        private string _name;
        //        private Type _ownerType;
        //        private lags _packedData;
        //        private Type _propertyType;
        //        private System.Windows.DependencyPropertyKey _readOnlyKey;
        //        private System.Windows.ValidateValueCallback _validateValueCallback;
        //        private static int GlobalIndexCount;
        //        private static Type NullableType = typeof(Nullable<>);
        //        private static Hashtable PropertyFromName = new Hashtable();
        //        internal static ItemStructList<DependencyProperty> RegisteredPropertyList = new ItemStructList<DependencyProperty>(0x300);
        //        internal static object Synchronized = new object();
        //        public static readonly object UnsetValue = new NamedObject("DependencyProperty.UnsetValue");
        //        
                private CustomDependencyProperty(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, System.Windows.ValidateValueCallback validateValueCallback)
                {
				      StoredDependancyProperty = new DependencyProperty(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
        //            Flags uniqueGlobalIndex;
        //            this._name = name;
        //            this._propertyType = propertyType;
        //            this._ownerType = ownerType;
        //            this._defaultMetadata = defaultMetadata;
        //            this._validateValueCallback = validateValueCallback;
        //            object synchronized = Synchronized;
        //            lock (synchronized)
        //            {
        //                uniqueGlobalIndex = (Flags) GetUniqueGlobalIndex(ownerType, name);
        //                RegisteredPropertyList.Add(this);
        //            }
        //            if (propertyType.IsValueType)
        //            {
        //                uniqueGlobalIndex |= Flags.IsValueType;
        //            }
        //            if (propertyType == typeof(object))
        //            {
        //                uniqueGlobalIndex |= Flags.IsObjectType;
        //            }
        //            if (typeof(Freezable).IsAssignableFrom(propertyType))
        //            {
        //                uniqueGlobalIndex |= Flags.IsFreezableType;
        //            }
        //            if (propertyType == typeof(string))
        //            {
        //                uniqueGlobalIndex |= Flags.IsStringType;
        //            }
        //            this._packedData = uniqueGlobalIndex;
        return this;
                }
        //        
                public CustomDependencyProperty AddOwner(Type ownerType)
                {
                    return this.AddOwner(ownerType, null);
                }
                
                public CustomDependencyProperty AddOwner(Type ownerType, PropertyMetadata typeMetadata)
                {
				      StoredDependancyProperty.AddOwner(ownerType, typeMetadata);
        //            if (ownerType == null)
        //            {
        //                throw new ArgumentNullException("ownerType");
        //            }
        //            FromNameKey key = new FromNameKey(this.Name, ownerType);
        //            object synchronized = Synchronized;
        //            lock (synchronized)
        //            {
        //                if (PropertyFromName.Contains(key))
        //                {
        //                    object[] args = new object[] { this.Name, ownerType.Name };
        //                    throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("PropertyAlreadyRegistered", args));
        //                }
        //            }
        //            if (typeMetadata != null)
        //            {
        //                this.OverrideMetadata(ownerType, typeMetadata);
        //            }
        //            object obj3 = Synchronized;
        //            lock (obj3)
        //            {
        //                PropertyFromName[key] = this;
        //            }
                    return this;
                }
        //        
                private static object AutoGenerateDefaultValue(Type propertyType)
                {
				    if(propertyType==typeof(SmallDec))
					{
						return SmallDec.Zero;
					}
					else
					{
						return DependancyProperty.AutoGenerateDefaultValue(propertyType);
					}
        //            object obj2 = null;
        //            if (propertyType.IsValueType)
        //            {
        //                obj2 = Activator.CreateInstance(propertyType);
        //            }
        //            return obj2;
                }
        //        
        //        private static PropertyMetadata AutoGeneratePropertyMetadata(Type propertyType, System.Windows.ValidateValueCallback validateValueCallback, string name, Type ownerType)
        //        {
        //            object obj2 = AutoGenerateDefaultValue(propertyType);
        //            if ((validateValueCallback != null) && !validateValueCallback(obj2))
        //            {
        //                object[] args = new object[] { name, ownerType.Name };
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("DefaultValueAutoAssignFailed", args));
        //            }
        //            return new PropertyMetadata(obj2);
        //        }
        //        
        //        [MS.Internal.WindowsBase.FriendAccessAllowed]
        //        internal static DependencyProperty FromName(string name, Type ownerType)
        //        {
        //            DependencyProperty property = null;
        //            if (name == null)
        //            {
        //                throw new ArgumentNullException("name");
        //            }
        //            if (ownerType == null)
        //            {
        //                throw new ArgumentNullException("ownerType");
        //            }
        //            FromNameKey key = new FromNameKey(name, ownerType);
        //            while ((property == null) && (ownerType != null))
        //            {
        //                SecurityHelper.RunClassConstructor(ownerType);
        //                key.UpdateNameKey(ownerType);
        //                object synchronized = Synchronized;
        //                lock (synchronized)
        //                {
        //                    property = (DependencyProperty) PropertyFromName[key];
        //                }
        //                ownerType = ownerType.BaseType;
        //            }
        //            return property;
        //        }
        //        
        //        [MS.Internal.WindowsBase.FriendAccessAllowed]
        //        internal object GetDefaultValue(Type forType)
        //        {
        //            if (!this.IsDefaultValueChanged)
        //            {
        //                return this.DefaultMetadata.DefaultValue;
        //            }
        //            return this.GetMetadata(DependencyObjectType.FromSystemTypeInternal(forType)).DefaultValue;
        //        }
        //        
        //        [MS.Internal.WindowsBase.FriendAccessAllowed]
        //        internal object GetDefaultValue(DependencyObjectType dependencyObjectType)
        //        {
        //            if (!this.IsDefaultValueChanged)
        //            {
        //                return this.DefaultMetadata.DefaultValue;
        //            }
        //            return this.GetMetadata(dependencyObjectType).DefaultValue;
        //        }
        //        
        //        public override int GetHashCode()
        //        {
        //            return this.GlobalIndex;
        //        }
        //        
        //        public PropertyMetadata GetMetadata(Type forType)
        //        {
        //            if (forType == null)
        //            {
        //                throw new ArgumentNullException("forType");
        //            }
        //            return this.GetMetadata(DependencyObjectType.FromSystemType(forType));
        //        }
        //        
        //        public PropertyMetadata GetMetadata(DependencyObject dependencyObject)
        //        {
        //            if (dependencyObject == null)
        //            {
        //                throw new ArgumentNullException("dependencyObject");
        //            }
        //            return this.GetMetadata(dependencyObject.DependencyObjectType);
        //        }
        //        
        //        public PropertyMetadata GetMetadata(DependencyObjectType dependencyObjectType)
        //        {
        //            if (dependencyObjectType != null)
        //            {
        //                int num2;
        //                object obj2;
        //                int index = this._metadataMap.Count - 1;
        //                if (index < 0)
        //                {
        //                    return this._defaultMetadata;
        //                }
        //                if (index == 0)
        //                {
        //                    this._metadataMap.GetKeyValuePair(index, out num2, out obj2);
        //                    while (dependencyObjectType.Id > num2)
        //                    {
        //                        dependencyObjectType = dependencyObjectType.BaseType;
        //                    }
        //                    if (num2 == dependencyObjectType.Id)
        //                    {
        //                        return (PropertyMetadata) obj2;
        //                    }
        //                }
        //                else if (dependencyObjectType.Id != 0)
        //                {
        //                    do
        //                    {
        //                        this._metadataMap.GetKeyValuePair(index, out num2, out obj2);
        //                        index--;
        //                        while ((dependencyObjectType.Id < num2) && (index >= 0))
        //                        {
        //                            this._metadataMap.GetKeyValuePair(index, out num2, out obj2);
        //                            index--;
        //                        }
        //                        while (dependencyObjectType.Id > num2)
        //                        {
        //                            dependencyObjectType = dependencyObjectType.BaseType;
        //                        }
        //                        if (num2 == dependencyObjectType.Id)
        //                        {
        //                            return (PropertyMetadata) obj2;
        //                        }
        //                    }
        //                    while (index >= 0);
        //                }
        //            }
        //            return this._defaultMetadata;
        //        }
        //        
        //        internal static int GetUniqueGlobalIndex(Type ownerType, string name)
        //        {
        //            if (GlobalIndexCount < 0xffff)
        //            {
        //                return GlobalIndexCount++;
        //            }
        //            if (ownerType != null)
        //            {
        //                object[] objArray1 = new object[] { ownerType.Name + "." + name };
        //                throw new InvalidOperationException(MS.Internal.WindowsBase.SR.Get("TooManyDependencyProperties", objArray1));
        //            }
        //            object[] args = new object[] { "ConstantProperty" };
        //            throw new InvalidOperationException(MS.Internal.WindowsBase.SR.Get("TooManyDependencyProperties", args));
        //        }
        //        
        //        public bool IsValidType(object value)
        //        {
        //            return IsValidType(value, this.PropertyType);
        //        }
        //        
        //        internal static bool IsValidType(object value, Type propertyType)
        //        {
        //            if (value == null)
        //            {
        //                if (propertyType.IsValueType && (!propertyType.IsGenericType || (propertyType.GetGenericTypeDefinition() != NullableType)))
        //                {
        //                    return false;
        //                }
        //            }
        //            else if (!propertyType.IsInstanceOfType(value))
        //            {
        //                return false;
        //            }
        //            return true;
        //        }
        //        
        //        public bool IsValidValue(object value)
        //        {
        //            if (!IsValidType(value, this.PropertyType))
        //            {
        //                return false;
        //            }
        //            if (this.ValidateValueCallback != null)
        //            {
        //                return this.ValidateValueCallback(value);
        //            }
        //            return true;
        //        }
        //        
        //        internal bool IsValidValueInternal(object value)
        //        {
        //            if (this.ValidateValueCallback != null)
        //            {
        //                return this.ValidateValueCallback(value);
        //            }
        //            return true;
        //        }
        //        
        //        public void OverrideMetadata(Type forType, PropertyMetadata typeMetadata)
        //        {
        //            DependencyObjectType type;
        //            PropertyMetadata metadata;
        //            this.SetupOverrideMetadata(forType, typeMetadata, out type, out metadata);
        //            if (this.ReadOnly)
        //            {
        //                object[] args = new object[] { this.Name };
        //                throw new InvalidOperationException(MS.Internal.WindowsBase.SR.Get("ReadOnlyOverrideNotAllowed", args));
        //            }
        //            this.ProcessOverrideMetadata(forType, typeMetadata, type, metadata);
        //        }
        //        
        //        public void OverrideMetadata(Type forType, PropertyMetadata typeMetadata, System.Windows.DependencyPropertyKey key)
        //        {
        //            DependencyObjectType type;
        //            PropertyMetadata metadata;
        //            this.SetupOverrideMetadata(forType, typeMetadata, out type, out metadata);
        //            if (key == null)
        //            {
        //                throw new ArgumentNullException("key");
        //            }
        //            if (!this.ReadOnly)
        //            {
        //                throw new InvalidOperationException(MS.Internal.WindowsBase.SR.Get("PropertyNotReadOnly"));
        //            }
        //            if (key.DependencyProperty != this)
        //            {
        //                object[] args = new object[] { this.Name };
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("ReadOnlyOverrideKeyNotAuthorized", args));
        //            }
        //            this.VerifyReadOnlyKey(key);
        //            this.ProcessOverrideMetadata(forType, typeMetadata, type, metadata);
        //        }
        //        
        //        private void ProcessOverrideMetadata(Type forType, PropertyMetadata typeMetadata, DependencyObjectType dType, PropertyMetadata baseMetadata)
        //        {
        //            object synchronized = Synchronized;
        //            lock (synchronized)
        //            {
        //                if (UnsetValue == this._metadataMap[dType.Id])
        //                {
        //                    this._metadataMap[dType.Id] = typeMetadata;
        //                }
        //                else
        //                {
        //                    object[] args = new object[] { forType.Name };
        //                    throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("TypeMetadataAlreadyRegistered", args));
        //                }
        //            }
        //            typeMetadata.InvokeMerge(baseMetadata, this);
        //            typeMetadata.Seal(this, forType);
        //            if (typeMetadata.IsInherited)
        //            {
        //                this._packedData |= Flags.IsPotentiallyInherited;
        //            }
        //            if (typeMetadata.DefaultValueWasSet() && (typeMetadata.DefaultValue != this.DefaultMetadata.DefaultValue))
        //            {
        //                this._packedData |= Flags.IsDefaultValueChanged;
        //            }
        //            if (typeMetadata.UsingDefaultValueFactory)
        //            {
        //                this._packedData |= Flags.IsPotentiallyUsingDefaultValueFactory;
        //            }
        //        }
        //        
        //        public static DependencyProperty Register(string name, Type propertyType, Type ownerType)
        //        {
        //            return Register(name, propertyType, ownerType, null, null);
        //        }
        //        
        //        public static DependencyProperty Register(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata)
        //        {
        //            return Register(name, propertyType, ownerType, typeMetadata, null);
        //        }
        //        
                public static CustomDependencyProperty Register(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata, System.Windows.ValidateValueCallback validateValueCallback)
                {
        //            RegisterParameterValidation(name, propertyType, ownerType);
        //            PropertyMetadata defaultMetadata = null;
        //            if ((typeMetadata != null) && typeMetadata.DefaultValueWasSet())
        //            {
        //                defaultMetadata = new PropertyMetadata(typeMetadata.DefaultValue);
        //            }
        //            DependencyProperty property = RegisterCommon(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
        //            if (typeMetadata != null)
        //            {
        //                property.OverrideMetadata(ownerType, typeMetadata);
        //            }
        //            return property;
			        CustomDependencyProperty property;
					StoredDependancyProperty.Register(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata, System.Windows.ValidateValueCallback validateValueCallback)
					return property;
                }
         
                public static CustomDependencyProperty RegisterAttached(string name, Type propertyType, Type ownerType)
                {
                    return RegisterAttached(name, propertyType, ownerType, null, null);
                }
                
                public static CustomDependencyProperty RegisterAttached(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata)
                {
                    return RegisterAttached(name, propertyType, ownerType, defaultMetadata, null);
                }
                
                public static CustomDependencyProperty RegisterAttached(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, System.Windows.ValidateValueCallback validateValueCallback)
                {
                    RegisterParameterValidation(name, propertyType, ownerType);
                    return RegisterCommon(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
                }
                
                public static System.Windows.DependencyPropertyKey RegisterAttachedReadOnly(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata)
                {
                    return RegisterAttachedReadOnly(name, propertyType, ownerType, defaultMetadata, null);
                }
                
                public static System.Windows.DependencyPropertyKey RegisterAttachedReadOnly(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, System.Windows.ValidateValueCallback validateValueCallback)
                {
        //            RegisterParameterValidation(name, propertyType, ownerType);
        //            if (defaultMetadata == null)
        //            {
        //                defaultMetadata = AutoGeneratePropertyMetadata(propertyType, validateValueCallback, name, ownerType);
        //            }
        //            System.Windows.DependencyPropertyKey key = new System.Windows.DependencyPropertyKey(null);
        //            DependencyProperty dp = RegisterCommon(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
        //            dp._readOnlyKey = key;
        //            key.SetDependencyProperty(dp);
        //            return key;
                }
                
                private static CustomDependencyProperty RegisterCommon(string name, Type propertyType, Type ownerType, PropertyMetadata defaultMetadata, System.Windows.ValidateValueCallback validateValueCallback)
                {
        //            FromNameKey key = new FromNameKey(name, ownerType);
        //            object synchronized = Synchronized;
        //            lock (synchronized)
        //            {
        //                if (PropertyFromName.Contains(key))
        //                {
        //                    object[] args = new object[] { name, ownerType.Name };
        //                    throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("PropertyAlreadyRegistered", args));
        //                }
        //            }
        //            if (defaultMetadata == null)
        //            {
        //                defaultMetadata = AutoGeneratePropertyMetadata(propertyType, validateValueCallback, name, ownerType);
        //            }
        //            else
        //            {
        //                if (!defaultMetadata.DefaultValueWasSet())
        //                {
        //                    defaultMetadata.DefaultValue = AutoGenerateDefaultValue(propertyType);
        //                }
        //                ValidateMetadataDefaultValue(defaultMetadata, propertyType, name, validateValueCallback);
        //            }
        //            DependencyProperty dp = new DependencyProperty(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
        //            defaultMetadata.Seal(dp, null);
        //            if (defaultMetadata.IsInherited)
        //            {
        //                dp._packedData |= Flags.IsPotentiallyInherited;
        //            }
        //            if (defaultMetadata.UsingDefaultValueFactory)
        //            {
        //                dp._packedData |= Flags.IsPotentiallyUsingDefaultValueFactory;
        //            }
        //            object obj3 = Synchronized;
        //            lock (obj3)
        //            {
        //                PropertyFromName[key] = dp;
        //            }
        //            if (TraceDependencyProperty.IsEnabled)
        //            {
        //                TraceDependencyProperty.TraceActivityItem(TraceDependencyProperty.Register, dp, dp.OwnerType);
        //            }
        //            return dp;
                }
        //        
        //        private static void RegisterParameterValidation(string name, Type propertyType, Type ownerType)
        //        {
        //            if (name == null)
        //            {
        //                throw new ArgumentNullException("name");
        //            }
        //            if (name.Length == 0)
        //            {
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("StringEmpty"), "name");
        //            }
        //            if (ownerType == null)
        //            {
        //                throw new ArgumentNullException("ownerType");
        //            }
        //            if (propertyType == null)
        //            {
        //                throw new ArgumentNullException("propertyType");
        //            }
        //        }
        //        
        //        public static System.Windows.DependencyPropertyKey RegisterReadOnly(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata)
        //        {
        //            return RegisterReadOnly(name, propertyType, ownerType, typeMetadata, null);
        //        }
        //        
        //        public static System.Windows.DependencyPropertyKey RegisterReadOnly(string name, Type propertyType, Type ownerType, PropertyMetadata typeMetadata, System.Windows.ValidateValueCallback validateValueCallback)
        //        {
        //            RegisterParameterValidation(name, propertyType, ownerType);
        //            PropertyMetadata defaultMetadata = null;
        //            if ((typeMetadata != null) && typeMetadata.DefaultValueWasSet())
        //            {
        //                defaultMetadata = new PropertyMetadata(typeMetadata.DefaultValue);
        //            }
        //            else
        //            {
        //                defaultMetadata = AutoGeneratePropertyMetadata(propertyType, validateValueCallback, name, ownerType);
        //            }
        //            System.Windows.DependencyPropertyKey key = new System.Windows.DependencyPropertyKey(null);
        //            DependencyProperty dp = RegisterCommon(name, propertyType, ownerType, defaultMetadata, validateValueCallback);
        //            dp._readOnlyKey = key;
        //            key.SetDependencyProperty(dp);
        //            if (typeMetadata == null)
        //            {
        //                typeMetadata = AutoGeneratePropertyMetadata(propertyType, validateValueCallback, name, ownerType);
        //            }
        //            dp.OverrideMetadata(ownerType, typeMetadata, key);
        //            return key;
        //        }
        //        
        //        private void SetupOverrideMetadata(Type forType, PropertyMetadata typeMetadata, out DependencyObjectType dType, out PropertyMetadata baseMetadata)
        //        {
        //            if (forType == null)
        //            {
        //                throw new ArgumentNullException("forType");
        //            }
        //            if (typeMetadata == null)
        //            {
        //                throw new ArgumentNullException("typeMetadata");
        //            }
        //            if (typeMetadata.Sealed)
        //            {
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("TypeMetadataAlreadyInUse"));
        //            }
        //            if (!typeof(DependencyObject).IsAssignableFrom(forType))
        //            {
        //                object[] args = new object[] { forType.Name };
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("TypeMustBeDependencyObjectDerived", args));
        //            }
        //            if (typeMetadata.IsDefaultValueModified)
        //            {
        //                ValidateMetadataDefaultValue(typeMetadata, this.PropertyType, this.Name, this.ValidateValueCallback);
        //            }
        //            dType = DependencyObjectType.FromSystemType(forType);
        //            baseMetadata = this.GetMetadata(dType.BaseType);
        //            if (!baseMetadata.GetType().IsAssignableFrom(typeMetadata.GetType()))
        //            {
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("OverridingMetadataDoesNotMatchBaseMetadataType"));
        //            }
        //        }
        //        
        //        public override string ToString()
        //        {
        //            return this._name;
        //        }
        //        
        //        private static void ValidateDefaultValueCommon(object defaultValue, Type propertyType, string propertyName, System.Windows.ValidateValueCallback validateValueCallback, bool checkThreadAffinity)
        //        {
        //            if (!IsValidType(defaultValue, propertyType))
        //            {
        //                object[] args = new object[] { propertyName };
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("DefaultValuePropertyTypeMismatch", args));
        //            }
        //            if (defaultValue is Expression)
        //            {
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("DefaultValueMayNotBeExpression"));
        //            }
        //            if (checkThreadAffinity)
        //            {
        //                DispatcherObject obj2 = defaultValue as DispatcherObject;
        //                if ((obj2 != null) && (obj2.Dispatcher != null))
        //                {
        //                    ISealable sealable = obj2 as ISealable;
        //                    if ((sealable == null) || !sealable.CanSeal)
        //                    {
        //                        object[] objArray2 = new object[] { propertyName };
        //                        throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("DefaultValueMustBeFreeThreaded", objArray2));
        //                    }
        //                    Invariant.Assert(!sealable.IsSealed, "A Sealed ISealable must not have dispatcher affinity");
        //                    sealable.Seal();
        //                    Invariant.Assert(obj2.Dispatcher == null, "ISealable.Seal() failed after ISealable.CanSeal returned true");
        //                }
        //            }
        //            if ((validateValueCallback != null) && !validateValueCallback(defaultValue))
        //            {
        //                object[] objArray3 = new object[] { propertyName };
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("DefaultValueInvalid", objArray3));
        //            }
        //        }
        //        
        //        internal void ValidateFactoryDefaultValue(object defaultValue)
        //        {
        //            ValidateDefaultValueCommon(defaultValue, this.PropertyType, this.Name, this.ValidateValueCallback, false);
        //        }
        //        
        //        private static void ValidateMetadataDefaultValue(PropertyMetadata defaultMetadata, Type propertyType, string propertyName, System.Windows.ValidateValueCallback validateValueCallback)
        //        {
        //            if (!defaultMetadata.UsingDefaultValueFactory)
        //            {
        //                ValidateDefaultValueCommon(defaultMetadata.DefaultValue, propertyType, propertyName, validateValueCallback, true);
        //            }
        //        }
        //        
        //        internal void VerifyReadOnlyKey(System.Windows.DependencyPropertyKey candidateKey)
        //        {
        //            if (this._readOnlyKey != candidateKey)
        //            {
        //                throw new ArgumentException(MS.Internal.WindowsBase.SR.Get("ReadOnlyKeyNotAuthorized"));
        //            }
        //        }
        //        
        //        public PropertyMetadata DefaultMetadata
        //        {
        //            get
        //            {
        //                return this._defaultMetadata;
        //            }
        //        }
        //        
        //        internal System.Windows.DependencyPropertyKey DependencyPropertyKey
        //        {
        //            get
        //            {
        //                return this._readOnlyKey;
        //            }
        //        }
        //        
        //        internal CoerceValueCallback DesignerCoerceValueCallback
        //        {
        //            get
        //            {
        //                return this._designerCoerceValueCallback;
        //            }
        //            set
        //            {
        //                if (this.ReadOnly)
        //                {
        //                    object[] args = new object[] { this.Name };
        //                    throw new InvalidOperationException(MS.Internal.WindowsBase.SR.Get("ReadOnlyDesignerCoersionNotAllowed", args));
        //                }
        //                this._designerCoerceValueCallback = value;
        //            }
        //        }
        //        
        //        public int GlobalIndex
        //        {
        //            get
        //            {
        //                return (((int) this._packedData) & 0xffff);
        //            }
        //        }
        //        
        //        internal bool IsDefaultValueChanged
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsDefaultValueChanged) > 0);
        //            }
        //        }
        //        
        //        internal bool IsFreezableType
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsFreezableType) > 0);
        //            }
        //        }
        //        
        //        internal bool IsObjectType
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsObjectType) > 0);
        //            }
        //        }
        //        
        //        internal bool IsPotentiallyInherited
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsPotentiallyInherited) > 0);
        //            }
        //        }
        //        
        //        internal bool IsPotentiallyUsingDefaultValueFactory
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsPotentiallyUsingDefaultValueFactory) > 0);
        //            }
        //        }
        //        
        //        internal bool IsStringType
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsStringType) > 0);
        //            }
        //        }
        //        
        //        internal bool IsValueType
        //        {
        //            get
        //            {
        //                return ((this._packedData & Flags.IsValueType) > 0);
        //            }
        //        }
        //        
        //        public string Name
        //        {
        //            get
        //            {
        //                return this._name;
        //            }
        //        }
        //        
        //        public Type OwnerType
        //        {
        //            get
        //            {
        //                return this._ownerType;
        //            }
        //        }
        //        
        //        public Type PropertyType
        //        {
        //            get
        //            {
        //                return this._propertyType;
        //            }
        //        }
        //        
        //        public bool ReadOnly
        //        {
        //            get
        //            {
        //                return (this._readOnlyKey > null);
        //            }
        //        }
        //        
        //        internal static IEnumerable RegisteredProperties
        //        {
        //            [IteratorStateMachine(typeof(<get_RegisteredProperties>d__91))]
        //            get
        //            {
        //                return new <get_RegisteredProperties>d__91(-2);
        //            }
        //        }
        //        
        //        internal static int RegisteredPropertyCount
        //        {
        //            get
        //            {
        //                return RegisteredPropertyList.Count;
        //            }
        //        }
        //        
        //        public System.Windows.ValidateValueCallback ValidateValueCallback
        //        {
        //            get
        //            {
        //                return this._validateValueCallback;
        //            }
        //        }
        //        
        //        [CompilerGenerated]
        //        private sealed class <get_RegisteredProperties>d__91 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IDisposable, IEnumerator
        //        {
        //            private int <>1__state;
        //            private object <>2__current;
        //            private DependencyProperty[] <>7__wrap1;
        //            private int <>7__wrap2;
        //            private int <>l__initialThreadId;
        //            
        //            [DebuggerHidden]
        //            public <get_RegisteredProperties>d__91(int <>1__state)
        //            {
        //                this.<>1__state = <>1__state;
        //                this.<>l__initialThreadId = Environment.CurrentManagedThreadId;
        //            }
        //            
        //            private bool MoveNext()
        //            {
        //                int num = this.<>1__state;
        //                if (num == 0)
        //                {
        //                    this.<>1__state = -1;
        //                    this.<>7__wrap1 = DependencyProperty.RegisteredPropertyList.List;
        //                    this.<>7__wrap2 = 0;
        //                    while (this.<>7__wrap2 < this.<>7__wrap1.Length)
        //                    {
        //                        DependencyProperty property = this.<>7__wrap1[this.<>7__wrap2];
        //                        if (property == null)
        //                        {
        //                            goto Label_0058;
        //                        }
        //                        this.<>2__current = property;
        //                        this.<>1__state = 1;
        //                        return true;
        //                    Label_0051:
        //                        this.<>1__state = -1;
        //                    Label_0058:
        //                        this.<>7__wrap2++;
        //                    }
        //                    this.<>7__wrap1 = null;
        //                    return false;
        //                }
        //                if (num != 1)
        //                {
        //                    return false;
        //                }
        //                goto Label_0051;
        //            }
        //            
        //            [DebuggerHidden]
        //            IEnumerator<object> IEnumerable<object>.GetEnumerator()
        //            {
        //                if ((this.<>1__state == -2) && (this.<>l__initialThreadId == Environment.CurrentManagedThreadId))
        //                {
        //                    this.<>1__state = 0;
        //                    return this;
        //                }
        //                return new DependencyProperty.<get_RegisteredProperties>d__91(0);
        //            }
        //            
        //            [DebuggerHidden]
        //            IEnumerator IEnumerable.GetEnumerator()
        //            {
        //                return this.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator();
        //            }
        //            
        //            [DebuggerHidden]
        //            void IEnumerator.Reset()
        //            {
        //                throw new NotSupportedException();
        //            }
        //            
        //            [DebuggerHidden]
        //            void IDisposable.Dispose()
        //            {
        //            }
        //            
        //            object IEnumerator<object>.Current
        //            {
        //                [DebuggerHidden]
        //                get
        //                {
        //                    return this.<>2__current;
        //                }
        //            }
        //            
        //            object IEnumerator.Current
        //            {
        //                [DebuggerHidden]
        //                get
        //                {
        //                    return this.<>2__current;
        //                }
        //            }
        //        }
        //        
        //        [Flags]
        //        private enum Flags
        //        {
        //            GlobalIndexMask = 0xffff,
        //            IsDefaultValueChanged = 0x100000,
        //            IsFreezableType = 0x20000,
        //            IsObjectType = 0x400000,
        //            IsPotentiallyInherited = 0x80000,
        //            IsPotentiallyUsingDefaultValueFactory = 0x200000,
        //            IsStringType = 0x40000,
        //            IsValueType = 0x10000
        //        }
        //        
        //        private class FromNameKey
        //        {
        //            private int _hashCode;
        //            private string _name;
        //            private Type _ownerType;
        //            
        //            public FromNameKey(string name, Type ownerType)
        //            {
        //                this._name = name;
        //                this._ownerType = ownerType;
        //                this._hashCode = this._name.GetHashCode() ^ this._ownerType.GetHashCode();
        //            }
        //            
        //            public override bool Equals(object o)
        //            {
        //                return (((o != null) && (o is DependencyProperty.FromNameKey)) && this.Equals((DependencyProperty.FromNameKey) o));
        //            }
        //            
        //            public bool Equals(DependencyProperty.FromNameKey key)
        //            {
        //                return (this._name.Equals(key._name) && (this._ownerType == key._ownerType));
        //            }
        //            
        //            public override int GetHashCode()
        //            {
        //                return this._hashCode;
        //            }
        //            
        //            public void UpdateNameKey(Type ownerType)
        //            {
        //                this._ownerType = ownerType;
        //                this._hashCode = this._name.GetHashCode() ^ this._ownerType.GetHashCode();
        //            }
        //        }
        //    }
        //}
    }
}
