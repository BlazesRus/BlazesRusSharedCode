if(NodeType == "NiObject" || NodeType == "NiObjectNode")
{
	ListSize = TargetObjectRegistry.NiObject_Registry.Size();
	ObjectRegistryClasses::NiObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsAlphaAnimator" || NodeType == "Ni3dsAlphaAnimatorNode")
{
	ListSize = TargetObjectRegistry.Ni3dsAlphaAnimator_Registry.Size();
	ObjectRegistryClasses::Ni3dsAlphaAnimatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsAnimationNode" || NodeType == "Ni3dsAnimationNodeNode")
{
	ListSize = TargetObjectRegistry.Ni3dsAnimationNode_Registry.Size();
	ObjectRegistryClasses::Ni3dsAnimationNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsColorAnimator" || NodeType == "Ni3dsColorAnimatorNode")
{
	ListSize = TargetObjectRegistry.Ni3dsColorAnimator_Registry.Size();
	ObjectRegistryClasses::Ni3dsColorAnimatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsMorphShape" || NodeType == "Ni3dsMorphShapeNode")
{
	ListSize = TargetObjectRegistry.Ni3dsMorphShape_Registry.Size();
	ObjectRegistryClasses::Ni3dsMorphShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsParticleSystem" || NodeType == "Ni3dsParticleSystemNode")
{
	ListSize = TargetObjectRegistry.Ni3dsParticleSystem_Registry.Size();
	ObjectRegistryClasses::Ni3dsParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Ni3dsPathController" || NodeType == "Ni3dsPathControllerNode")
{
	ListSize = TargetObjectRegistry.Ni3dsPathController_Registry.Size();
	ObjectRegistryClasses::Ni3dsPathControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleModifier" || NodeType == "NiParticleModifierNode")
{
	ListSize = TargetObjectRegistry.NiParticleModifier_Registry.Size();
	ObjectRegistryClasses::NiParticleModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysCollider" || NodeType == "NiPSysColliderNode")
{
	ListSize = TargetObjectRegistry.NiPSysCollider_Registry.Size();
	ObjectRegistryClasses::NiPSysColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkRefObject" || NodeType == "bhkRefObjectNode")
{
	ListSize = TargetObjectRegistry.bhkRefObject_Registry.Size();
	ObjectRegistryClasses::bhkRefObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkSerializable" || NodeType == "bhkSerializableNode")
{
	ListSize = TargetObjectRegistry.bhkSerializable_Registry.Size();
	ObjectRegistryClasses::bhkSerializableNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkWorldObject" || NodeType == "bhkWorldObjectNode")
{
	ListSize = TargetObjectRegistry.bhkWorldObject_Registry.Size();
	ObjectRegistryClasses::bhkWorldObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkPhantom" || NodeType == "bhkPhantomNode")
{
	ListSize = TargetObjectRegistry.bhkPhantom_Registry.Size();
	ObjectRegistryClasses::bhkPhantomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkShapePhantom" || NodeType == "bhkShapePhantomNode")
{
	ListSize = TargetObjectRegistry.bhkShapePhantom_Registry.Size();
	ObjectRegistryClasses::bhkShapePhantomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkSimpleShapePhantom" || NodeType == "bhkSimpleShapePhantomNode")
{
	ListSize = TargetObjectRegistry.bhkSimpleShapePhantom_Registry.Size();
	ObjectRegistryClasses::bhkSimpleShapePhantomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkEntity" || NodeType == "bhkEntityNode")
{
	ListSize = TargetObjectRegistry.bhkEntity_Registry.Size();
	ObjectRegistryClasses::bhkEntityNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkRigidBody" || NodeType == "bhkRigidBodyNode")
{
	ListSize = TargetObjectRegistry.bhkRigidBody_Registry.Size();
	ObjectRegistryClasses::bhkRigidBodyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkRigidBodyT" || NodeType == "bhkRigidBodyTNode")
{
	ListSize = TargetObjectRegistry.bhkRigidBodyT_Registry.Size();
	ObjectRegistryClasses::bhkRigidBodyTNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkConstraint" || NodeType == "bhkConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkConstraint_Registry.Size();
	ObjectRegistryClasses::bhkConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkLimitedHingeConstraint" || NodeType == "bhkLimitedHingeConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkLimitedHingeConstraint_Registry.Size();
	ObjectRegistryClasses::bhkLimitedHingeConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkMalleableConstraint" || NodeType == "bhkMalleableConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkMalleableConstraint_Registry.Size();
	ObjectRegistryClasses::bhkMalleableConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkStiffSpringConstraint" || NodeType == "bhkStiffSpringConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkStiffSpringConstraint_Registry.Size();
	ObjectRegistryClasses::bhkStiffSpringConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkRagdollConstraint" || NodeType == "bhkRagdollConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkRagdollConstraint_Registry.Size();
	ObjectRegistryClasses::bhkRagdollConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkPrismaticConstraint" || NodeType == "bhkPrismaticConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkPrismaticConstraint_Registry.Size();
	ObjectRegistryClasses::bhkPrismaticConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkHingeConstraint" || NodeType == "bhkHingeConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkHingeConstraint_Registry.Size();
	ObjectRegistryClasses::bhkHingeConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBallAndSocketConstraint" || NodeType == "bhkBallAndSocketConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkBallAndSocketConstraint_Registry.Size();
	ObjectRegistryClasses::bhkBallAndSocketConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBallSocketConstraintChain" || NodeType == "bhkBallSocketConstraintChainNode")
{
	ListSize = TargetObjectRegistry.bhkBallSocketConstraintChain_Registry.Size();
	ObjectRegistryClasses::bhkBallSocketConstraintChainNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkShape" || NodeType == "bhkShapeNode")
{
	ListSize = TargetObjectRegistry.bhkShape_Registry.Size();
	ObjectRegistryClasses::bhkShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkTransformShape" || NodeType == "bhkTransformShapeNode")
{
	ListSize = TargetObjectRegistry.bhkTransformShape_Registry.Size();
	ObjectRegistryClasses::bhkTransformShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkSphereRepShape" || NodeType == "bhkSphereRepShapeNode")
{
	ListSize = TargetObjectRegistry.bhkSphereRepShape_Registry.Size();
	ObjectRegistryClasses::bhkSphereRepShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkConvexShape" || NodeType == "bhkConvexShapeNode")
{
	ListSize = TargetObjectRegistry.bhkConvexShape_Registry.Size();
	ObjectRegistryClasses::bhkConvexShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkSphereShape" || NodeType == "bhkSphereShapeNode")
{
	ListSize = TargetObjectRegistry.bhkSphereShape_Registry.Size();
	ObjectRegistryClasses::bhkSphereShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkCapsuleShape" || NodeType == "bhkCapsuleShapeNode")
{
	ListSize = TargetObjectRegistry.bhkCapsuleShape_Registry.Size();
	ObjectRegistryClasses::bhkCapsuleShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBoxShape" || NodeType == "bhkBoxShapeNode")
{
	ListSize = TargetObjectRegistry.bhkBoxShape_Registry.Size();
	ObjectRegistryClasses::bhkBoxShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkConvexVerticesShape" || NodeType == "bhkConvexVerticesShapeNode")
{
	ListSize = TargetObjectRegistry.bhkConvexVerticesShape_Registry.Size();
	ObjectRegistryClasses::bhkConvexVerticesShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkConvexTransformShape" || NodeType == "bhkConvexTransformShapeNode")
{
	ListSize = TargetObjectRegistry.bhkConvexTransformShape_Registry.Size();
	ObjectRegistryClasses::bhkConvexTransformShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkMultiSphereShape" || NodeType == "bhkMultiSphereShapeNode")
{
	ListSize = TargetObjectRegistry.bhkMultiSphereShape_Registry.Size();
	ObjectRegistryClasses::bhkMultiSphereShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBvTreeShape" || NodeType == "bhkBvTreeShapeNode")
{
	ListSize = TargetObjectRegistry.bhkBvTreeShape_Registry.Size();
	ObjectRegistryClasses::bhkBvTreeShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkMoppBvTreeShape" || NodeType == "bhkMoppBvTreeShapeNode")
{
	ListSize = TargetObjectRegistry.bhkMoppBvTreeShape_Registry.Size();
	ObjectRegistryClasses::bhkMoppBvTreeShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkShapeCollection" || NodeType == "bhkShapeCollectionNode")
{
	ListSize = TargetObjectRegistry.bhkShapeCollection_Registry.Size();
	ObjectRegistryClasses::bhkShapeCollectionNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkListShape" || NodeType == "bhkListShapeNode")
{
	ListSize = TargetObjectRegistry.bhkListShape_Registry.Size();
	ObjectRegistryClasses::bhkListShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkMeshShape" || NodeType == "bhkMeshShapeNode")
{
	ListSize = TargetObjectRegistry.bhkMeshShape_Registry.Size();
	ObjectRegistryClasses::bhkMeshShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkPackedNiTriStripsShape" || NodeType == "bhkPackedNiTriStripsShapeNode")
{
	ListSize = TargetObjectRegistry.bhkPackedNiTriStripsShape_Registry.Size();
	ObjectRegistryClasses::bhkPackedNiTriStripsShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkNiTriStripsShape" || NodeType == "bhkNiTriStripsShapeNode")
{
	ListSize = TargetObjectRegistry.bhkNiTriStripsShape_Registry.Size();
	ObjectRegistryClasses::bhkNiTriStripsShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiExtraData" || NodeType == "NiExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiExtraData_Registry.Size();
	ObjectRegistryClasses::NiExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiInterpolator" || NodeType == "NiInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiInterpolator_Registry.Size();
	ObjectRegistryClasses::NiInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiKeyBasedInterpolator" || NodeType == "NiKeyBasedInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiKeyBasedInterpolator_Registry.Size();
	ObjectRegistryClasses::NiKeyBasedInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatInterpolator" || NodeType == "NiFloatInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiFloatInterpolator_Registry.Size();
	ObjectRegistryClasses::NiFloatInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTransformInterpolator" || NodeType == "NiTransformInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiTransformInterpolator_Registry.Size();
	ObjectRegistryClasses::NiTransformInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPoint3Interpolator" || NodeType == "NiPoint3InterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiPoint3Interpolator_Registry.Size();
	ObjectRegistryClasses::NiPoint3InterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPathInterpolator" || NodeType == "NiPathInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiPathInterpolator_Registry.Size();
	ObjectRegistryClasses::NiPathInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBoolInterpolator" || NodeType == "NiBoolInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBoolInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBoolInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBoolTimelineInterpolator" || NodeType == "NiBoolTimelineInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBoolTimelineInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBoolTimelineInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBlendInterpolator" || NodeType == "NiBlendInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBlendInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBlendInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineInterpolator" || NodeType == "NiBSplineInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiObjectNET" || NodeType == "NiObjectNETNode")
{
	ListSize = TargetObjectRegistry.NiObjectNET_Registry.Size();
	ObjectRegistryClasses::NiObjectNETNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiCollisionObject" || NodeType == "NiCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.NiCollisionObject_Registry.Size();
	ObjectRegistryClasses::NiCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiCollisionData" || NodeType == "NiCollisionDataNode")
{
	ListSize = TargetObjectRegistry.NiCollisionData_Registry.Size();
	ObjectRegistryClasses::NiCollisionDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkNiCollisionObject" || NodeType == "bhkNiCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkNiCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkNiCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkCollisionObject" || NodeType == "bhkCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBlendCollisionObject" || NodeType == "bhkBlendCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkBlendCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkBlendCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkPCollisionObject" || NodeType == "bhkPCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkPCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkPCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkSPCollisionObject" || NodeType == "bhkSPCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkSPCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkSPCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAVObject" || NodeType == "NiAVObjectNode")
{
	ListSize = TargetObjectRegistry.NiAVObject_Registry.Size();
	ObjectRegistryClasses::NiAVObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiDynamicEffect" || NodeType == "NiDynamicEffectNode")
{
	ListSize = TargetObjectRegistry.NiDynamicEffect_Registry.Size();
	ObjectRegistryClasses::NiDynamicEffectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLight" || NodeType == "NiLightNode")
{
	ListSize = TargetObjectRegistry.NiLight_Registry.Size();
	ObjectRegistryClasses::NiLightNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiProperty" || NodeType == "NiPropertyNode")
{
	ListSize = TargetObjectRegistry.NiProperty_Registry.Size();
	ObjectRegistryClasses::NiPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTransparentProperty" || NodeType == "NiTransparentPropertyNode")
{
	ListSize = TargetObjectRegistry.NiTransparentProperty_Registry.Size();
	ObjectRegistryClasses::NiTransparentPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysModifier" || NodeType == "NiPSysModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitter" || NodeType == "NiPSysEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysVolumeEmitter" || NodeType == "NiPSysVolumeEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysVolumeEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysVolumeEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTimeController" || NodeType == "NiTimeControllerNode")
{
	ListSize = TargetObjectRegistry.NiTimeController_Registry.Size();
	ObjectRegistryClasses::NiTimeControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiInterpController" || NodeType == "NiInterpControllerNode")
{
	ListSize = TargetObjectRegistry.NiInterpController_Registry.Size();
	ObjectRegistryClasses::NiInterpControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMultiTargetTransformController" || NodeType == "NiMultiTargetTransformControllerNode")
{
	ListSize = TargetObjectRegistry.NiMultiTargetTransformController_Registry.Size();
	ObjectRegistryClasses::NiMultiTargetTransformControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiGeomMorpherController" || NodeType == "NiGeomMorpherControllerNode")
{
	ListSize = TargetObjectRegistry.NiGeomMorpherController_Registry.Size();
	ObjectRegistryClasses::NiGeomMorpherControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMorphController" || NodeType == "NiMorphControllerNode")
{
	ListSize = TargetObjectRegistry.NiMorphController_Registry.Size();
	ObjectRegistryClasses::NiMorphControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMorpherController" || NodeType == "NiMorpherControllerNode")
{
	ListSize = TargetObjectRegistry.NiMorpherController_Registry.Size();
	ObjectRegistryClasses::NiMorpherControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSingleInterpController" || NodeType == "NiSingleInterpControllerNode")
{
	ListSize = TargetObjectRegistry.NiSingleInterpController_Registry.Size();
	ObjectRegistryClasses::NiSingleInterpControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiKeyframeController" || NodeType == "NiKeyframeControllerNode")
{
	ListSize = TargetObjectRegistry.NiKeyframeController_Registry.Size();
	ObjectRegistryClasses::NiKeyframeControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTransformController" || NodeType == "NiTransformControllerNode")
{
	ListSize = TargetObjectRegistry.NiTransformController_Registry.Size();
	ObjectRegistryClasses::NiTransformControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysModifierCtlr" || NodeType == "NiPSysModifierCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysModifierCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysModifierCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterCtlr" || NodeType == "NiPSysEmitterCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysModifierBoolCtlr" || NodeType == "NiPSysModifierBoolCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysModifierBoolCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysModifierBoolCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysModifierActiveCtlr" || NodeType == "NiPSysModifierActiveCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysModifierActiveCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysModifierActiveCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysModifierFloatCtlr" || NodeType == "NiPSysModifierFloatCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysModifierFloatCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysModifierFloatCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterDeclinationCtlr" || NodeType == "NiPSysEmitterDeclinationCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterDeclinationCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterDeclinationCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterDeclinationVarCtlr" || NodeType == "NiPSysEmitterDeclinationVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterDeclinationVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterDeclinationVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterInitialRadiusCtlr" || NodeType == "NiPSysEmitterInitialRadiusCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterInitialRadiusCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterInitialRadiusCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterLifeSpanCtlr" || NodeType == "NiPSysEmitterLifeSpanCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterLifeSpanCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterLifeSpanCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterSpeedCtlr" || NodeType == "NiPSysEmitterSpeedCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterSpeedCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterSpeedCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysGravityStrengthCtlr" || NodeType == "NiPSysGravityStrengthCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysGravityStrengthCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysGravityStrengthCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatInterpController" || NodeType == "NiFloatInterpControllerNode")
{
	ListSize = TargetObjectRegistry.NiFloatInterpController_Registry.Size();
	ObjectRegistryClasses::NiFloatInterpControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFlipController" || NodeType == "NiFlipControllerNode")
{
	ListSize = TargetObjectRegistry.NiFlipController_Registry.Size();
	ObjectRegistryClasses::NiFlipControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAlphaController" || NodeType == "NiAlphaControllerNode")
{
	ListSize = TargetObjectRegistry.NiAlphaController_Registry.Size();
	ObjectRegistryClasses::NiAlphaControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTextureTransformController" || NodeType == "NiTextureTransformControllerNode")
{
	ListSize = TargetObjectRegistry.NiTextureTransformController_Registry.Size();
	ObjectRegistryClasses::NiTextureTransformControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLightDimmerController" || NodeType == "NiLightDimmerControllerNode")
{
	ListSize = TargetObjectRegistry.NiLightDimmerController_Registry.Size();
	ObjectRegistryClasses::NiLightDimmerControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBoolInterpController" || NodeType == "NiBoolInterpControllerNode")
{
	ListSize = TargetObjectRegistry.NiBoolInterpController_Registry.Size();
	ObjectRegistryClasses::NiBoolInterpControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiVisController" || NodeType == "NiVisControllerNode")
{
	ListSize = TargetObjectRegistry.NiVisController_Registry.Size();
	ObjectRegistryClasses::NiVisControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPoint3InterpController" || NodeType == "NiPoint3InterpControllerNode")
{
	ListSize = TargetObjectRegistry.NiPoint3InterpController_Registry.Size();
	ObjectRegistryClasses::NiPoint3InterpControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMaterialColorController" || NodeType == "NiMaterialColorControllerNode")
{
	ListSize = TargetObjectRegistry.NiMaterialColorController_Registry.Size();
	ObjectRegistryClasses::NiMaterialColorControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLightColorController" || NodeType == "NiLightColorControllerNode")
{
	ListSize = TargetObjectRegistry.NiLightColorController_Registry.Size();
	ObjectRegistryClasses::NiLightColorControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiExtraDataController" || NodeType == "NiExtraDataControllerNode")
{
	ListSize = TargetObjectRegistry.NiExtraDataController_Registry.Size();
	ObjectRegistryClasses::NiExtraDataControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatExtraDataController" || NodeType == "NiFloatExtraDataControllerNode")
{
	ListSize = TargetObjectRegistry.NiFloatExtraDataController_Registry.Size();
	ObjectRegistryClasses::NiFloatExtraDataControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBoneLODController" || NodeType == "NiBoneLODControllerNode")
{
	ListSize = TargetObjectRegistry.NiBoneLODController_Registry.Size();
	ObjectRegistryClasses::NiBoneLODControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSBoneLODController" || NodeType == "NiBSBoneLODControllerNode")
{
	ListSize = TargetObjectRegistry.NiBSBoneLODController_Registry.Size();
	ObjectRegistryClasses::NiBSBoneLODControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiGeometry" || NodeType == "NiGeometryNode")
{
	ListSize = TargetObjectRegistry.NiGeometry_Registry.Size();
	ObjectRegistryClasses::NiGeometryNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriBasedGeom" || NodeType == "NiTriBasedGeomNode")
{
	ListSize = TargetObjectRegistry.NiTriBasedGeom_Registry.Size();
	ObjectRegistryClasses::NiTriBasedGeomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiGeometryData" || NodeType == "NiGeometryDataNode")
{
	ListSize = TargetObjectRegistry.NiGeometryData_Registry.Size();
	ObjectRegistryClasses::NiGeometryDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "AbstractAdditionalGeometryData" || NodeType == "AbstractAdditionalGeometryDataNode")
{
	ListSize = TargetObjectRegistry.AbstractAdditionalGeometryData_Registry.Size();
	ObjectRegistryClasses::AbstractAdditionalGeometryDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriBasedGeomData" || NodeType == "NiTriBasedGeomDataNode")
{
	ListSize = TargetObjectRegistry.NiTriBasedGeomData_Registry.Size();
	ObjectRegistryClasses::NiTriBasedGeomDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBlendController" || NodeType == "bhkBlendControllerNode")
{
	ListSize = TargetObjectRegistry.bhkBlendController_Registry.Size();
	ObjectRegistryClasses::bhkBlendControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSBound" || NodeType == "BSBoundNode")
{
	ListSize = TargetObjectRegistry.BSBound_Registry.Size();
	ObjectRegistryClasses::BSBoundNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSFurnitureMarker" || NodeType == "BSFurnitureMarkerNode")
{
	ListSize = TargetObjectRegistry.BSFurnitureMarker_Registry.Size();
	ObjectRegistryClasses::BSFurnitureMarkerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSParentVelocityModifier" || NodeType == "BSParentVelocityModifierNode")
{
	ListSize = TargetObjectRegistry.BSParentVelocityModifier_Registry.Size();
	ObjectRegistryClasses::BSParentVelocityModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysArrayEmitter" || NodeType == "BSPSysArrayEmitterNode")
{
	ListSize = TargetObjectRegistry.BSPSysArrayEmitter_Registry.Size();
	ObjectRegistryClasses::BSPSysArrayEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSWindModifier" || NodeType == "BSWindModifierNode")
{
	ListSize = TargetObjectRegistry.BSWindModifier_Registry.Size();
	ObjectRegistryClasses::BSWindModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "hkPackedNiTriStripsData" || NodeType == "hkPackedNiTriStripsDataNode")
{
	ListSize = TargetObjectRegistry.hkPackedNiTriStripsData_Registry.Size();
	ObjectRegistryClasses::hkPackedNiTriStripsDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAlphaProperty" || NodeType == "NiAlphaPropertyNode")
{
	ListSize = TargetObjectRegistry.NiAlphaProperty_Registry.Size();
	ObjectRegistryClasses::NiAlphaPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAmbientLight" || NodeType == "NiAmbientLightNode")
{
	ListSize = TargetObjectRegistry.NiAmbientLight_Registry.Size();
	ObjectRegistryClasses::NiAmbientLightNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticlesData" || NodeType == "NiParticlesDataNode")
{
	ListSize = TargetObjectRegistry.NiParticlesData_Registry.Size();
	ObjectRegistryClasses::NiParticlesDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRotatingParticlesData" || NodeType == "NiRotatingParticlesDataNode")
{
	ListSize = TargetObjectRegistry.NiRotatingParticlesData_Registry.Size();
	ObjectRegistryClasses::NiRotatingParticlesDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAutoNormalParticlesData" || NodeType == "NiAutoNormalParticlesDataNode")
{
	ListSize = TargetObjectRegistry.NiAutoNormalParticlesData_Registry.Size();
	ObjectRegistryClasses::NiAutoNormalParticlesDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysData" || NodeType == "NiPSysDataNode")
{
	ListSize = TargetObjectRegistry.NiPSysData_Registry.Size();
	ObjectRegistryClasses::NiPSysDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMeshPSysData" || NodeType == "NiMeshPSysDataNode")
{
	ListSize = TargetObjectRegistry.NiMeshPSysData_Registry.Size();
	ObjectRegistryClasses::NiMeshPSysDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBinaryExtraData" || NodeType == "NiBinaryExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiBinaryExtraData_Registry.Size();
	ObjectRegistryClasses::NiBinaryExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBinaryVoxelExtraData" || NodeType == "NiBinaryVoxelExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiBinaryVoxelExtraData_Registry.Size();
	ObjectRegistryClasses::NiBinaryVoxelExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBinaryVoxelData" || NodeType == "NiBinaryVoxelDataNode")
{
	ListSize = TargetObjectRegistry.NiBinaryVoxelData_Registry.Size();
	ObjectRegistryClasses::NiBinaryVoxelDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBlendBoolInterpolator" || NodeType == "NiBlendBoolInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBlendBoolInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBlendBoolInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBlendFloatInterpolator" || NodeType == "NiBlendFloatInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBlendFloatInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBlendFloatInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBlendPoint3Interpolator" || NodeType == "NiBlendPoint3InterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBlendPoint3Interpolator_Registry.Size();
	ObjectRegistryClasses::NiBlendPoint3InterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBlendTransformInterpolator" || NodeType == "NiBlendTransformInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBlendTransformInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBlendTransformInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBoolData" || NodeType == "NiBoolDataNode")
{
	ListSize = TargetObjectRegistry.NiBoolData_Registry.Size();
	ObjectRegistryClasses::NiBoolDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBooleanExtraData" || NodeType == "NiBooleanExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiBooleanExtraData_Registry.Size();
	ObjectRegistryClasses::NiBooleanExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineBasisData" || NodeType == "NiBSplineBasisDataNode")
{
	ListSize = TargetObjectRegistry.NiBSplineBasisData_Registry.Size();
	ObjectRegistryClasses::NiBSplineBasisDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineFloatInterpolator" || NodeType == "NiBSplineFloatInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineFloatInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineFloatInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineCompFloatInterpolator" || NodeType == "NiBSplineCompFloatInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineCompFloatInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineCompFloatInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplinePoint3Interpolator" || NodeType == "NiBSplinePoint3InterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplinePoint3Interpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplinePoint3InterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineCompPoint3Interpolator" || NodeType == "NiBSplineCompPoint3InterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineCompPoint3Interpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineCompPoint3InterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineTransformInterpolator" || NodeType == "NiBSplineTransformInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineTransformInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineTransformInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineCompTransformInterpolator" || NodeType == "NiBSplineCompTransformInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineCompTransformInterpolator_Registry.Size();
	ObjectRegistryClasses::NiBSplineCompTransformInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSRotAccumTransfInterpolator" || NodeType == "BSRotAccumTransfInterpolatorNode")
{
	ListSize = TargetObjectRegistry.BSRotAccumTransfInterpolator_Registry.Size();
	ObjectRegistryClasses::BSRotAccumTransfInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineData" || NodeType == "NiBSplineDataNode")
{
	ListSize = TargetObjectRegistry.NiBSplineData_Registry.Size();
	ObjectRegistryClasses::NiBSplineDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiCamera" || NodeType == "NiCameraNode")
{
	ListSize = TargetObjectRegistry.NiCamera_Registry.Size();
	ObjectRegistryClasses::NiCameraNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiColorData" || NodeType == "NiColorDataNode")
{
	ListSize = TargetObjectRegistry.NiColorData_Registry.Size();
	ObjectRegistryClasses::NiColorDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiColorExtraData" || NodeType == "NiColorExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiColorExtraData_Registry.Size();
	ObjectRegistryClasses::NiColorExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiControllerManager" || NodeType == "NiControllerManagerNode")
{
	ListSize = TargetObjectRegistry.NiControllerManager_Registry.Size();
	ObjectRegistryClasses::NiControllerManagerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSequence" || NodeType == "NiSequenceNode")
{
	ListSize = TargetObjectRegistry.NiSequence_Registry.Size();
	ObjectRegistryClasses::NiSequenceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiControllerSequence" || NodeType == "NiControllerSequenceNode")
{
	ListSize = TargetObjectRegistry.NiControllerSequence_Registry.Size();
	ObjectRegistryClasses::NiControllerSequenceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAVObjectPalette" || NodeType == "NiAVObjectPaletteNode")
{
	ListSize = TargetObjectRegistry.NiAVObjectPalette_Registry.Size();
	ObjectRegistryClasses::NiAVObjectPaletteNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiDefaultAVObjectPalette" || NodeType == "NiDefaultAVObjectPaletteNode")
{
	ListSize = TargetObjectRegistry.NiDefaultAVObjectPalette_Registry.Size();
	ObjectRegistryClasses::NiDefaultAVObjectPaletteNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiDirectionalLight" || NodeType == "NiDirectionalLightNode")
{
	ListSize = TargetObjectRegistry.NiDirectionalLight_Registry.Size();
	ObjectRegistryClasses::NiDirectionalLightNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiDitherProperty" || NodeType == "NiDitherPropertyNode")
{
	ListSize = TargetObjectRegistry.NiDitherProperty_Registry.Size();
	ObjectRegistryClasses::NiDitherPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRollController" || NodeType == "NiRollControllerNode")
{
	ListSize = TargetObjectRegistry.NiRollController_Registry.Size();
	ObjectRegistryClasses::NiRollControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatData" || NodeType == "NiFloatDataNode")
{
	ListSize = TargetObjectRegistry.NiFloatData_Registry.Size();
	ObjectRegistryClasses::NiFloatDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatExtraData" || NodeType == "NiFloatExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiFloatExtraData_Registry.Size();
	ObjectRegistryClasses::NiFloatExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFloatsExtraData" || NodeType == "NiFloatsExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiFloatsExtraData_Registry.Size();
	ObjectRegistryClasses::NiFloatsExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFogProperty" || NodeType == "NiFogPropertyNode")
{
	ListSize = TargetObjectRegistry.NiFogProperty_Registry.Size();
	ObjectRegistryClasses::NiFogPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiGravity" || NodeType == "NiGravityNode")
{
	ListSize = TargetObjectRegistry.NiGravity_Registry.Size();
	ObjectRegistryClasses::NiGravityNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiIntegerExtraData" || NodeType == "NiIntegerExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiIntegerExtraData_Registry.Size();
	ObjectRegistryClasses::NiIntegerExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSXFlags" || NodeType == "BSXFlagsNode")
{
	ListSize = TargetObjectRegistry.BSXFlags_Registry.Size();
	ObjectRegistryClasses::BSXFlagsNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiIntegersExtraData" || NodeType == "NiIntegersExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiIntegersExtraData_Registry.Size();
	ObjectRegistryClasses::NiIntegersExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSKeyframeController" || NodeType == "BSKeyframeControllerNode")
{
	ListSize = TargetObjectRegistry.BSKeyframeController_Registry.Size();
	ObjectRegistryClasses::BSKeyframeControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiKeyframeData" || NodeType == "NiKeyframeDataNode")
{
	ListSize = TargetObjectRegistry.NiKeyframeData_Registry.Size();
	ObjectRegistryClasses::NiKeyframeDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLookAtController" || NodeType == "NiLookAtControllerNode")
{
	ListSize = TargetObjectRegistry.NiLookAtController_Registry.Size();
	ObjectRegistryClasses::NiLookAtControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLookAtInterpolator" || NodeType == "NiLookAtInterpolatorNode")
{
	ListSize = TargetObjectRegistry.NiLookAtInterpolator_Registry.Size();
	ObjectRegistryClasses::NiLookAtInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMaterialProperty" || NodeType == "NiMaterialPropertyNode")
{
	ListSize = TargetObjectRegistry.NiMaterialProperty_Registry.Size();
	ObjectRegistryClasses::NiMaterialPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMorphData" || NodeType == "NiMorphDataNode")
{
	ListSize = TargetObjectRegistry.NiMorphData_Registry.Size();
	ObjectRegistryClasses::NiMorphDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiNode" || NodeType == "NiNodeNode")
{
	ListSize = TargetObjectRegistry.NiNode_Registry.Size();
	ObjectRegistryClasses::NiNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBone" || NodeType == "NiBoneNode")
{
	ListSize = TargetObjectRegistry.NiBone_Registry.Size();
	ObjectRegistryClasses::NiBoneNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "AvoidNode" || NodeType == "AvoidNodeNode")
{
	ListSize = TargetObjectRegistry.AvoidNode_Registry.Size();
	ObjectRegistryClasses::AvoidNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "FxWidget" || NodeType == "FxWidgetNode")
{
	ListSize = TargetObjectRegistry.FxWidget_Registry.Size();
	ObjectRegistryClasses::FxWidgetNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "FxButton" || NodeType == "FxButtonNode")
{
	ListSize = TargetObjectRegistry.FxButton_Registry.Size();
	ObjectRegistryClasses::FxButtonNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "FxRadioButton" || NodeType == "FxRadioButtonNode")
{
	ListSize = TargetObjectRegistry.FxRadioButton_Registry.Size();
	ObjectRegistryClasses::FxRadioButtonNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBillboardNode" || NodeType == "NiBillboardNodeNode")
{
	ListSize = TargetObjectRegistry.NiBillboardNode_Registry.Size();
	ObjectRegistryClasses::NiBillboardNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSAnimationNode" || NodeType == "NiBSAnimationNodeNode")
{
	ListSize = TargetObjectRegistry.NiBSAnimationNode_Registry.Size();
	ObjectRegistryClasses::NiBSAnimationNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSParticleNode" || NodeType == "NiBSParticleNodeNode")
{
	ListSize = TargetObjectRegistry.NiBSParticleNode_Registry.Size();
	ObjectRegistryClasses::NiBSParticleNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSwitchNode" || NodeType == "NiSwitchNodeNode")
{
	ListSize = TargetObjectRegistry.NiSwitchNode_Registry.Size();
	ObjectRegistryClasses::NiSwitchNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLODNode" || NodeType == "NiLODNodeNode")
{
	ListSize = TargetObjectRegistry.NiLODNode_Registry.Size();
	ObjectRegistryClasses::NiLODNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPalette" || NodeType == "NiPaletteNode")
{
	ListSize = TargetObjectRegistry.NiPalette_Registry.Size();
	ObjectRegistryClasses::NiPaletteNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleBomb" || NodeType == "NiParticleBombNode")
{
	ListSize = TargetObjectRegistry.NiParticleBomb_Registry.Size();
	ObjectRegistryClasses::NiParticleBombNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleColorModifier" || NodeType == "NiParticleColorModifierNode")
{
	ListSize = TargetObjectRegistry.NiParticleColorModifier_Registry.Size();
	ObjectRegistryClasses::NiParticleColorModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleGrowFade" || NodeType == "NiParticleGrowFadeNode")
{
	ListSize = TargetObjectRegistry.NiParticleGrowFade_Registry.Size();
	ObjectRegistryClasses::NiParticleGrowFadeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleMeshModifier" || NodeType == "NiParticleMeshModifierNode")
{
	ListSize = TargetObjectRegistry.NiParticleMeshModifier_Registry.Size();
	ObjectRegistryClasses::NiParticleMeshModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleRotation" || NodeType == "NiParticleRotationNode")
{
	ListSize = TargetObjectRegistry.NiParticleRotation_Registry.Size();
	ObjectRegistryClasses::NiParticleRotationNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticles" || NodeType == "NiParticlesNode")
{
	ListSize = TargetObjectRegistry.NiParticles_Registry.Size();
	ObjectRegistryClasses::NiParticlesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAutoNormalParticles" || NodeType == "NiAutoNormalParticlesNode")
{
	ListSize = TargetObjectRegistry.NiAutoNormalParticles_Registry.Size();
	ObjectRegistryClasses::NiAutoNormalParticlesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleMeshes" || NodeType == "NiParticleMeshesNode")
{
	ListSize = TargetObjectRegistry.NiParticleMeshes_Registry.Size();
	ObjectRegistryClasses::NiParticleMeshesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleMeshesData" || NodeType == "NiParticleMeshesDataNode")
{
	ListSize = TargetObjectRegistry.NiParticleMeshesData_Registry.Size();
	ObjectRegistryClasses::NiParticleMeshesDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleSystem" || NodeType == "NiParticleSystemNode")
{
	ListSize = TargetObjectRegistry.NiParticleSystem_Registry.Size();
	ObjectRegistryClasses::NiParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMeshParticleSystem" || NodeType == "NiMeshParticleSystemNode")
{
	ListSize = TargetObjectRegistry.NiMeshParticleSystem_Registry.Size();
	ObjectRegistryClasses::NiMeshParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiParticleSystemController" || NodeType == "NiParticleSystemControllerNode")
{
	ListSize = TargetObjectRegistry.NiParticleSystemController_Registry.Size();
	ObjectRegistryClasses::NiParticleSystemControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSPArrayController" || NodeType == "NiBSPArrayControllerNode")
{
	ListSize = TargetObjectRegistry.NiBSPArrayController_Registry.Size();
	ObjectRegistryClasses::NiBSPArrayControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPathController" || NodeType == "NiPathControllerNode")
{
	ListSize = TargetObjectRegistry.NiPathController_Registry.Size();
	ObjectRegistryClasses::NiPathControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "ATextureRenderData" || NodeType == "ATextureRenderDataNode")
{
	ListSize = TargetObjectRegistry.ATextureRenderData_Registry.Size();
	ObjectRegistryClasses::ATextureRenderDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPersistentSrcTextureRendererData" || NodeType == "NiPersistentSrcTextureRendererDataNode")
{
	ListSize = TargetObjectRegistry.NiPersistentSrcTextureRendererData_Registry.Size();
	ObjectRegistryClasses::NiPersistentSrcTextureRendererDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPixelData" || NodeType == "NiPixelDataNode")
{
	ListSize = TargetObjectRegistry.NiPixelData_Registry.Size();
	ObjectRegistryClasses::NiPixelDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPlanarCollider" || NodeType == "NiPlanarColliderNode")
{
	ListSize = TargetObjectRegistry.NiPlanarCollider_Registry.Size();
	ObjectRegistryClasses::NiPlanarColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPointLight" || NodeType == "NiPointLightNode")
{
	ListSize = TargetObjectRegistry.NiPointLight_Registry.Size();
	ObjectRegistryClasses::NiPointLightNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPosData" || NodeType == "NiPosDataNode")
{
	ListSize = TargetObjectRegistry.NiPosData_Registry.Size();
	ObjectRegistryClasses::NiPosDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysAgeDeathModifier" || NodeType == "NiPSysAgeDeathModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysAgeDeathModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysAgeDeathModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysBombModifier" || NodeType == "NiPSysBombModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysBombModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysBombModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysBoundUpdateModifier" || NodeType == "NiPSysBoundUpdateModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysBoundUpdateModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysBoundUpdateModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysBoxEmitter" || NodeType == "NiPSysBoxEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysBoxEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysBoxEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysColliderManager" || NodeType == "NiPSysColliderManagerNode")
{
	ListSize = TargetObjectRegistry.NiPSysColliderManager_Registry.Size();
	ObjectRegistryClasses::NiPSysColliderManagerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysColorModifier" || NodeType == "NiPSysColorModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysColorModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysColorModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysCylinderEmitter" || NodeType == "NiPSysCylinderEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysCylinderEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysCylinderEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysDragModifier" || NodeType == "NiPSysDragModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysDragModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysDragModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterCtlrData" || NodeType == "NiPSysEmitterCtlrDataNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterCtlrData_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterCtlrDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysGravityModifier" || NodeType == "NiPSysGravityModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysGravityModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysGravityModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysGrowFadeModifier" || NodeType == "NiPSysGrowFadeModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysGrowFadeModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysGrowFadeModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysMeshEmitter" || NodeType == "NiPSysMeshEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysMeshEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysMeshEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysMeshUpdateModifier" || NodeType == "NiPSysMeshUpdateModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysMeshUpdateModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysMeshUpdateModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysInheritVelocityModifier" || NodeType == "BSPSysInheritVelocityModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysInheritVelocityModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysInheritVelocityModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysHavokUpdateModifier" || NodeType == "BSPSysHavokUpdateModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysHavokUpdateModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysHavokUpdateModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysRecycleBoundModifier" || NodeType == "BSPSysRecycleBoundModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysRecycleBoundModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysRecycleBoundModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysSubTexModifier" || NodeType == "BSPSysSubTexModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysSubTexModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysSubTexModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysPlanarCollider" || NodeType == "NiPSysPlanarColliderNode")
{
	ListSize = TargetObjectRegistry.NiPSysPlanarCollider_Registry.Size();
	ObjectRegistryClasses::NiPSysPlanarColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysSphericalCollider" || NodeType == "NiPSysSphericalColliderNode")
{
	ListSize = TargetObjectRegistry.NiPSysSphericalCollider_Registry.Size();
	ObjectRegistryClasses::NiPSysSphericalColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysPositionModifier" || NodeType == "NiPSysPositionModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysPositionModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysPositionModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysResetOnLoopCtlr" || NodeType == "NiPSysResetOnLoopCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysResetOnLoopCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysResetOnLoopCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysRotationModifier" || NodeType == "NiPSysRotationModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysRotationModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysRotationModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysSpawnModifier" || NodeType == "NiPSysSpawnModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysSpawnModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysSpawnModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysSphereEmitter" || NodeType == "NiPSysSphereEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysSphereEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysSphereEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysUpdateCtlr" || NodeType == "NiPSysUpdateCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysUpdateCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysUpdateCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysFieldModifier" || NodeType == "NiPSysFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysVortexFieldModifier" || NodeType == "NiPSysVortexFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysVortexFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysVortexFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysGravityFieldModifier" || NodeType == "NiPSysGravityFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysGravityFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysGravityFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysDragFieldModifier" || NodeType == "NiPSysDragFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysDragFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysDragFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysTurbulenceFieldModifier" || NodeType == "NiPSysTurbulenceFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysTurbulenceFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysTurbulenceFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysLODModifier" || NodeType == "BSPSysLODModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysLODModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysLODModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysScaleModifier" || NodeType == "BSPSysScaleModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysScaleModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysScaleModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysFieldMagnitudeCtlr" || NodeType == "NiPSysFieldMagnitudeCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysFieldMagnitudeCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysFieldMagnitudeCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysFieldAttenuationCtlr" || NodeType == "NiPSysFieldAttenuationCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysFieldAttenuationCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysFieldAttenuationCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysFieldMaxDistanceCtlr" || NodeType == "NiPSysFieldMaxDistanceCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysFieldMaxDistanceCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysFieldMaxDistanceCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysAirFieldAirFrictionCtlr" || NodeType == "NiPSysAirFieldAirFrictionCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysAirFieldAirFrictionCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysAirFieldAirFrictionCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysAirFieldInheritVelocityCtlr" || NodeType == "NiPSysAirFieldInheritVelocityCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysAirFieldInheritVelocityCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysAirFieldInheritVelocityCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysAirFieldSpreadCtlr" || NodeType == "NiPSysAirFieldSpreadCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysAirFieldSpreadCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysAirFieldSpreadCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysInitialRotSpeedCtlr" || NodeType == "NiPSysInitialRotSpeedCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysInitialRotSpeedCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysInitialRotSpeedCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysInitialRotSpeedVarCtlr" || NodeType == "NiPSysInitialRotSpeedVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysInitialRotSpeedVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysInitialRotSpeedVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysInitialRotAngleCtlr" || NodeType == "NiPSysInitialRotAngleCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysInitialRotAngleCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysInitialRotAngleCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysInitialRotAngleVarCtlr" || NodeType == "NiPSysInitialRotAngleVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysInitialRotAngleVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysInitialRotAngleVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterPlanarAngleCtlr" || NodeType == "NiPSysEmitterPlanarAngleCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterPlanarAngleCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterPlanarAngleCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysEmitterPlanarAngleVarCtlr" || NodeType == "NiPSysEmitterPlanarAngleVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSysEmitterPlanarAngleVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSysEmitterPlanarAngleVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysAirFieldModifier" || NodeType == "NiPSysAirFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysAirFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysAirFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysTrailEmitter" || NodeType == "NiPSysTrailEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSysTrailEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSysTrailEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLightIntensityController" || NodeType == "NiLightIntensityControllerNode")
{
	ListSize = TargetObjectRegistry.NiLightIntensityController_Registry.Size();
	ObjectRegistryClasses::NiLightIntensityControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSysRadialFieldModifier" || NodeType == "NiPSysRadialFieldModifierNode")
{
	ListSize = TargetObjectRegistry.NiPSysRadialFieldModifier_Registry.Size();
	ObjectRegistryClasses::NiPSysRadialFieldModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLODData" || NodeType == "NiLODDataNode")
{
	ListSize = TargetObjectRegistry.NiLODData_Registry.Size();
	ObjectRegistryClasses::NiLODDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRangeLODData" || NodeType == "NiRangeLODDataNode")
{
	ListSize = TargetObjectRegistry.NiRangeLODData_Registry.Size();
	ObjectRegistryClasses::NiRangeLODDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiScreenLODData" || NodeType == "NiScreenLODDataNode")
{
	ListSize = TargetObjectRegistry.NiScreenLODData_Registry.Size();
	ObjectRegistryClasses::NiScreenLODDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRotatingParticles" || NodeType == "NiRotatingParticlesNode")
{
	ListSize = TargetObjectRegistry.NiRotatingParticles_Registry.Size();
	ObjectRegistryClasses::NiRotatingParticlesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSequenceStreamHelper" || NodeType == "NiSequenceStreamHelperNode")
{
	ListSize = TargetObjectRegistry.NiSequenceStreamHelper_Registry.Size();
	ObjectRegistryClasses::NiSequenceStreamHelperNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiShadeProperty" || NodeType == "NiShadePropertyNode")
{
	ListSize = TargetObjectRegistry.NiShadeProperty_Registry.Size();
	ObjectRegistryClasses::NiShadePropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSkinData" || NodeType == "NiSkinDataNode")
{
	ListSize = TargetObjectRegistry.NiSkinData_Registry.Size();
	ObjectRegistryClasses::NiSkinDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSkinInstance" || NodeType == "NiSkinInstanceNode")
{
	ListSize = TargetObjectRegistry.NiSkinInstance_Registry.Size();
	ObjectRegistryClasses::NiSkinInstanceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriShapeSkinController" || NodeType == "NiTriShapeSkinControllerNode")
{
	ListSize = TargetObjectRegistry.NiTriShapeSkinController_Registry.Size();
	ObjectRegistryClasses::NiTriShapeSkinControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiClodSkinInstance" || NodeType == "NiClodSkinInstanceNode")
{
	ListSize = TargetObjectRegistry.NiClodSkinInstance_Registry.Size();
	ObjectRegistryClasses::NiClodSkinInstanceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSkinPartition" || NodeType == "NiSkinPartitionNode")
{
	ListSize = TargetObjectRegistry.NiSkinPartition_Registry.Size();
	ObjectRegistryClasses::NiSkinPartitionNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTexture" || NodeType == "NiTextureNode")
{
	ListSize = TargetObjectRegistry.NiTexture_Registry.Size();
	ObjectRegistryClasses::NiTextureNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSourceTexture" || NodeType == "NiSourceTextureNode")
{
	ListSize = TargetObjectRegistry.NiSourceTexture_Registry.Size();
	ObjectRegistryClasses::NiSourceTextureNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSpecularProperty" || NodeType == "NiSpecularPropertyNode")
{
	ListSize = TargetObjectRegistry.NiSpecularProperty_Registry.Size();
	ObjectRegistryClasses::NiSpecularPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSphericalCollider" || NodeType == "NiSphericalColliderNode")
{
	ListSize = TargetObjectRegistry.NiSphericalCollider_Registry.Size();
	ObjectRegistryClasses::NiSphericalColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSpotLight" || NodeType == "NiSpotLightNode")
{
	ListSize = TargetObjectRegistry.NiSpotLight_Registry.Size();
	ObjectRegistryClasses::NiSpotLightNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiStencilProperty" || NodeType == "NiStencilPropertyNode")
{
	ListSize = TargetObjectRegistry.NiStencilProperty_Registry.Size();
	ObjectRegistryClasses::NiStencilPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiStringExtraData" || NodeType == "NiStringExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiStringExtraData_Registry.Size();
	ObjectRegistryClasses::NiStringExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiStringPalette" || NodeType == "NiStringPaletteNode")
{
	ListSize = TargetObjectRegistry.NiStringPalette_Registry.Size();
	ObjectRegistryClasses::NiStringPaletteNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiStringsExtraData" || NodeType == "NiStringsExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiStringsExtraData_Registry.Size();
	ObjectRegistryClasses::NiStringsExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTextKeyExtraData" || NodeType == "NiTextKeyExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiTextKeyExtraData_Registry.Size();
	ObjectRegistryClasses::NiTextKeyExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTextureEffect" || NodeType == "NiTextureEffectNode")
{
	ListSize = TargetObjectRegistry.NiTextureEffect_Registry.Size();
	ObjectRegistryClasses::NiTextureEffectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTextureModeProperty" || NodeType == "NiTextureModePropertyNode")
{
	ListSize = TargetObjectRegistry.NiTextureModeProperty_Registry.Size();
	ObjectRegistryClasses::NiTextureModePropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiImage" || NodeType == "NiImageNode")
{
	ListSize = TargetObjectRegistry.NiImage_Registry.Size();
	ObjectRegistryClasses::NiImageNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTextureProperty" || NodeType == "NiTexturePropertyNode")
{
	ListSize = TargetObjectRegistry.NiTextureProperty_Registry.Size();
	ObjectRegistryClasses::NiTexturePropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMultiTextureProperty" || NodeType == "NiMultiTexturePropertyNode")
{
	ListSize = TargetObjectRegistry.NiMultiTextureProperty_Registry.Size();
	ObjectRegistryClasses::NiMultiTexturePropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTexturingProperty" || NodeType == "NiTexturingPropertyNode")
{
	ListSize = TargetObjectRegistry.NiTexturingProperty_Registry.Size();
	ObjectRegistryClasses::NiTexturingPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTransformData" || NodeType == "NiTransformDataNode")
{
	ListSize = TargetObjectRegistry.NiTransformData_Registry.Size();
	ObjectRegistryClasses::NiTransformDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriShape" || NodeType == "NiTriShapeNode")
{
	ListSize = TargetObjectRegistry.NiTriShape_Registry.Size();
	ObjectRegistryClasses::NiTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriShapeData" || NodeType == "NiTriShapeDataNode")
{
	ListSize = TargetObjectRegistry.NiTriShapeData_Registry.Size();
	ObjectRegistryClasses::NiTriShapeDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriStrips" || NodeType == "NiTriStripsNode")
{
	ListSize = TargetObjectRegistry.NiTriStrips_Registry.Size();
	ObjectRegistryClasses::NiTriStripsNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTriStripsData" || NodeType == "NiTriStripsDataNode")
{
	ListSize = TargetObjectRegistry.NiTriStripsData_Registry.Size();
	ObjectRegistryClasses::NiTriStripsDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiEnvMappedTriShape" || NodeType == "NiEnvMappedTriShapeNode")
{
	ListSize = TargetObjectRegistry.NiEnvMappedTriShape_Registry.Size();
	ObjectRegistryClasses::NiEnvMappedTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiEnvMappedTriShapeData" || NodeType == "NiEnvMappedTriShapeDataNode")
{
	ListSize = TargetObjectRegistry.NiEnvMappedTriShapeData_Registry.Size();
	ObjectRegistryClasses::NiEnvMappedTriShapeDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBezierTriangle4" || NodeType == "NiBezierTriangle4Node")
{
	ListSize = TargetObjectRegistry.NiBezierTriangle4_Registry.Size();
	ObjectRegistryClasses::NiBezierTriangle4Node* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBezierMesh" || NodeType == "NiBezierMeshNode")
{
	ListSize = TargetObjectRegistry.NiBezierMesh_Registry.Size();
	ObjectRegistryClasses::NiBezierMeshNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiClod" || NodeType == "NiClodNode")
{
	ListSize = TargetObjectRegistry.NiClod_Registry.Size();
	ObjectRegistryClasses::NiClodNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiClodData" || NodeType == "NiClodDataNode")
{
	ListSize = TargetObjectRegistry.NiClodData_Registry.Size();
	ObjectRegistryClasses::NiClodDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiUVController" || NodeType == "NiUVControllerNode")
{
	ListSize = TargetObjectRegistry.NiUVController_Registry.Size();
	ObjectRegistryClasses::NiUVControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiUVData" || NodeType == "NiUVDataNode")
{
	ListSize = TargetObjectRegistry.NiUVData_Registry.Size();
	ObjectRegistryClasses::NiUVDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiVectorExtraData" || NodeType == "NiVectorExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiVectorExtraData_Registry.Size();
	ObjectRegistryClasses::NiVectorExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiVertexColorProperty" || NodeType == "NiVertexColorPropertyNode")
{
	ListSize = TargetObjectRegistry.NiVertexColorProperty_Registry.Size();
	ObjectRegistryClasses::NiVertexColorPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiVertWeightsExtraData" || NodeType == "NiVertWeightsExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiVertWeightsExtraData_Registry.Size();
	ObjectRegistryClasses::NiVertWeightsExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiVisData" || NodeType == "NiVisDataNode")
{
	ListSize = TargetObjectRegistry.NiVisData_Registry.Size();
	ObjectRegistryClasses::NiVisDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiWireframeProperty" || NodeType == "NiWireframePropertyNode")
{
	ListSize = TargetObjectRegistry.NiWireframeProperty_Registry.Size();
	ObjectRegistryClasses::NiWireframePropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiZBufferProperty" || NodeType == "NiZBufferPropertyNode")
{
	ListSize = TargetObjectRegistry.NiZBufferProperty_Registry.Size();
	ObjectRegistryClasses::NiZBufferPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "RootCollisionNode" || NodeType == "RootCollisionNodeNode")
{
	ListSize = TargetObjectRegistry.RootCollisionNode_Registry.Size();
	ObjectRegistryClasses::RootCollisionNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRawImageData" || NodeType == "NiRawImageDataNode")
{
	ListSize = TargetObjectRegistry.NiRawImageData_Registry.Size();
	ObjectRegistryClasses::NiRawImageDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSortAdjustNode" || NodeType == "NiSortAdjustNodeNode")
{
	ListSize = TargetObjectRegistry.NiSortAdjustNode_Registry.Size();
	ObjectRegistryClasses::NiSortAdjustNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSourceCubeMap" || NodeType == "NiSourceCubeMapNode")
{
	ListSize = TargetObjectRegistry.NiSourceCubeMap_Registry.Size();
	ObjectRegistryClasses::NiSourceCubeMapNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXProp" || NodeType == "NiPhysXPropNode")
{
	ListSize = TargetObjectRegistry.NiPhysXProp_Registry.Size();
	ObjectRegistryClasses::NiPhysXPropNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXPropDesc" || NodeType == "NiPhysXPropDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXPropDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXPropDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXActorDesc" || NodeType == "NiPhysXActorDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXActorDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXActorDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXBodyDesc" || NodeType == "NiPhysXBodyDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXBodyDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXBodyDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXD6JointDesc" || NodeType == "NiPhysXD6JointDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXD6JointDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXD6JointDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXShapeDesc" || NodeType == "NiPhysXShapeDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXShapeDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXShapeDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXMeshDesc" || NodeType == "NiPhysXMeshDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXMeshDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXMeshDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXMaterialDesc" || NodeType == "NiPhysXMaterialDescNode")
{
	ListSize = TargetObjectRegistry.NiPhysXMaterialDesc_Registry.Size();
	ObjectRegistryClasses::NiPhysXMaterialDescNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXKinematicSrc" || NodeType == "NiPhysXKinematicSrcNode")
{
	ListSize = TargetObjectRegistry.NiPhysXKinematicSrc_Registry.Size();
	ObjectRegistryClasses::NiPhysXKinematicSrcNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPhysXTransformDest" || NodeType == "NiPhysXTransformDestNode")
{
	ListSize = TargetObjectRegistry.NiPhysXTransformDest_Registry.Size();
	ObjectRegistryClasses::NiPhysXTransformDestNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiArkAnimationExtraData" || NodeType == "NiArkAnimationExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiArkAnimationExtraData_Registry.Size();
	ObjectRegistryClasses::NiArkAnimationExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiArkImporterExtraData" || NodeType == "NiArkImporterExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiArkImporterExtraData_Registry.Size();
	ObjectRegistryClasses::NiArkImporterExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiArkTextureExtraData" || NodeType == "NiArkTextureExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiArkTextureExtraData_Registry.Size();
	ObjectRegistryClasses::NiArkTextureExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiArkViewportInfoExtraData" || NodeType == "NiArkViewportInfoExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiArkViewportInfoExtraData_Registry.Size();
	ObjectRegistryClasses::NiArkViewportInfoExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiArkShaderExtraData" || NodeType == "NiArkShaderExtraDataNode")
{
	ListSize = TargetObjectRegistry.NiArkShaderExtraData_Registry.Size();
	ObjectRegistryClasses::NiArkShaderExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLines" || NodeType == "NiLinesNode")
{
	ListSize = TargetObjectRegistry.NiLines_Registry.Size();
	ObjectRegistryClasses::NiLinesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLinesData" || NodeType == "NiLinesDataNode")
{
	ListSize = TargetObjectRegistry.NiLinesData_Registry.Size();
	ObjectRegistryClasses::NiLinesDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiScreenElementsData" || NodeType == "NiScreenElementsDataNode")
{
	ListSize = TargetObjectRegistry.NiScreenElementsData_Registry.Size();
	ObjectRegistryClasses::NiScreenElementsDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiScreenElements" || NodeType == "NiScreenElementsNode")
{
	ListSize = TargetObjectRegistry.NiScreenElements_Registry.Size();
	ObjectRegistryClasses::NiScreenElementsNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRoomGroup" || NodeType == "NiRoomGroupNode")
{
	ListSize = TargetObjectRegistry.NiRoomGroup_Registry.Size();
	ObjectRegistryClasses::NiRoomGroupNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRoom" || NodeType == "NiRoomNode")
{
	ListSize = TargetObjectRegistry.NiRoom_Registry.Size();
	ObjectRegistryClasses::NiRoomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPortal" || NodeType == "NiPortalNode")
{
	ListSize = TargetObjectRegistry.NiPortal_Registry.Size();
	ObjectRegistryClasses::NiPortalNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSFadeNode" || NodeType == "BSFadeNodeNode")
{
	ListSize = TargetObjectRegistry.BSFadeNode_Registry.Size();
	ObjectRegistryClasses::BSFadeNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShaderProperty" || NodeType == "BSShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShaderLightingProperty" || NodeType == "BSShaderLightingPropertyNode")
{
	ListSize = TargetObjectRegistry.BSShaderLightingProperty_Registry.Size();
	ObjectRegistryClasses::BSShaderLightingPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShaderNoLightingProperty" || NodeType == "BSShaderNoLightingPropertyNode")
{
	ListSize = TargetObjectRegistry.BSShaderNoLightingProperty_Registry.Size();
	ObjectRegistryClasses::BSShaderNoLightingPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShaderPPLightingProperty" || NodeType == "BSShaderPPLightingPropertyNode")
{
	ListSize = TargetObjectRegistry.BSShaderPPLightingProperty_Registry.Size();
	ObjectRegistryClasses::BSShaderPPLightingPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSEffectShaderPropertyFloatController" || NodeType == "BSEffectShaderPropertyFloatControllerNode")
{
	ListSize = TargetObjectRegistry.BSEffectShaderPropertyFloatController_Registry.Size();
	ObjectRegistryClasses::BSEffectShaderPropertyFloatControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSEffectShaderPropertyColorController" || NodeType == "BSEffectShaderPropertyColorControllerNode")
{
	ListSize = TargetObjectRegistry.BSEffectShaderPropertyColorController_Registry.Size();
	ObjectRegistryClasses::BSEffectShaderPropertyColorControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLightingShaderPropertyFloatController" || NodeType == "BSLightingShaderPropertyFloatControllerNode")
{
	ListSize = TargetObjectRegistry.BSLightingShaderPropertyFloatController_Registry.Size();
	ObjectRegistryClasses::BSLightingShaderPropertyFloatControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLightingShaderPropertyColorController" || NodeType == "BSLightingShaderPropertyColorControllerNode")
{
	ListSize = TargetObjectRegistry.BSLightingShaderPropertyColorController_Registry.Size();
	ObjectRegistryClasses::BSLightingShaderPropertyColorControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSNiAlphaPropertyTestRefController" || NodeType == "BSNiAlphaPropertyTestRefControllerNode")
{
	ListSize = TargetObjectRegistry.BSNiAlphaPropertyTestRefController_Registry.Size();
	ObjectRegistryClasses::BSNiAlphaPropertyTestRefControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSProceduralLightningController" || NodeType == "BSProceduralLightningControllerNode")
{
	ListSize = TargetObjectRegistry.BSProceduralLightningController_Registry.Size();
	ObjectRegistryClasses::BSProceduralLightningControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShaderTextureSet" || NodeType == "BSShaderTextureSetNode")
{
	ListSize = TargetObjectRegistry.BSShaderTextureSet_Registry.Size();
	ObjectRegistryClasses::BSShaderTextureSetNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "WaterShaderProperty" || NodeType == "WaterShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.WaterShaderProperty_Registry.Size();
	ObjectRegistryClasses::WaterShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "SkyShaderProperty" || NodeType == "SkyShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.SkyShaderProperty_Registry.Size();
	ObjectRegistryClasses::SkyShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "TileShaderProperty" || NodeType == "TileShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.TileShaderProperty_Registry.Size();
	ObjectRegistryClasses::TileShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "DistantLODShaderProperty" || NodeType == "DistantLODShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.DistantLODShaderProperty_Registry.Size();
	ObjectRegistryClasses::DistantLODShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSDistantTreeShaderProperty" || NodeType == "BSDistantTreeShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSDistantTreeShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSDistantTreeShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "TallGrassShaderProperty" || NodeType == "TallGrassShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.TallGrassShaderProperty_Registry.Size();
	ObjectRegistryClasses::TallGrassShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "VolumetricFogShaderProperty" || NodeType == "VolumetricFogShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.VolumetricFogShaderProperty_Registry.Size();
	ObjectRegistryClasses::VolumetricFogShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "HairShaderProperty" || NodeType == "HairShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.HairShaderProperty_Registry.Size();
	ObjectRegistryClasses::HairShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "Lighting30ShaderProperty" || NodeType == "Lighting30ShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.Lighting30ShaderProperty_Registry.Size();
	ObjectRegistryClasses::Lighting30ShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLightingShaderProperty" || NodeType == "BSLightingShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSLightingShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSLightingShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSEffectShaderProperty" || NodeType == "BSEffectShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSEffectShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSEffectShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSWaterShaderProperty" || NodeType == "BSWaterShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSWaterShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSWaterShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSSkyShaderProperty" || NodeType == "BSSkyShaderPropertyNode")
{
	ListSize = TargetObjectRegistry.BSSkyShaderProperty_Registry.Size();
	ObjectRegistryClasses::BSSkyShaderPropertyNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSDismemberSkinInstance" || NodeType == "BSDismemberSkinInstanceNode")
{
	ListSize = TargetObjectRegistry.BSDismemberSkinInstance_Registry.Size();
	ObjectRegistryClasses::BSDismemberSkinInstanceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSDecalPlacementVectorExtraData" || NodeType == "BSDecalPlacementVectorExtraDataNode")
{
	ListSize = TargetObjectRegistry.BSDecalPlacementVectorExtraData_Registry.Size();
	ObjectRegistryClasses::BSDecalPlacementVectorExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysSimpleColorModifier" || NodeType == "BSPSysSimpleColorModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysSimpleColorModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysSimpleColorModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSValueNode" || NodeType == "BSValueNodeNode")
{
	ListSize = TargetObjectRegistry.BSValueNode_Registry.Size();
	ObjectRegistryClasses::BSValueNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSStripParticleSystem" || NodeType == "BSStripParticleSystemNode")
{
	ListSize = TargetObjectRegistry.BSStripParticleSystem_Registry.Size();
	ObjectRegistryClasses::BSStripParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSStripPSysData" || NodeType == "BSStripPSysDataNode")
{
	ListSize = TargetObjectRegistry.BSStripPSysData_Registry.Size();
	ObjectRegistryClasses::BSStripPSysDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysStripUpdateModifier" || NodeType == "BSPSysStripUpdateModifierNode")
{
	ListSize = TargetObjectRegistry.BSPSysStripUpdateModifier_Registry.Size();
	ObjectRegistryClasses::BSPSysStripUpdateModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMaterialEmittanceMultController" || NodeType == "BSMaterialEmittanceMultControllerNode")
{
	ListSize = TargetObjectRegistry.BSMaterialEmittanceMultController_Registry.Size();
	ObjectRegistryClasses::BSMaterialEmittanceMultControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMasterParticleSystem" || NodeType == "BSMasterParticleSystemNode")
{
	ListSize = TargetObjectRegistry.BSMasterParticleSystem_Registry.Size();
	ObjectRegistryClasses::BSMasterParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPSysMultiTargetEmitterCtlr" || NodeType == "BSPSysMultiTargetEmitterCtlrNode")
{
	ListSize = TargetObjectRegistry.BSPSysMultiTargetEmitterCtlr_Registry.Size();
	ObjectRegistryClasses::BSPSysMultiTargetEmitterCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSRefractionStrengthController" || NodeType == "BSRefractionStrengthControllerNode")
{
	ListSize = TargetObjectRegistry.BSRefractionStrengthController_Registry.Size();
	ObjectRegistryClasses::BSRefractionStrengthControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSOrderedNode" || NodeType == "BSOrderedNodeNode")
{
	ListSize = TargetObjectRegistry.BSOrderedNode_Registry.Size();
	ObjectRegistryClasses::BSOrderedNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSBlastNode" || NodeType == "BSBlastNodeNode")
{
	ListSize = TargetObjectRegistry.BSBlastNode_Registry.Size();
	ObjectRegistryClasses::BSBlastNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSDamageStage" || NodeType == "BSDamageStageNode")
{
	ListSize = TargetObjectRegistry.BSDamageStage_Registry.Size();
	ObjectRegistryClasses::BSDamageStageNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSRefractionFirePeriodController" || NodeType == "BSRefractionFirePeriodControllerNode")
{
	ListSize = TargetObjectRegistry.BSRefractionFirePeriodController_Registry.Size();
	ObjectRegistryClasses::BSRefractionFirePeriodControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkConvexListShape" || NodeType == "bhkConvexListShapeNode")
{
	ListSize = TargetObjectRegistry.bhkConvexListShape_Registry.Size();
	ObjectRegistryClasses::bhkConvexListShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSTreadTransfInterpolator" || NodeType == "BSTreadTransfInterpolatorNode")
{
	ListSize = TargetObjectRegistry.BSTreadTransfInterpolator_Registry.Size();
	ObjectRegistryClasses::BSTreadTransfInterpolatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSAnimNotes" || NodeType == "BSAnimNotesNode")
{
	ListSize = TargetObjectRegistry.BSAnimNotes_Registry.Size();
	ObjectRegistryClasses::BSAnimNotesNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkLiquidAction" || NodeType == "bhkLiquidActionNode")
{
	ListSize = TargetObjectRegistry.bhkLiquidAction_Registry.Size();
	ObjectRegistryClasses::bhkLiquidActionNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBoundNode" || NodeType == "BSMultiBoundNodeNode")
{
	ListSize = TargetObjectRegistry.BSMultiBoundNode_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBound" || NodeType == "BSMultiBoundNode")
{
	ListSize = TargetObjectRegistry.BSMultiBound_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBoundData" || NodeType == "BSMultiBoundDataNode")
{
	ListSize = TargetObjectRegistry.BSMultiBoundData_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBoundOBB" || NodeType == "BSMultiBoundOBBNode")
{
	ListSize = TargetObjectRegistry.BSMultiBoundOBB_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundOBBNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBoundSphere" || NodeType == "BSMultiBoundSphereNode")
{
	ListSize = TargetObjectRegistry.BSMultiBoundSphere_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundSphereNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSSegmentedTriShape" || NodeType == "BSSegmentedTriShapeNode")
{
	ListSize = TargetObjectRegistry.BSSegmentedTriShape_Registry.Size();
	ObjectRegistryClasses::BSSegmentedTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMultiBoundAABB" || NodeType == "BSMultiBoundAABBNode")
{
	ListSize = TargetObjectRegistry.BSMultiBoundAABB_Registry.Size();
	ObjectRegistryClasses::BSMultiBoundAABBNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiAdditionalGeometryData" || NodeType == "NiAdditionalGeometryDataNode")
{
	ListSize = TargetObjectRegistry.NiAdditionalGeometryData_Registry.Size();
	ObjectRegistryClasses::NiAdditionalGeometryDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPackedAdditionalGeometryData" || NodeType == "BSPackedAdditionalGeometryDataNode")
{
	ListSize = TargetObjectRegistry.BSPackedAdditionalGeometryData_Registry.Size();
	ObjectRegistryClasses::BSPackedAdditionalGeometryDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSWArray" || NodeType == "BSWArrayNode")
{
	ListSize = TargetObjectRegistry.BSWArray_Registry.Size();
	ObjectRegistryClasses::BSWArrayNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkAabbPhantom" || NodeType == "bhkAabbPhantomNode")
{
	ListSize = TargetObjectRegistry.bhkAabbPhantom_Registry.Size();
	ObjectRegistryClasses::bhkAabbPhantomNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSFrustumFOVController" || NodeType == "BSFrustumFOVControllerNode")
{
	ListSize = TargetObjectRegistry.BSFrustumFOVController_Registry.Size();
	ObjectRegistryClasses::BSFrustumFOVControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSDebrisNode" || NodeType == "BSDebrisNodeNode")
{
	ListSize = TargetObjectRegistry.BSDebrisNode_Registry.Size();
	ObjectRegistryClasses::BSDebrisNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkBreakableConstraint" || NodeType == "bhkBreakableConstraintNode")
{
	ListSize = TargetObjectRegistry.bhkBreakableConstraint_Registry.Size();
	ObjectRegistryClasses::bhkBreakableConstraintNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkOrientHingedBodyAction" || NodeType == "bhkOrientHingedBodyActionNode")
{
	ListSize = TargetObjectRegistry.bhkOrientHingedBodyAction_Registry.Size();
	ObjectRegistryClasses::bhkOrientHingedBodyActionNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiDataStream" || NodeType == "NiDataStreamNode")
{
	ListSize = TargetObjectRegistry.NiDataStream_Registry.Size();
	ObjectRegistryClasses::NiDataStreamNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiRenderObject" || NodeType == "NiRenderObjectNode")
{
	ListSize = TargetObjectRegistry.NiRenderObject_Registry.Size();
	ObjectRegistryClasses::NiRenderObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMeshModifier" || NodeType == "NiMeshModifierNode")
{
	ListSize = TargetObjectRegistry.NiMeshModifier_Registry.Size();
	ObjectRegistryClasses::NiMeshModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMesh" || NodeType == "NiMeshNode")
{
	ListSize = TargetObjectRegistry.NiMesh_Registry.Size();
	ObjectRegistryClasses::NiMeshNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMorphWeightsController" || NodeType == "NiMorphWeightsControllerNode")
{
	ListSize = TargetObjectRegistry.NiMorphWeightsController_Registry.Size();
	ObjectRegistryClasses::NiMorphWeightsControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMorphMeshModifier" || NodeType == "NiMorphMeshModifierNode")
{
	ListSize = TargetObjectRegistry.NiMorphMeshModifier_Registry.Size();
	ObjectRegistryClasses::NiMorphMeshModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSkinningMeshModifier" || NodeType == "NiSkinningMeshModifierNode")
{
	ListSize = TargetObjectRegistry.NiSkinningMeshModifier_Registry.Size();
	ObjectRegistryClasses::NiSkinningMeshModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiInstancingMeshModifier" || NodeType == "NiInstancingMeshModifierNode")
{
	ListSize = TargetObjectRegistry.NiInstancingMeshModifier_Registry.Size();
	ObjectRegistryClasses::NiInstancingMeshModifierNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSkinningLODController" || NodeType == "NiSkinningLODControllerNode")
{
	ListSize = TargetObjectRegistry.NiSkinningLODController_Registry.Size();
	ObjectRegistryClasses::NiSkinningLODControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSParticleSystem" || NodeType == "NiPSParticleSystemNode")
{
	ListSize = TargetObjectRegistry.NiPSParticleSystem_Registry.Size();
	ObjectRegistryClasses::NiPSParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSMeshParticleSystem" || NodeType == "NiPSMeshParticleSystemNode")
{
	ListSize = TargetObjectRegistry.NiPSMeshParticleSystem_Registry.Size();
	ObjectRegistryClasses::NiPSMeshParticleSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitParticlesCtlr" || NodeType == "NiPSEmitParticlesCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitParticlesCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitParticlesCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSForceActiveCtlr" || NodeType == "NiPSForceActiveCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSForceActiveCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSForceActiveCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulator" || NodeType == "NiPSSimulatorNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulator_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorStep" || NodeType == "NiPSSimulatorStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorGeneralStep" || NodeType == "NiPSSimulatorGeneralStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorGeneralStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorGeneralStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorForcesStep" || NodeType == "NiPSSimulatorForcesStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorForcesStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorForcesStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorCollidersStep" || NodeType == "NiPSSimulatorCollidersStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorCollidersStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorCollidersStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorMeshAlignStep" || NodeType == "NiPSSimulatorMeshAlignStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorMeshAlignStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorMeshAlignStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSimulatorFinalStep" || NodeType == "NiPSSimulatorFinalStepNode")
{
	ListSize = TargetObjectRegistry.NiPSSimulatorFinalStep_Registry.Size();
	ObjectRegistryClasses::NiPSSimulatorFinalStepNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSFacingQuadGenerator" || NodeType == "NiPSFacingQuadGeneratorNode")
{
	ListSize = TargetObjectRegistry.NiPSFacingQuadGenerator_Registry.Size();
	ObjectRegistryClasses::NiPSFacingQuadGeneratorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiShadowGenerator" || NodeType == "NiShadowGeneratorNode")
{
	ListSize = TargetObjectRegistry.NiShadowGenerator_Registry.Size();
	ObjectRegistryClasses::NiShadowGeneratorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSBoundUpdater" || NodeType == "NiPSBoundUpdaterNode")
{
	ListSize = TargetObjectRegistry.NiPSBoundUpdater_Registry.Size();
	ObjectRegistryClasses::NiPSBoundUpdaterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSDragForce" || NodeType == "NiPSDragForceNode")
{
	ListSize = TargetObjectRegistry.NiPSDragForce_Registry.Size();
	ObjectRegistryClasses::NiPSDragForceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSGravityForce" || NodeType == "NiPSGravityForceNode")
{
	ListSize = TargetObjectRegistry.NiPSGravityForce_Registry.Size();
	ObjectRegistryClasses::NiPSGravityForceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSBoxEmitter" || NodeType == "NiPSBoxEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSBoxEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSBoxEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSMeshEmitter" || NodeType == "NiPSMeshEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSMeshEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSMeshEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSGravityStrengthCtlr" || NodeType == "NiPSGravityStrengthCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSGravityStrengthCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSGravityStrengthCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSPlanarCollider" || NodeType == "NiPSPlanarColliderNode")
{
	ListSize = TargetObjectRegistry.NiPSPlanarCollider_Registry.Size();
	ObjectRegistryClasses::NiPSPlanarColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterSpeedCtlr" || NodeType == "NiPSEmitterSpeedCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterSpeedCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterSpeedCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterRadiusCtlr" || NodeType == "NiPSEmitterRadiusCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterRadiusCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterRadiusCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSResetOnLoopCtlr" || NodeType == "NiPSResetOnLoopCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSResetOnLoopCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSResetOnLoopCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSphereEmitter" || NodeType == "NiPSSphereEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSSphereEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSSphereEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSCylinderEmitter" || NodeType == "NiPSCylinderEmitterNode")
{
	ListSize = TargetObjectRegistry.NiPSCylinderEmitter_Registry.Size();
	ObjectRegistryClasses::NiPSCylinderEmitterNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterDeclinationCtlr" || NodeType == "NiPSEmitterDeclinationCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterDeclinationCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterDeclinationCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterDeclinationVarCtlr" || NodeType == "NiPSEmitterDeclinationVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterDeclinationVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterDeclinationVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterPlanarAngleCtlr" || NodeType == "NiPSEmitterPlanarAngleCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterPlanarAngleCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterPlanarAngleCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterPlanarAngleVarCtlr" || NodeType == "NiPSEmitterPlanarAngleVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterPlanarAngleVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterPlanarAngleVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterRotAngleCtlr" || NodeType == "NiPSEmitterRotAngleCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterRotAngleCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterRotAngleCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterRotAngleVarCtlr" || NodeType == "NiPSEmitterRotAngleVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterRotAngleVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterRotAngleVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterRotSpeedCtlr" || NodeType == "NiPSEmitterRotSpeedCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterRotSpeedCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterRotSpeedCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterRotSpeedVarCtlr" || NodeType == "NiPSEmitterRotSpeedVarCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterRotSpeedVarCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterRotSpeedVarCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSEmitterLifeSpanCtlr" || NodeType == "NiPSEmitterLifeSpanCtlrNode")
{
	ListSize = TargetObjectRegistry.NiPSEmitterLifeSpanCtlr_Registry.Size();
	ObjectRegistryClasses::NiPSEmitterLifeSpanCtlrNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSBombForce" || NodeType == "NiPSBombForceNode")
{
	ListSize = TargetObjectRegistry.NiPSBombForce_Registry.Size();
	ObjectRegistryClasses::NiPSBombForceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSphericalCollider" || NodeType == "NiPSSphericalColliderNode")
{
	ListSize = TargetObjectRegistry.NiPSSphericalCollider_Registry.Size();
	ObjectRegistryClasses::NiPSSphericalColliderNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiPSSpawner" || NodeType == "NiPSSpawnerNode")
{
	ListSize = TargetObjectRegistry.NiPSSpawner_Registry.Size();
	ObjectRegistryClasses::NiPSSpawnerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiSequenceData" || NodeType == "NiSequenceDataNode")
{
	ListSize = TargetObjectRegistry.NiSequenceData_Registry.Size();
	ObjectRegistryClasses::NiSequenceDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiTransformEvaluator" || NodeType == "NiTransformEvaluatorNode")
{
	ListSize = TargetObjectRegistry.NiTransformEvaluator_Registry.Size();
	ObjectRegistryClasses::NiTransformEvaluatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiBSplineCompTransformEvaluator" || NodeType == "NiBSplineCompTransformEvaluatorNode")
{
	ListSize = TargetObjectRegistry.NiBSplineCompTransformEvaluator_Registry.Size();
	ObjectRegistryClasses::NiBSplineCompTransformEvaluatorNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiMeshHWInstance" || NodeType == "NiMeshHWInstanceNode")
{
	ListSize = TargetObjectRegistry.NiMeshHWInstance_Registry.Size();
	ObjectRegistryClasses::NiMeshHWInstanceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiFurSpringController" || NodeType == "NiFurSpringControllerNode")
{
	ListSize = TargetObjectRegistry.NiFurSpringController_Registry.Size();
	ObjectRegistryClasses::NiFurSpringControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "CStreamableAssetData" || NodeType == "CStreamableAssetDataNode")
{
	ListSize = TargetObjectRegistry.CStreamableAssetData_Registry.Size();
	ObjectRegistryClasses::CStreamableAssetDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkCompressedMeshShape" || NodeType == "bhkCompressedMeshShapeNode")
{
	ListSize = TargetObjectRegistry.bhkCompressedMeshShape_Registry.Size();
	ObjectRegistryClasses::bhkCompressedMeshShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkCompressedMeshShapeData" || NodeType == "bhkCompressedMeshShapeDataNode")
{
	ListSize = TargetObjectRegistry.bhkCompressedMeshShapeData_Registry.Size();
	ObjectRegistryClasses::bhkCompressedMeshShapeDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSInvMarker" || NodeType == "BSInvMarkerNode")
{
	ListSize = TargetObjectRegistry.BSInvMarker_Registry.Size();
	ObjectRegistryClasses::BSInvMarkerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSBoneLODExtraData" || NodeType == "BSBoneLODExtraDataNode")
{
	ListSize = TargetObjectRegistry.BSBoneLODExtraData_Registry.Size();
	ObjectRegistryClasses::BSBoneLODExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSBehaviorGraphExtraData" || NodeType == "BSBehaviorGraphExtraDataNode")
{
	ListSize = TargetObjectRegistry.BSBehaviorGraphExtraData_Registry.Size();
	ObjectRegistryClasses::BSBehaviorGraphExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLagBoneController" || NodeType == "BSLagBoneControllerNode")
{
	ListSize = TargetObjectRegistry.BSLagBoneController_Registry.Size();
	ObjectRegistryClasses::BSLagBoneControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLODTriShape" || NodeType == "BSLODTriShapeNode")
{
	ListSize = TargetObjectRegistry.BSLODTriShape_Registry.Size();
	ObjectRegistryClasses::BSLODTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSFurnitureMarkerNode" || NodeType == "BSFurnitureMarkerNodeNode")
{
	ListSize = TargetObjectRegistry.BSFurnitureMarkerNode_Registry.Size();
	ObjectRegistryClasses::BSFurnitureMarkerNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSLeafAnimNode" || NodeType == "BSLeafAnimNodeNode")
{
	ListSize = TargetObjectRegistry.BSLeafAnimNode_Registry.Size();
	ObjectRegistryClasses::BSLeafAnimNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSTreeNode" || NodeType == "BSTreeNodeNode")
{
	ListSize = TargetObjectRegistry.BSTreeNode_Registry.Size();
	ObjectRegistryClasses::BSTreeNodeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "NiLightRadiusController" || NodeType == "NiLightRadiusControllerNode")
{
	ListSize = TargetObjectRegistry.NiLightRadiusController_Registry.Size();
	ObjectRegistryClasses::NiLightRadiusControllerNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSShape" || NodeType == "BSShapeNode")
{
	ListSize = TargetObjectRegistry.BSShape_Registry.Size();
	ObjectRegistryClasses::BSShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSTriShape" || NodeType == "BSTriShapeNode")
{
	ListSize = TargetObjectRegistry.BSTriShape_Registry.Size();
	ObjectRegistryClasses::BSTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSSubIndexTriShape" || NodeType == "BSSubIndexTriShapeNode")
{
	ListSize = TargetObjectRegistry.BSSubIndexTriShape_Registry.Size();
	ObjectRegistryClasses::BSSubIndexTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSMeshLODTriShape" || NodeType == "BSMeshLODTriShapeNode")
{
	ListSize = TargetObjectRegistry.BSMeshLODTriShape_Registry.Size();
	ObjectRegistryClasses::BSMeshLODTriShapeNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkNPCollisionObject" || NodeType == "bhkNPCollisionObjectNode")
{
	ListSize = TargetObjectRegistry.bhkNPCollisionObject_Registry.Size();
	ObjectRegistryClasses::bhkNPCollisionObjectNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSExtraData" || NodeType == "BSExtraDataNode")
{
	ListSize = TargetObjectRegistry.BSExtraData_Registry.Size();
	ObjectRegistryClasses::BSExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkPhysicsSystem" || NodeType == "bhkPhysicsSystemNode")
{
	ListSize = TargetObjectRegistry.bhkPhysicsSystem_Registry.Size();
	ObjectRegistryClasses::bhkPhysicsSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "bhkRagdollSystem" || NodeType == "bhkRagdollSystemNode")
{
	ListSize = TargetObjectRegistry.bhkRagdollSystem_Registry.Size();
	ObjectRegistryClasses::bhkRagdollSystemNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSClothExtraData" || NodeType == "BSClothExtraDataNode")
{
	ListSize = TargetObjectRegistry.BSClothExtraData_Registry.Size();
	ObjectRegistryClasses::BSClothExtraDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSSkin__Instance" || NodeType == "BSSkin__InstanceNode")
{
	ListSize = TargetObjectRegistry.BSSkin__Instance_Registry.Size();
	ObjectRegistryClasses::BSSkin__InstanceNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSSkin__BoneData" || NodeType == "BSSkin__BoneDataNode")
{
	ListSize = TargetObjectRegistry.BSSkin__BoneData_Registry.Size();
	ObjectRegistryClasses::BSSkin__BoneDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSPositionData" || NodeType == "BSPositionDataNode")
{
	ListSize = TargetObjectRegistry.BSPositionData_Registry.Size();
	ObjectRegistryClasses::BSPositionDataNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSConnectPoint__Parents" || NodeType == "BSConnectPoint__ParentsNode")
{
	ListSize = TargetObjectRegistry.BSConnectPoint__Parents_Registry.Size();
	ObjectRegistryClasses::BSConnectPoint__ParentsNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}
if(NodeType == "BSConnectPoint__Children" || NodeType == "BSConnectPoint__ChildrenNode")
{
	ListSize = TargetObjectRegistry.BSConnectPoint__Children_Registry.Size();
	ObjectRegistryClasses::BSConnectPoint__ChildrenNode* ElementData = nullptr;
	for(size_t Index = 0; Index < ListSize&&RetrievedData == ""; ++Index)
	{
		ElementData = GetElementPointerV2(Index);
		if(ElementData->InternalName == DataPointerString) { RetrievedData = ElementData->InternalName; }
		else if(ElementData->Data == DataNode) { RetrievedData = ElementData->InternalName; }
	}
}