using NiflibNiObject= Niflib::NiObject;
using NiObject = ObjectRegistryClasses::NiObject;
using NiflibNi3dsAlphaAnimator= Niflib::Ni3dsAlphaAnimator;
using Ni3dsAlphaAnimator = ObjectRegistryClasses::Ni3dsAlphaAnimator;
using NiflibNi3dsAnimationNode= Niflib::Ni3dsAnimationNode;
using Ni3dsAnimationNode = ObjectRegistryClasses::Ni3dsAnimationNode;
using NiflibNi3dsColorAnimator= Niflib::Ni3dsColorAnimator;
using Ni3dsColorAnimator = ObjectRegistryClasses::Ni3dsColorAnimator;
using NiflibNi3dsMorphShape= Niflib::Ni3dsMorphShape;
using Ni3dsMorphShape = ObjectRegistryClasses::Ni3dsMorphShape;
using NiflibNi3dsParticleSystem= Niflib::Ni3dsParticleSystem;
using Ni3dsParticleSystem = ObjectRegistryClasses::Ni3dsParticleSystem;
using NiflibNi3dsPathController= Niflib::Ni3dsPathController;
using Ni3dsPathController = ObjectRegistryClasses::Ni3dsPathController;
using NiflibNiParticleModifier= Niflib::NiParticleModifier;
using NiParticleModifier = ObjectRegistryClasses::NiParticleModifier;
using NiflibNiPSysCollider= Niflib::NiPSysCollider;
using NiPSysCollider = ObjectRegistryClasses::NiPSysCollider;
using NiflibbhkRefObject= Niflib::bhkRefObject;
using bhkRefObject = ObjectRegistryClasses::bhkRefObject;
using NiflibbhkSerializable= Niflib::bhkSerializable;
using bhkSerializable = ObjectRegistryClasses::bhkSerializable;
using NiflibbhkWorldObject= Niflib::bhkWorldObject;
using bhkWorldObject = ObjectRegistryClasses::bhkWorldObject;
using NiflibbhkPhantom= Niflib::bhkPhantom;
using bhkPhantom = ObjectRegistryClasses::bhkPhantom;
using NiflibbhkShapePhantom= Niflib::bhkShapePhantom;
using bhkShapePhantom = ObjectRegistryClasses::bhkShapePhantom;
using NiflibbhkSimpleShapePhantom= Niflib::bhkSimpleShapePhantom;
using bhkSimpleShapePhantom = ObjectRegistryClasses::bhkSimpleShapePhantom;
using NiflibbhkEntity= Niflib::bhkEntity;
using bhkEntity = ObjectRegistryClasses::bhkEntity;
using NiflibbhkRigidBody= Niflib::bhkRigidBody;
using bhkRigidBody = ObjectRegistryClasses::bhkRigidBody;
using NiflibbhkRigidBodyT= Niflib::bhkRigidBodyT;
using bhkRigidBodyT = ObjectRegistryClasses::bhkRigidBodyT;
using NiflibbhkConstraint= Niflib::bhkConstraint;
using bhkConstraint = ObjectRegistryClasses::bhkConstraint;
using NiflibbhkLimitedHingeConstraint= Niflib::bhkLimitedHingeConstraint;
using bhkLimitedHingeConstraint = ObjectRegistryClasses::bhkLimitedHingeConstraint;
using NiflibbhkMalleableConstraint= Niflib::bhkMalleableConstraint;
using bhkMalleableConstraint = ObjectRegistryClasses::bhkMalleableConstraint;
using NiflibbhkStiffSpringConstraint= Niflib::bhkStiffSpringConstraint;
using bhkStiffSpringConstraint = ObjectRegistryClasses::bhkStiffSpringConstraint;
using NiflibbhkRagdollConstraint= Niflib::bhkRagdollConstraint;
using bhkRagdollConstraint = ObjectRegistryClasses::bhkRagdollConstraint;
using NiflibbhkPrismaticConstraint= Niflib::bhkPrismaticConstraint;
using bhkPrismaticConstraint = ObjectRegistryClasses::bhkPrismaticConstraint;
using NiflibbhkHingeConstraint= Niflib::bhkHingeConstraint;
using bhkHingeConstraint = ObjectRegistryClasses::bhkHingeConstraint;
using NiflibbhkBallAndSocketConstraint= Niflib::bhkBallAndSocketConstraint;
using bhkBallAndSocketConstraint = ObjectRegistryClasses::bhkBallAndSocketConstraint;
using NiflibbhkBallSocketConstraintChain= Niflib::bhkBallSocketConstraintChain;
using bhkBallSocketConstraintChain = ObjectRegistryClasses::bhkBallSocketConstraintChain;
using NiflibbhkShape= Niflib::bhkShape;
using bhkShape = ObjectRegistryClasses::bhkShape;
using NiflibbhkTransformShape= Niflib::bhkTransformShape;
using bhkTransformShape = ObjectRegistryClasses::bhkTransformShape;
using NiflibbhkSphereRepShape= Niflib::bhkSphereRepShape;
using bhkSphereRepShape = ObjectRegistryClasses::bhkSphereRepShape;
using NiflibbhkConvexShape= Niflib::bhkConvexShape;
using bhkConvexShape = ObjectRegistryClasses::bhkConvexShape;
using NiflibbhkSphereShape= Niflib::bhkSphereShape;
using bhkSphereShape = ObjectRegistryClasses::bhkSphereShape;
using NiflibbhkCapsuleShape= Niflib::bhkCapsuleShape;
using bhkCapsuleShape = ObjectRegistryClasses::bhkCapsuleShape;
using NiflibbhkBoxShape= Niflib::bhkBoxShape;
using bhkBoxShape = ObjectRegistryClasses::bhkBoxShape;
using NiflibbhkConvexVerticesShape= Niflib::bhkConvexVerticesShape;
using bhkConvexVerticesShape = ObjectRegistryClasses::bhkConvexVerticesShape;
using NiflibbhkConvexTransformShape= Niflib::bhkConvexTransformShape;
using bhkConvexTransformShape = ObjectRegistryClasses::bhkConvexTransformShape;
using NiflibbhkMultiSphereShape= Niflib::bhkMultiSphereShape;
using bhkMultiSphereShape = ObjectRegistryClasses::bhkMultiSphereShape;
using NiflibbhkBvTreeShape= Niflib::bhkBvTreeShape;
using bhkBvTreeShape = ObjectRegistryClasses::bhkBvTreeShape;
using NiflibbhkMoppBvTreeShape= Niflib::bhkMoppBvTreeShape;
using bhkMoppBvTreeShape = ObjectRegistryClasses::bhkMoppBvTreeShape;
using NiflibbhkShapeCollection= Niflib::bhkShapeCollection;
using bhkShapeCollection = ObjectRegistryClasses::bhkShapeCollection;
using NiflibbhkListShape= Niflib::bhkListShape;
using bhkListShape = ObjectRegistryClasses::bhkListShape;
using NiflibbhkMeshShape= Niflib::bhkMeshShape;
using bhkMeshShape = ObjectRegistryClasses::bhkMeshShape;
using NiflibbhkPackedNiTriStripsShape= Niflib::bhkPackedNiTriStripsShape;
using bhkPackedNiTriStripsShape = ObjectRegistryClasses::bhkPackedNiTriStripsShape;
using NiflibbhkNiTriStripsShape= Niflib::bhkNiTriStripsShape;
using bhkNiTriStripsShape = ObjectRegistryClasses::bhkNiTriStripsShape;
using NiflibNiExtraData= Niflib::NiExtraData;
using NiExtraData = ObjectRegistryClasses::NiExtraData;
using NiflibNiInterpolator= Niflib::NiInterpolator;
using NiInterpolator = ObjectRegistryClasses::NiInterpolator;
using NiflibNiKeyBasedInterpolator= Niflib::NiKeyBasedInterpolator;
using NiKeyBasedInterpolator = ObjectRegistryClasses::NiKeyBasedInterpolator;
using NiflibNiFloatInterpolator= Niflib::NiFloatInterpolator;
using NiFloatInterpolator = ObjectRegistryClasses::NiFloatInterpolator;
using NiflibNiTransformInterpolator= Niflib::NiTransformInterpolator;
using NiTransformInterpolator = ObjectRegistryClasses::NiTransformInterpolator;
using NiflibNiPoint3Interpolator= Niflib::NiPoint3Interpolator;
using NiPoint3Interpolator = ObjectRegistryClasses::NiPoint3Interpolator;
using NiflibNiPathInterpolator= Niflib::NiPathInterpolator;
using NiPathInterpolator = ObjectRegistryClasses::NiPathInterpolator;
using NiflibNiBoolInterpolator= Niflib::NiBoolInterpolator;
using NiBoolInterpolator = ObjectRegistryClasses::NiBoolInterpolator;
using NiflibNiBoolTimelineInterpolator= Niflib::NiBoolTimelineInterpolator;
using NiBoolTimelineInterpolator = ObjectRegistryClasses::NiBoolTimelineInterpolator;
using NiflibNiBlendInterpolator= Niflib::NiBlendInterpolator;
using NiBlendInterpolator = ObjectRegistryClasses::NiBlendInterpolator;
using NiflibNiBSplineInterpolator= Niflib::NiBSplineInterpolator;
using NiBSplineInterpolator = ObjectRegistryClasses::NiBSplineInterpolator;
using NiflibNiObjectNET= Niflib::NiObjectNET;
using NiObjectNET = ObjectRegistryClasses::NiObjectNET;
using NiflibNiCollisionObject= Niflib::NiCollisionObject;
using NiCollisionObject = ObjectRegistryClasses::NiCollisionObject;
using NiflibNiCollisionData= Niflib::NiCollisionData;
using NiCollisionData = ObjectRegistryClasses::NiCollisionData;
using NiflibbhkNiCollisionObject= Niflib::bhkNiCollisionObject;
using bhkNiCollisionObject = ObjectRegistryClasses::bhkNiCollisionObject;
using NiflibbhkCollisionObject= Niflib::bhkCollisionObject;
using bhkCollisionObject = ObjectRegistryClasses::bhkCollisionObject;
using NiflibbhkBlendCollisionObject= Niflib::bhkBlendCollisionObject;
using bhkBlendCollisionObject = ObjectRegistryClasses::bhkBlendCollisionObject;
using NiflibbhkPCollisionObject= Niflib::bhkPCollisionObject;
using bhkPCollisionObject = ObjectRegistryClasses::bhkPCollisionObject;
using NiflibbhkSPCollisionObject= Niflib::bhkSPCollisionObject;
using bhkSPCollisionObject = ObjectRegistryClasses::bhkSPCollisionObject;
using NiflibNiAVObject= Niflib::NiAVObject;
using NiAVObject = ObjectRegistryClasses::NiAVObject;
using NiflibNiDynamicEffect= Niflib::NiDynamicEffect;
using NiDynamicEffect = ObjectRegistryClasses::NiDynamicEffect;
using NiflibNiLight= Niflib::NiLight;
using NiLight = ObjectRegistryClasses::NiLight;
using NiflibNiProperty= Niflib::NiProperty;
using NiProperty = ObjectRegistryClasses::NiProperty;
using NiflibNiTransparentProperty= Niflib::NiTransparentProperty;
using NiTransparentProperty = ObjectRegistryClasses::NiTransparentProperty;
using NiflibNiPSysModifier= Niflib::NiPSysModifier;
using NiPSysModifier = ObjectRegistryClasses::NiPSysModifier;
using NiflibNiPSysEmitter= Niflib::NiPSysEmitter;
using NiPSysEmitter = ObjectRegistryClasses::NiPSysEmitter;
using NiflibNiPSysVolumeEmitter= Niflib::NiPSysVolumeEmitter;
using NiPSysVolumeEmitter = ObjectRegistryClasses::NiPSysVolumeEmitter;
using NiflibNiTimeController= Niflib::NiTimeController;
using NiTimeController = ObjectRegistryClasses::NiTimeController;
using NiflibNiInterpController= Niflib::NiInterpController;
using NiInterpController = ObjectRegistryClasses::NiInterpController;
using NiflibNiMultiTargetTransformController= Niflib::NiMultiTargetTransformController;
using NiMultiTargetTransformController = ObjectRegistryClasses::NiMultiTargetTransformController;
using NiflibNiGeomMorpherController= Niflib::NiGeomMorpherController;
using NiGeomMorpherController = ObjectRegistryClasses::NiGeomMorpherController;
using NiflibNiMorphController= Niflib::NiMorphController;
using NiMorphController = ObjectRegistryClasses::NiMorphController;
using NiflibNiMorpherController= Niflib::NiMorpherController;
using NiMorpherController = ObjectRegistryClasses::NiMorpherController;
using NiflibNiSingleInterpController= Niflib::NiSingleInterpController;
using NiSingleInterpController = ObjectRegistryClasses::NiSingleInterpController;
using NiflibNiKeyframeController= Niflib::NiKeyframeController;
using NiKeyframeController = ObjectRegistryClasses::NiKeyframeController;
using NiflibNiTransformController= Niflib::NiTransformController;
using NiTransformController = ObjectRegistryClasses::NiTransformController;
using NiflibNiPSysModifierCtlr= Niflib::NiPSysModifierCtlr;
using NiPSysModifierCtlr = ObjectRegistryClasses::NiPSysModifierCtlr;
using NiflibNiPSysEmitterCtlr= Niflib::NiPSysEmitterCtlr;
using NiPSysEmitterCtlr = ObjectRegistryClasses::NiPSysEmitterCtlr;
using NiflibNiPSysModifierBoolCtlr= Niflib::NiPSysModifierBoolCtlr;
using NiPSysModifierBoolCtlr = ObjectRegistryClasses::NiPSysModifierBoolCtlr;
using NiflibNiPSysModifierActiveCtlr= Niflib::NiPSysModifierActiveCtlr;
using NiPSysModifierActiveCtlr = ObjectRegistryClasses::NiPSysModifierActiveCtlr;
using NiflibNiPSysModifierFloatCtlr= Niflib::NiPSysModifierFloatCtlr;
using NiPSysModifierFloatCtlr = ObjectRegistryClasses::NiPSysModifierFloatCtlr;
using NiflibNiPSysEmitterDeclinationCtlr= Niflib::NiPSysEmitterDeclinationCtlr;
using NiPSysEmitterDeclinationCtlr = ObjectRegistryClasses::NiPSysEmitterDeclinationCtlr;
using NiflibNiPSysEmitterDeclinationVarCtlr= Niflib::NiPSysEmitterDeclinationVarCtlr;
using NiPSysEmitterDeclinationVarCtlr = ObjectRegistryClasses::NiPSysEmitterDeclinationVarCtlr;
using NiflibNiPSysEmitterInitialRadiusCtlr= Niflib::NiPSysEmitterInitialRadiusCtlr;
using NiPSysEmitterInitialRadiusCtlr = ObjectRegistryClasses::NiPSysEmitterInitialRadiusCtlr;
using NiflibNiPSysEmitterLifeSpanCtlr= Niflib::NiPSysEmitterLifeSpanCtlr;
using NiPSysEmitterLifeSpanCtlr = ObjectRegistryClasses::NiPSysEmitterLifeSpanCtlr;
using NiflibNiPSysEmitterSpeedCtlr= Niflib::NiPSysEmitterSpeedCtlr;
using NiPSysEmitterSpeedCtlr = ObjectRegistryClasses::NiPSysEmitterSpeedCtlr;
using NiflibNiPSysGravityStrengthCtlr= Niflib::NiPSysGravityStrengthCtlr;
using NiPSysGravityStrengthCtlr = ObjectRegistryClasses::NiPSysGravityStrengthCtlr;
using NiflibNiFloatInterpController= Niflib::NiFloatInterpController;
using NiFloatInterpController = ObjectRegistryClasses::NiFloatInterpController;
using NiflibNiFlipController= Niflib::NiFlipController;
using NiFlipController = ObjectRegistryClasses::NiFlipController;
using NiflibNiAlphaController= Niflib::NiAlphaController;
using NiAlphaController = ObjectRegistryClasses::NiAlphaController;
using NiflibNiTextureTransformController= Niflib::NiTextureTransformController;
using NiTextureTransformController = ObjectRegistryClasses::NiTextureTransformController;
using NiflibNiLightDimmerController= Niflib::NiLightDimmerController;
using NiLightDimmerController = ObjectRegistryClasses::NiLightDimmerController;
using NiflibNiBoolInterpController= Niflib::NiBoolInterpController;
using NiBoolInterpController = ObjectRegistryClasses::NiBoolInterpController;
using NiflibNiVisController= Niflib::NiVisController;
using NiVisController = ObjectRegistryClasses::NiVisController;
using NiflibNiPoint3InterpController= Niflib::NiPoint3InterpController;
using NiPoint3InterpController = ObjectRegistryClasses::NiPoint3InterpController;
using NiflibNiMaterialColorController= Niflib::NiMaterialColorController;
using NiMaterialColorController = ObjectRegistryClasses::NiMaterialColorController;
using NiflibNiLightColorController= Niflib::NiLightColorController;
using NiLightColorController = ObjectRegistryClasses::NiLightColorController;
using NiflibNiExtraDataController= Niflib::NiExtraDataController;
using NiExtraDataController = ObjectRegistryClasses::NiExtraDataController;
using NiflibNiFloatExtraDataController= Niflib::NiFloatExtraDataController;
using NiFloatExtraDataController = ObjectRegistryClasses::NiFloatExtraDataController;
using NiflibNiBoneLODController= Niflib::NiBoneLODController;
using NiBoneLODController = ObjectRegistryClasses::NiBoneLODController;
using NiflibNiBSBoneLODController= Niflib::NiBSBoneLODController;
using NiBSBoneLODController = ObjectRegistryClasses::NiBSBoneLODController;
using NiflibNiGeometry= Niflib::NiGeometry;
using NiGeometry = ObjectRegistryClasses::NiGeometry;
using NiflibNiTriBasedGeom= Niflib::NiTriBasedGeom;
using NiTriBasedGeom = ObjectRegistryClasses::NiTriBasedGeom;
using NiflibNiGeometryData= Niflib::NiGeometryData;
using NiGeometryData = ObjectRegistryClasses::NiGeometryData;
using NiflibAbstractAdditionalGeometryData= Niflib::AbstractAdditionalGeometryData;
using AbstractAdditionalGeometryData = ObjectRegistryClasses::AbstractAdditionalGeometryData;
using NiflibNiTriBasedGeomData= Niflib::NiTriBasedGeomData;
using NiTriBasedGeomData = ObjectRegistryClasses::NiTriBasedGeomData;
using NiflibbhkBlendController= Niflib::bhkBlendController;
using bhkBlendController = ObjectRegistryClasses::bhkBlendController;
using NiflibBSBound= Niflib::BSBound;
using BSBound = ObjectRegistryClasses::BSBound;
using NiflibBSFurnitureMarker= Niflib::BSFurnitureMarker;
using BSFurnitureMarker = ObjectRegistryClasses::BSFurnitureMarker;
using NiflibBSParentVelocityModifier= Niflib::BSParentVelocityModifier;
using BSParentVelocityModifier = ObjectRegistryClasses::BSParentVelocityModifier;
using NiflibBSPSysArrayEmitter= Niflib::BSPSysArrayEmitter;
using BSPSysArrayEmitter = ObjectRegistryClasses::BSPSysArrayEmitter;
using NiflibBSWindModifier= Niflib::BSWindModifier;
using BSWindModifier = ObjectRegistryClasses::BSWindModifier;
using NiflibhkPackedNiTriStripsData= Niflib::hkPackedNiTriStripsData;
using hkPackedNiTriStripsData = ObjectRegistryClasses::hkPackedNiTriStripsData;
using NiflibNiAlphaProperty= Niflib::NiAlphaProperty;
using NiAlphaProperty = ObjectRegistryClasses::NiAlphaProperty;
using NiflibNiAmbientLight= Niflib::NiAmbientLight;
using NiAmbientLight = ObjectRegistryClasses::NiAmbientLight;
using NiflibNiParticlesData= Niflib::NiParticlesData;
using NiParticlesData = ObjectRegistryClasses::NiParticlesData;
using NiflibNiRotatingParticlesData= Niflib::NiRotatingParticlesData;
using NiRotatingParticlesData = ObjectRegistryClasses::NiRotatingParticlesData;
using NiflibNiAutoNormalParticlesData= Niflib::NiAutoNormalParticlesData;
using NiAutoNormalParticlesData = ObjectRegistryClasses::NiAutoNormalParticlesData;
using NiflibNiPSysData= Niflib::NiPSysData;
using NiPSysData = ObjectRegistryClasses::NiPSysData;
using NiflibNiMeshPSysData= Niflib::NiMeshPSysData;
using NiMeshPSysData = ObjectRegistryClasses::NiMeshPSysData;
using NiflibNiBinaryExtraData= Niflib::NiBinaryExtraData;
using NiBinaryExtraData = ObjectRegistryClasses::NiBinaryExtraData;
using NiflibNiBinaryVoxelExtraData= Niflib::NiBinaryVoxelExtraData;
using NiBinaryVoxelExtraData = ObjectRegistryClasses::NiBinaryVoxelExtraData;
using NiflibNiBinaryVoxelData= Niflib::NiBinaryVoxelData;
using NiBinaryVoxelData = ObjectRegistryClasses::NiBinaryVoxelData;
using NiflibNiBlendBoolInterpolator= Niflib::NiBlendBoolInterpolator;
using NiBlendBoolInterpolator = ObjectRegistryClasses::NiBlendBoolInterpolator;
using NiflibNiBlendFloatInterpolator= Niflib::NiBlendFloatInterpolator;
using NiBlendFloatInterpolator = ObjectRegistryClasses::NiBlendFloatInterpolator;
using NiflibNiBlendPoint3Interpolator= Niflib::NiBlendPoint3Interpolator;
using NiBlendPoint3Interpolator = ObjectRegistryClasses::NiBlendPoint3Interpolator;
using NiflibNiBlendTransformInterpolator= Niflib::NiBlendTransformInterpolator;
using NiBlendTransformInterpolator = ObjectRegistryClasses::NiBlendTransformInterpolator;
using NiflibNiBoolData= Niflib::NiBoolData;
using NiBoolData = ObjectRegistryClasses::NiBoolData;
using NiflibNiBooleanExtraData= Niflib::NiBooleanExtraData;
using NiBooleanExtraData = ObjectRegistryClasses::NiBooleanExtraData;
using NiflibNiBSplineBasisData= Niflib::NiBSplineBasisData;
using NiBSplineBasisData = ObjectRegistryClasses::NiBSplineBasisData;
using NiflibNiBSplineFloatInterpolator= Niflib::NiBSplineFloatInterpolator;
using NiBSplineFloatInterpolator = ObjectRegistryClasses::NiBSplineFloatInterpolator;
using NiflibNiBSplineCompFloatInterpolator= Niflib::NiBSplineCompFloatInterpolator;
using NiBSplineCompFloatInterpolator = ObjectRegistryClasses::NiBSplineCompFloatInterpolator;
using NiflibNiBSplinePoint3Interpolator= Niflib::NiBSplinePoint3Interpolator;
using NiBSplinePoint3Interpolator = ObjectRegistryClasses::NiBSplinePoint3Interpolator;
using NiflibNiBSplineCompPoint3Interpolator= Niflib::NiBSplineCompPoint3Interpolator;
using NiBSplineCompPoint3Interpolator = ObjectRegistryClasses::NiBSplineCompPoint3Interpolator;
using NiflibNiBSplineTransformInterpolator= Niflib::NiBSplineTransformInterpolator;
using NiBSplineTransformInterpolator = ObjectRegistryClasses::NiBSplineTransformInterpolator;
using NiflibNiBSplineCompTransformInterpolator= Niflib::NiBSplineCompTransformInterpolator;
using NiBSplineCompTransformInterpolator = ObjectRegistryClasses::NiBSplineCompTransformInterpolator;
using NiflibBSRotAccumTransfInterpolator= Niflib::BSRotAccumTransfInterpolator;
using BSRotAccumTransfInterpolator = ObjectRegistryClasses::BSRotAccumTransfInterpolator;
using NiflibNiBSplineData= Niflib::NiBSplineData;
using NiBSplineData = ObjectRegistryClasses::NiBSplineData;
using NiflibNiCamera= Niflib::NiCamera;
using NiCamera = ObjectRegistryClasses::NiCamera;
using NiflibNiColorData= Niflib::NiColorData;
using NiColorData = ObjectRegistryClasses::NiColorData;
using NiflibNiColorExtraData= Niflib::NiColorExtraData;
using NiColorExtraData = ObjectRegistryClasses::NiColorExtraData;
using NiflibNiControllerManager= Niflib::NiControllerManager;
using NiControllerManager = ObjectRegistryClasses::NiControllerManager;
using NiflibNiSequence= Niflib::NiSequence;
using NiSequence = ObjectRegistryClasses::NiSequence;
using NiflibNiControllerSequence= Niflib::NiControllerSequence;
using NiControllerSequence = ObjectRegistryClasses::NiControllerSequence;
using NiflibNiAVObjectPalette= Niflib::NiAVObjectPalette;
using NiAVObjectPalette = ObjectRegistryClasses::NiAVObjectPalette;
using NiflibNiDefaultAVObjectPalette= Niflib::NiDefaultAVObjectPalette;
using NiDefaultAVObjectPalette = ObjectRegistryClasses::NiDefaultAVObjectPalette;
using NiflibNiDirectionalLight= Niflib::NiDirectionalLight;
using NiDirectionalLight = ObjectRegistryClasses::NiDirectionalLight;
using NiflibNiDitherProperty= Niflib::NiDitherProperty;
using NiDitherProperty = ObjectRegistryClasses::NiDitherProperty;
using NiflibNiRollController= Niflib::NiRollController;
using NiRollController = ObjectRegistryClasses::NiRollController;
using NiflibNiFloatData= Niflib::NiFloatData;
using NiFloatData = ObjectRegistryClasses::NiFloatData;
using NiflibNiFloatExtraData= Niflib::NiFloatExtraData;
using NiFloatExtraData = ObjectRegistryClasses::NiFloatExtraData;
using NiflibNiFloatsExtraData= Niflib::NiFloatsExtraData;
using NiFloatsExtraData = ObjectRegistryClasses::NiFloatsExtraData;
using NiflibNiFogProperty= Niflib::NiFogProperty;
using NiFogProperty = ObjectRegistryClasses::NiFogProperty;
using NiflibNiGravity= Niflib::NiGravity;
using NiGravity = ObjectRegistryClasses::NiGravity;
using NiflibNiIntegerExtraData= Niflib::NiIntegerExtraData;
using NiIntegerExtraData = ObjectRegistryClasses::NiIntegerExtraData;
using NiflibBSXFlags= Niflib::BSXFlags;
using BSXFlags = ObjectRegistryClasses::BSXFlags;
using NiflibNiIntegersExtraData= Niflib::NiIntegersExtraData;
using NiIntegersExtraData = ObjectRegistryClasses::NiIntegersExtraData;
using NiflibBSKeyframeController= Niflib::BSKeyframeController;
using BSKeyframeController = ObjectRegistryClasses::BSKeyframeController;
using NiflibNiKeyframeData= Niflib::NiKeyframeData;
using NiKeyframeData = ObjectRegistryClasses::NiKeyframeData;
using NiflibNiLookAtController= Niflib::NiLookAtController;
using NiLookAtController = ObjectRegistryClasses::NiLookAtController;
using NiflibNiLookAtInterpolator= Niflib::NiLookAtInterpolator;
using NiLookAtInterpolator = ObjectRegistryClasses::NiLookAtInterpolator;
using NiflibNiMaterialProperty= Niflib::NiMaterialProperty;
using NiMaterialProperty = ObjectRegistryClasses::NiMaterialProperty;
using NiflibNiMorphData= Niflib::NiMorphData;
using NiMorphData = ObjectRegistryClasses::NiMorphData;
using NiflibNiNode= Niflib::NiNode;
using NiNode = ObjectRegistryClasses::NiNode;
using NiflibNiBone= Niflib::NiBone;
using NiBone = ObjectRegistryClasses::NiBone;
using NiflibAvoidNode= Niflib::AvoidNode;
using AvoidNode = ObjectRegistryClasses::AvoidNode;
using NiflibFxWidget= Niflib::FxWidget;
using FxWidget = ObjectRegistryClasses::FxWidget;
using NiflibFxButton= Niflib::FxButton;
using FxButton = ObjectRegistryClasses::FxButton;
using NiflibFxRadioButton= Niflib::FxRadioButton;
using FxRadioButton = ObjectRegistryClasses::FxRadioButton;
using NiflibNiBillboardNode= Niflib::NiBillboardNode;
using NiBillboardNode = ObjectRegistryClasses::NiBillboardNode;
using NiflibNiBSAnimationNode= Niflib::NiBSAnimationNode;
using NiBSAnimationNode = ObjectRegistryClasses::NiBSAnimationNode;
using NiflibNiBSParticleNode= Niflib::NiBSParticleNode;
using NiBSParticleNode = ObjectRegistryClasses::NiBSParticleNode;
using NiflibNiSwitchNode= Niflib::NiSwitchNode;
using NiSwitchNode = ObjectRegistryClasses::NiSwitchNode;
using NiflibNiLODNode= Niflib::NiLODNode;
using NiLODNode = ObjectRegistryClasses::NiLODNode;
using NiflibNiPalette= Niflib::NiPalette;
using NiPalette = ObjectRegistryClasses::NiPalette;
using NiflibNiParticleBomb= Niflib::NiParticleBomb;
using NiParticleBomb = ObjectRegistryClasses::NiParticleBomb;
using NiflibNiParticleColorModifier= Niflib::NiParticleColorModifier;
using NiParticleColorModifier = ObjectRegistryClasses::NiParticleColorModifier;
using NiflibNiParticleGrowFade= Niflib::NiParticleGrowFade;
using NiParticleGrowFade = ObjectRegistryClasses::NiParticleGrowFade;
using NiflibNiParticleMeshModifier= Niflib::NiParticleMeshModifier;
using NiParticleMeshModifier = ObjectRegistryClasses::NiParticleMeshModifier;
using NiflibNiParticleRotation= Niflib::NiParticleRotation;
using NiParticleRotation = ObjectRegistryClasses::NiParticleRotation;
using NiflibNiParticles= Niflib::NiParticles;
using NiParticles = ObjectRegistryClasses::NiParticles;
using NiflibNiAutoNormalParticles= Niflib::NiAutoNormalParticles;
using NiAutoNormalParticles = ObjectRegistryClasses::NiAutoNormalParticles;
using NiflibNiParticleMeshes= Niflib::NiParticleMeshes;
using NiParticleMeshes = ObjectRegistryClasses::NiParticleMeshes;
using NiflibNiParticleMeshesData= Niflib::NiParticleMeshesData;
using NiParticleMeshesData = ObjectRegistryClasses::NiParticleMeshesData;
using NiflibNiParticleSystem= Niflib::NiParticleSystem;
using NiParticleSystem = ObjectRegistryClasses::NiParticleSystem;
using NiflibNiMeshParticleSystem= Niflib::NiMeshParticleSystem;
using NiMeshParticleSystem = ObjectRegistryClasses::NiMeshParticleSystem;
using NiflibNiParticleSystemController= Niflib::NiParticleSystemController;
using NiParticleSystemController = ObjectRegistryClasses::NiParticleSystemController;
using NiflibNiBSPArrayController= Niflib::NiBSPArrayController;
using NiBSPArrayController = ObjectRegistryClasses::NiBSPArrayController;
using NiflibNiPathController= Niflib::NiPathController;
using NiPathController = ObjectRegistryClasses::NiPathController;
using NiflibATextureRenderData= Niflib::ATextureRenderData;
using ATextureRenderData = ObjectRegistryClasses::ATextureRenderData;
using NiflibNiPersistentSrcTextureRendererData= Niflib::NiPersistentSrcTextureRendererData;
using NiPersistentSrcTextureRendererData = ObjectRegistryClasses::NiPersistentSrcTextureRendererData;
using NiflibNiPixelData= Niflib::NiPixelData;
using NiPixelData = ObjectRegistryClasses::NiPixelData;
using NiflibNiPlanarCollider= Niflib::NiPlanarCollider;
using NiPlanarCollider = ObjectRegistryClasses::NiPlanarCollider;
using NiflibNiPointLight= Niflib::NiPointLight;
using NiPointLight = ObjectRegistryClasses::NiPointLight;
using NiflibNiPosData= Niflib::NiPosData;
using NiPosData = ObjectRegistryClasses::NiPosData;
using NiflibNiPSysAgeDeathModifier= Niflib::NiPSysAgeDeathModifier;
using NiPSysAgeDeathModifier = ObjectRegistryClasses::NiPSysAgeDeathModifier;
using NiflibNiPSysBombModifier= Niflib::NiPSysBombModifier;
using NiPSysBombModifier = ObjectRegistryClasses::NiPSysBombModifier;
using NiflibNiPSysBoundUpdateModifier= Niflib::NiPSysBoundUpdateModifier;
using NiPSysBoundUpdateModifier = ObjectRegistryClasses::NiPSysBoundUpdateModifier;
using NiflibNiPSysBoxEmitter= Niflib::NiPSysBoxEmitter;
using NiPSysBoxEmitter = ObjectRegistryClasses::NiPSysBoxEmitter;
using NiflibNiPSysColliderManager= Niflib::NiPSysColliderManager;
using NiPSysColliderManager = ObjectRegistryClasses::NiPSysColliderManager;
using NiflibNiPSysColorModifier= Niflib::NiPSysColorModifier;
using NiPSysColorModifier = ObjectRegistryClasses::NiPSysColorModifier;
using NiflibNiPSysCylinderEmitter= Niflib::NiPSysCylinderEmitter;
using NiPSysCylinderEmitter = ObjectRegistryClasses::NiPSysCylinderEmitter;
using NiflibNiPSysDragModifier= Niflib::NiPSysDragModifier;
using NiPSysDragModifier = ObjectRegistryClasses::NiPSysDragModifier;
using NiflibNiPSysEmitterCtlrData= Niflib::NiPSysEmitterCtlrData;
using NiPSysEmitterCtlrData = ObjectRegistryClasses::NiPSysEmitterCtlrData;
using NiflibNiPSysGravityModifier= Niflib::NiPSysGravityModifier;
using NiPSysGravityModifier = ObjectRegistryClasses::NiPSysGravityModifier;
using NiflibNiPSysGrowFadeModifier= Niflib::NiPSysGrowFadeModifier;
using NiPSysGrowFadeModifier = ObjectRegistryClasses::NiPSysGrowFadeModifier;
using NiflibNiPSysMeshEmitter= Niflib::NiPSysMeshEmitter;
using NiPSysMeshEmitter = ObjectRegistryClasses::NiPSysMeshEmitter;
using NiflibNiPSysMeshUpdateModifier= Niflib::NiPSysMeshUpdateModifier;
using NiPSysMeshUpdateModifier = ObjectRegistryClasses::NiPSysMeshUpdateModifier;
using NiflibBSPSysInheritVelocityModifier= Niflib::BSPSysInheritVelocityModifier;
using BSPSysInheritVelocityModifier = ObjectRegistryClasses::BSPSysInheritVelocityModifier;
using NiflibBSPSysHavokUpdateModifier= Niflib::BSPSysHavokUpdateModifier;
using BSPSysHavokUpdateModifier = ObjectRegistryClasses::BSPSysHavokUpdateModifier;
using NiflibBSPSysRecycleBoundModifier= Niflib::BSPSysRecycleBoundModifier;
using BSPSysRecycleBoundModifier = ObjectRegistryClasses::BSPSysRecycleBoundModifier;
using NiflibBSPSysSubTexModifier= Niflib::BSPSysSubTexModifier;
using BSPSysSubTexModifier = ObjectRegistryClasses::BSPSysSubTexModifier;
using NiflibNiPSysPlanarCollider= Niflib::NiPSysPlanarCollider;
using NiPSysPlanarCollider = ObjectRegistryClasses::NiPSysPlanarCollider;
using NiflibNiPSysSphericalCollider= Niflib::NiPSysSphericalCollider;
using NiPSysSphericalCollider = ObjectRegistryClasses::NiPSysSphericalCollider;
using NiflibNiPSysPositionModifier= Niflib::NiPSysPositionModifier;
using NiPSysPositionModifier = ObjectRegistryClasses::NiPSysPositionModifier;
using NiflibNiPSysResetOnLoopCtlr= Niflib::NiPSysResetOnLoopCtlr;
using NiPSysResetOnLoopCtlr = ObjectRegistryClasses::NiPSysResetOnLoopCtlr;
using NiflibNiPSysRotationModifier= Niflib::NiPSysRotationModifier;
using NiPSysRotationModifier = ObjectRegistryClasses::NiPSysRotationModifier;
using NiflibNiPSysSpawnModifier= Niflib::NiPSysSpawnModifier;
using NiPSysSpawnModifier = ObjectRegistryClasses::NiPSysSpawnModifier;
using NiflibNiPSysSphereEmitter= Niflib::NiPSysSphereEmitter;
using NiPSysSphereEmitter = ObjectRegistryClasses::NiPSysSphereEmitter;
using NiflibNiPSysUpdateCtlr= Niflib::NiPSysUpdateCtlr;
using NiPSysUpdateCtlr = ObjectRegistryClasses::NiPSysUpdateCtlr;
using NiflibNiPSysFieldModifier= Niflib::NiPSysFieldModifier;
using NiPSysFieldModifier = ObjectRegistryClasses::NiPSysFieldModifier;
using NiflibNiPSysVortexFieldModifier= Niflib::NiPSysVortexFieldModifier;
using NiPSysVortexFieldModifier = ObjectRegistryClasses::NiPSysVortexFieldModifier;
using NiflibNiPSysGravityFieldModifier= Niflib::NiPSysGravityFieldModifier;
using NiPSysGravityFieldModifier = ObjectRegistryClasses::NiPSysGravityFieldModifier;
using NiflibNiPSysDragFieldModifier= Niflib::NiPSysDragFieldModifier;
using NiPSysDragFieldModifier = ObjectRegistryClasses::NiPSysDragFieldModifier;
using NiflibNiPSysTurbulenceFieldModifier= Niflib::NiPSysTurbulenceFieldModifier;
using NiPSysTurbulenceFieldModifier = ObjectRegistryClasses::NiPSysTurbulenceFieldModifier;
using NiflibBSPSysLODModifier= Niflib::BSPSysLODModifier;
using BSPSysLODModifier = ObjectRegistryClasses::BSPSysLODModifier;
using NiflibBSPSysScaleModifier= Niflib::BSPSysScaleModifier;
using BSPSysScaleModifier = ObjectRegistryClasses::BSPSysScaleModifier;
using NiflibNiPSysFieldMagnitudeCtlr= Niflib::NiPSysFieldMagnitudeCtlr;
using NiPSysFieldMagnitudeCtlr = ObjectRegistryClasses::NiPSysFieldMagnitudeCtlr;
using NiflibNiPSysFieldAttenuationCtlr= Niflib::NiPSysFieldAttenuationCtlr;
using NiPSysFieldAttenuationCtlr = ObjectRegistryClasses::NiPSysFieldAttenuationCtlr;
using NiflibNiPSysFieldMaxDistanceCtlr= Niflib::NiPSysFieldMaxDistanceCtlr;
using NiPSysFieldMaxDistanceCtlr = ObjectRegistryClasses::NiPSysFieldMaxDistanceCtlr;
using NiflibNiPSysAirFieldAirFrictionCtlr= Niflib::NiPSysAirFieldAirFrictionCtlr;
using NiPSysAirFieldAirFrictionCtlr = ObjectRegistryClasses::NiPSysAirFieldAirFrictionCtlr;
using NiflibNiPSysAirFieldInheritVelocityCtlr= Niflib::NiPSysAirFieldInheritVelocityCtlr;
using NiPSysAirFieldInheritVelocityCtlr = ObjectRegistryClasses::NiPSysAirFieldInheritVelocityCtlr;
using NiflibNiPSysAirFieldSpreadCtlr= Niflib::NiPSysAirFieldSpreadCtlr;
using NiPSysAirFieldSpreadCtlr = ObjectRegistryClasses::NiPSysAirFieldSpreadCtlr;
using NiflibNiPSysInitialRotSpeedCtlr= Niflib::NiPSysInitialRotSpeedCtlr;
using NiPSysInitialRotSpeedCtlr = ObjectRegistryClasses::NiPSysInitialRotSpeedCtlr;
using NiflibNiPSysInitialRotSpeedVarCtlr= Niflib::NiPSysInitialRotSpeedVarCtlr;
using NiPSysInitialRotSpeedVarCtlr = ObjectRegistryClasses::NiPSysInitialRotSpeedVarCtlr;
using NiflibNiPSysInitialRotAngleCtlr= Niflib::NiPSysInitialRotAngleCtlr;
using NiPSysInitialRotAngleCtlr = ObjectRegistryClasses::NiPSysInitialRotAngleCtlr;
using NiflibNiPSysInitialRotAngleVarCtlr= Niflib::NiPSysInitialRotAngleVarCtlr;
using NiPSysInitialRotAngleVarCtlr = ObjectRegistryClasses::NiPSysInitialRotAngleVarCtlr;
using NiflibNiPSysEmitterPlanarAngleCtlr= Niflib::NiPSysEmitterPlanarAngleCtlr;
using NiPSysEmitterPlanarAngleCtlr = ObjectRegistryClasses::NiPSysEmitterPlanarAngleCtlr;
using NiflibNiPSysEmitterPlanarAngleVarCtlr= Niflib::NiPSysEmitterPlanarAngleVarCtlr;
using NiPSysEmitterPlanarAngleVarCtlr = ObjectRegistryClasses::NiPSysEmitterPlanarAngleVarCtlr;
using NiflibNiPSysAirFieldModifier= Niflib::NiPSysAirFieldModifier;
using NiPSysAirFieldModifier = ObjectRegistryClasses::NiPSysAirFieldModifier;
using NiflibNiPSysTrailEmitter= Niflib::NiPSysTrailEmitter;
using NiPSysTrailEmitter = ObjectRegistryClasses::NiPSysTrailEmitter;
using NiflibNiLightIntensityController= Niflib::NiLightIntensityController;
using NiLightIntensityController = ObjectRegistryClasses::NiLightIntensityController;
using NiflibNiPSysRadialFieldModifier= Niflib::NiPSysRadialFieldModifier;
using NiPSysRadialFieldModifier = ObjectRegistryClasses::NiPSysRadialFieldModifier;
using NiflibNiLODData= Niflib::NiLODData;
using NiLODData = ObjectRegistryClasses::NiLODData;
using NiflibNiRangeLODData= Niflib::NiRangeLODData;
using NiRangeLODData = ObjectRegistryClasses::NiRangeLODData;
using NiflibNiScreenLODData= Niflib::NiScreenLODData;
using NiScreenLODData = ObjectRegistryClasses::NiScreenLODData;
using NiflibNiRotatingParticles= Niflib::NiRotatingParticles;
using NiRotatingParticles = ObjectRegistryClasses::NiRotatingParticles;
using NiflibNiSequenceStreamHelper= Niflib::NiSequenceStreamHelper;
using NiSequenceStreamHelper = ObjectRegistryClasses::NiSequenceStreamHelper;
using NiflibNiShadeProperty= Niflib::NiShadeProperty;
using NiShadeProperty = ObjectRegistryClasses::NiShadeProperty;
using NiflibNiSkinData= Niflib::NiSkinData;
using NiSkinData = ObjectRegistryClasses::NiSkinData;
using NiflibNiSkinInstance= Niflib::NiSkinInstance;
using NiSkinInstance = ObjectRegistryClasses::NiSkinInstance;
using NiflibNiTriShapeSkinController= Niflib::NiTriShapeSkinController;
using NiTriShapeSkinController = ObjectRegistryClasses::NiTriShapeSkinController;
using NiflibNiClodSkinInstance= Niflib::NiClodSkinInstance;
using NiClodSkinInstance = ObjectRegistryClasses::NiClodSkinInstance;
using NiflibNiSkinPartition= Niflib::NiSkinPartition;
using NiSkinPartition = ObjectRegistryClasses::NiSkinPartition;
using NiflibNiTexture= Niflib::NiTexture;
using NiTexture = ObjectRegistryClasses::NiTexture;
using NiflibNiSourceTexture= Niflib::NiSourceTexture;
using NiSourceTexture = ObjectRegistryClasses::NiSourceTexture;
using NiflibNiSpecularProperty= Niflib::NiSpecularProperty;
using NiSpecularProperty = ObjectRegistryClasses::NiSpecularProperty;
using NiflibNiSphericalCollider= Niflib::NiSphericalCollider;
using NiSphericalCollider = ObjectRegistryClasses::NiSphericalCollider;
using NiflibNiSpotLight= Niflib::NiSpotLight;
using NiSpotLight = ObjectRegistryClasses::NiSpotLight;
using NiflibNiStencilProperty= Niflib::NiStencilProperty;
using NiStencilProperty = ObjectRegistryClasses::NiStencilProperty;
using NiflibNiStringExtraData= Niflib::NiStringExtraData;
using NiStringExtraData = ObjectRegistryClasses::NiStringExtraData;
using NiflibNiStringPalette= Niflib::NiStringPalette;
using NiStringPalette = ObjectRegistryClasses::NiStringPalette;
using NiflibNiStringsExtraData= Niflib::NiStringsExtraData;
using NiStringsExtraData = ObjectRegistryClasses::NiStringsExtraData;
using NiflibNiTextKeyExtraData= Niflib::NiTextKeyExtraData;
using NiTextKeyExtraData = ObjectRegistryClasses::NiTextKeyExtraData;
using NiflibNiTextureEffect= Niflib::NiTextureEffect;
using NiTextureEffect = ObjectRegistryClasses::NiTextureEffect;
using NiflibNiTextureModeProperty= Niflib::NiTextureModeProperty;
using NiTextureModeProperty = ObjectRegistryClasses::NiTextureModeProperty;
using NiflibNiImage= Niflib::NiImage;
using NiImage = ObjectRegistryClasses::NiImage;
using NiflibNiTextureProperty= Niflib::NiTextureProperty;
using NiTextureProperty = ObjectRegistryClasses::NiTextureProperty;
using NiflibNiMultiTextureProperty= Niflib::NiMultiTextureProperty;
using NiMultiTextureProperty = ObjectRegistryClasses::NiMultiTextureProperty;
using NiflibNiTexturingProperty= Niflib::NiTexturingProperty;
using NiTexturingProperty = ObjectRegistryClasses::NiTexturingProperty;
using NiflibNiTransformData= Niflib::NiTransformData;
using NiTransformData = ObjectRegistryClasses::NiTransformData;
using NiflibNiTriShape= Niflib::NiTriShape;
using NiTriShape = ObjectRegistryClasses::NiTriShape;
using NiflibNiTriShapeData= Niflib::NiTriShapeData;
using NiTriShapeData = ObjectRegistryClasses::NiTriShapeData;
using NiflibNiTriStrips= Niflib::NiTriStrips;
using NiTriStrips = ObjectRegistryClasses::NiTriStrips;
using NiflibNiTriStripsData= Niflib::NiTriStripsData;
using NiTriStripsData = ObjectRegistryClasses::NiTriStripsData;
using NiflibNiEnvMappedTriShape= Niflib::NiEnvMappedTriShape;
using NiEnvMappedTriShape = ObjectRegistryClasses::NiEnvMappedTriShape;
using NiflibNiEnvMappedTriShapeData= Niflib::NiEnvMappedTriShapeData;
using NiEnvMappedTriShapeData = ObjectRegistryClasses::NiEnvMappedTriShapeData;
using NiflibNiBezierTriangle4= Niflib::NiBezierTriangle4;
using NiBezierTriangle4 = ObjectRegistryClasses::NiBezierTriangle4;
using NiflibNiBezierMesh= Niflib::NiBezierMesh;
using NiBezierMesh = ObjectRegistryClasses::NiBezierMesh;
using NiflibNiClod= Niflib::NiClod;
using NiClod = ObjectRegistryClasses::NiClod;
using NiflibNiClodData= Niflib::NiClodData;
using NiClodData = ObjectRegistryClasses::NiClodData;
using NiflibNiUVController= Niflib::NiUVController;
using NiUVController = ObjectRegistryClasses::NiUVController;
using NiflibNiUVData= Niflib::NiUVData;
using NiUVData = ObjectRegistryClasses::NiUVData;
using NiflibNiVectorExtraData= Niflib::NiVectorExtraData;
using NiVectorExtraData = ObjectRegistryClasses::NiVectorExtraData;
using NiflibNiVertexColorProperty= Niflib::NiVertexColorProperty;
using NiVertexColorProperty = ObjectRegistryClasses::NiVertexColorProperty;
using NiflibNiVertWeightsExtraData= Niflib::NiVertWeightsExtraData;
using NiVertWeightsExtraData = ObjectRegistryClasses::NiVertWeightsExtraData;
using NiflibNiVisData= Niflib::NiVisData;
using NiVisData = ObjectRegistryClasses::NiVisData;
using NiflibNiWireframeProperty= Niflib::NiWireframeProperty;
using NiWireframeProperty = ObjectRegistryClasses::NiWireframeProperty;
using NiflibNiZBufferProperty= Niflib::NiZBufferProperty;
using NiZBufferProperty = ObjectRegistryClasses::NiZBufferProperty;
using NiflibRootCollisionNode= Niflib::RootCollisionNode;
using RootCollisionNode = ObjectRegistryClasses::RootCollisionNode;
using NiflibNiRawImageData= Niflib::NiRawImageData;
using NiRawImageData = ObjectRegistryClasses::NiRawImageData;
using NiflibNiSortAdjustNode= Niflib::NiSortAdjustNode;
using NiSortAdjustNode = ObjectRegistryClasses::NiSortAdjustNode;
using NiflibNiSourceCubeMap= Niflib::NiSourceCubeMap;
using NiSourceCubeMap = ObjectRegistryClasses::NiSourceCubeMap;
using NiflibNiPhysXProp= Niflib::NiPhysXProp;
using NiPhysXProp = ObjectRegistryClasses::NiPhysXProp;
using NiflibNiPhysXPropDesc= Niflib::NiPhysXPropDesc;
using NiPhysXPropDesc = ObjectRegistryClasses::NiPhysXPropDesc;
using NiflibNiPhysXActorDesc= Niflib::NiPhysXActorDesc;
using NiPhysXActorDesc = ObjectRegistryClasses::NiPhysXActorDesc;
using NiflibNiPhysXBodyDesc= Niflib::NiPhysXBodyDesc;
using NiPhysXBodyDesc = ObjectRegistryClasses::NiPhysXBodyDesc;
using NiflibNiPhysXD6JointDesc= Niflib::NiPhysXD6JointDesc;
using NiPhysXD6JointDesc = ObjectRegistryClasses::NiPhysXD6JointDesc;
using NiflibNiPhysXShapeDesc= Niflib::NiPhysXShapeDesc;
using NiPhysXShapeDesc = ObjectRegistryClasses::NiPhysXShapeDesc;
using NiflibNiPhysXMeshDesc= Niflib::NiPhysXMeshDesc;
using NiPhysXMeshDesc = ObjectRegistryClasses::NiPhysXMeshDesc;
using NiflibNiPhysXMaterialDesc= Niflib::NiPhysXMaterialDesc;
using NiPhysXMaterialDesc = ObjectRegistryClasses::NiPhysXMaterialDesc;
using NiflibNiPhysXKinematicSrc= Niflib::NiPhysXKinematicSrc;
using NiPhysXKinematicSrc = ObjectRegistryClasses::NiPhysXKinematicSrc;
using NiflibNiPhysXTransformDest= Niflib::NiPhysXTransformDest;
using NiPhysXTransformDest = ObjectRegistryClasses::NiPhysXTransformDest;
using NiflibNiArkAnimationExtraData= Niflib::NiArkAnimationExtraData;
using NiArkAnimationExtraData = ObjectRegistryClasses::NiArkAnimationExtraData;
using NiflibNiArkImporterExtraData= Niflib::NiArkImporterExtraData;
using NiArkImporterExtraData = ObjectRegistryClasses::NiArkImporterExtraData;
using NiflibNiArkTextureExtraData= Niflib::NiArkTextureExtraData;
using NiArkTextureExtraData = ObjectRegistryClasses::NiArkTextureExtraData;
using NiflibNiArkViewportInfoExtraData= Niflib::NiArkViewportInfoExtraData;
using NiArkViewportInfoExtraData = ObjectRegistryClasses::NiArkViewportInfoExtraData;
using NiflibNiArkShaderExtraData= Niflib::NiArkShaderExtraData;
using NiArkShaderExtraData = ObjectRegistryClasses::NiArkShaderExtraData;
using NiflibNiLines= Niflib::NiLines;
using NiLines = ObjectRegistryClasses::NiLines;
using NiflibNiLinesData= Niflib::NiLinesData;
using NiLinesData = ObjectRegistryClasses::NiLinesData;
using NiflibNiScreenElementsData= Niflib::NiScreenElementsData;
using NiScreenElementsData = ObjectRegistryClasses::NiScreenElementsData;
using NiflibNiScreenElements= Niflib::NiScreenElements;
using NiScreenElements = ObjectRegistryClasses::NiScreenElements;
using NiflibNiRoomGroup= Niflib::NiRoomGroup;
using NiRoomGroup = ObjectRegistryClasses::NiRoomGroup;
using NiflibNiRoom= Niflib::NiRoom;
using NiRoom = ObjectRegistryClasses::NiRoom;
using NiflibNiPortal= Niflib::NiPortal;
using NiPortal = ObjectRegistryClasses::NiPortal;
using NiflibBSFadeNode= Niflib::BSFadeNode;
using BSFadeNode = ObjectRegistryClasses::BSFadeNode;
using NiflibBSShaderProperty= Niflib::BSShaderProperty;
using BSShaderProperty = ObjectRegistryClasses::BSShaderProperty;
using NiflibBSShaderLightingProperty= Niflib::BSShaderLightingProperty;
using BSShaderLightingProperty = ObjectRegistryClasses::BSShaderLightingProperty;
using NiflibBSShaderNoLightingProperty= Niflib::BSShaderNoLightingProperty;
using BSShaderNoLightingProperty = ObjectRegistryClasses::BSShaderNoLightingProperty;
using NiflibBSShaderPPLightingProperty= Niflib::BSShaderPPLightingProperty;
using BSShaderPPLightingProperty = ObjectRegistryClasses::BSShaderPPLightingProperty;
using NiflibBSEffectShaderPropertyFloatController= Niflib::BSEffectShaderPropertyFloatController;
using BSEffectShaderPropertyFloatController = ObjectRegistryClasses::BSEffectShaderPropertyFloatController;
using NiflibBSEffectShaderPropertyColorController= Niflib::BSEffectShaderPropertyColorController;
using BSEffectShaderPropertyColorController = ObjectRegistryClasses::BSEffectShaderPropertyColorController;
using NiflibBSLightingShaderPropertyFloatController= Niflib::BSLightingShaderPropertyFloatController;
using BSLightingShaderPropertyFloatController = ObjectRegistryClasses::BSLightingShaderPropertyFloatController;
using NiflibBSLightingShaderPropertyColorController= Niflib::BSLightingShaderPropertyColorController;
using BSLightingShaderPropertyColorController = ObjectRegistryClasses::BSLightingShaderPropertyColorController;
using NiflibBSNiAlphaPropertyTestRefController= Niflib::BSNiAlphaPropertyTestRefController;
using BSNiAlphaPropertyTestRefController = ObjectRegistryClasses::BSNiAlphaPropertyTestRefController;
using NiflibBSProceduralLightningController= Niflib::BSProceduralLightningController;
using BSProceduralLightningController = ObjectRegistryClasses::BSProceduralLightningController;
using NiflibBSShaderTextureSet= Niflib::BSShaderTextureSet;
using BSShaderTextureSet = ObjectRegistryClasses::BSShaderTextureSet;
using NiflibWaterShaderProperty= Niflib::WaterShaderProperty;
using WaterShaderProperty = ObjectRegistryClasses::WaterShaderProperty;
using NiflibSkyShaderProperty= Niflib::SkyShaderProperty;
using SkyShaderProperty = ObjectRegistryClasses::SkyShaderProperty;
using NiflibTileShaderProperty= Niflib::TileShaderProperty;
using TileShaderProperty = ObjectRegistryClasses::TileShaderProperty;
using NiflibDistantLODShaderProperty= Niflib::DistantLODShaderProperty;
using DistantLODShaderProperty = ObjectRegistryClasses::DistantLODShaderProperty;
using NiflibBSDistantTreeShaderProperty= Niflib::BSDistantTreeShaderProperty;
using BSDistantTreeShaderProperty = ObjectRegistryClasses::BSDistantTreeShaderProperty;
using NiflibTallGrassShaderProperty= Niflib::TallGrassShaderProperty;
using TallGrassShaderProperty = ObjectRegistryClasses::TallGrassShaderProperty;
using NiflibVolumetricFogShaderProperty= Niflib::VolumetricFogShaderProperty;
using VolumetricFogShaderProperty = ObjectRegistryClasses::VolumetricFogShaderProperty;
using NiflibHairShaderProperty= Niflib::HairShaderProperty;
using HairShaderProperty = ObjectRegistryClasses::HairShaderProperty;
using NiflibLighting30ShaderProperty= Niflib::Lighting30ShaderProperty;
using Lighting30ShaderProperty = ObjectRegistryClasses::Lighting30ShaderProperty;
using NiflibBSLightingShaderProperty= Niflib::BSLightingShaderProperty;
using BSLightingShaderProperty = ObjectRegistryClasses::BSLightingShaderProperty;
using NiflibBSEffectShaderProperty= Niflib::BSEffectShaderProperty;
using BSEffectShaderProperty = ObjectRegistryClasses::BSEffectShaderProperty;
using NiflibBSWaterShaderProperty= Niflib::BSWaterShaderProperty;
using BSWaterShaderProperty = ObjectRegistryClasses::BSWaterShaderProperty;
using NiflibBSSkyShaderProperty= Niflib::BSSkyShaderProperty;
using BSSkyShaderProperty = ObjectRegistryClasses::BSSkyShaderProperty;
using NiflibBSDismemberSkinInstance= Niflib::BSDismemberSkinInstance;
using BSDismemberSkinInstance = ObjectRegistryClasses::BSDismemberSkinInstance;
using NiflibBSDecalPlacementVectorExtraData= Niflib::BSDecalPlacementVectorExtraData;
using BSDecalPlacementVectorExtraData = ObjectRegistryClasses::BSDecalPlacementVectorExtraData;
using NiflibBSPSysSimpleColorModifier= Niflib::BSPSysSimpleColorModifier;
using BSPSysSimpleColorModifier = ObjectRegistryClasses::BSPSysSimpleColorModifier;
using NiflibBSValueNode= Niflib::BSValueNode;
using BSValueNode = ObjectRegistryClasses::BSValueNode;
using NiflibBSStripParticleSystem= Niflib::BSStripParticleSystem;
using BSStripParticleSystem = ObjectRegistryClasses::BSStripParticleSystem;
using NiflibBSStripPSysData= Niflib::BSStripPSysData;
using BSStripPSysData = ObjectRegistryClasses::BSStripPSysData;
using NiflibBSPSysStripUpdateModifier= Niflib::BSPSysStripUpdateModifier;
using BSPSysStripUpdateModifier = ObjectRegistryClasses::BSPSysStripUpdateModifier;
using NiflibBSMaterialEmittanceMultController= Niflib::BSMaterialEmittanceMultController;
using BSMaterialEmittanceMultController = ObjectRegistryClasses::BSMaterialEmittanceMultController;
using NiflibBSMasterParticleSystem= Niflib::BSMasterParticleSystem;
using BSMasterParticleSystem = ObjectRegistryClasses::BSMasterParticleSystem;
using NiflibBSPSysMultiTargetEmitterCtlr= Niflib::BSPSysMultiTargetEmitterCtlr;
using BSPSysMultiTargetEmitterCtlr = ObjectRegistryClasses::BSPSysMultiTargetEmitterCtlr;
using NiflibBSRefractionStrengthController= Niflib::BSRefractionStrengthController;
using BSRefractionStrengthController = ObjectRegistryClasses::BSRefractionStrengthController;
using NiflibBSOrderedNode= Niflib::BSOrderedNode;
using BSOrderedNode = ObjectRegistryClasses::BSOrderedNode;
using NiflibBSBlastNode= Niflib::BSBlastNode;
using BSBlastNode = ObjectRegistryClasses::BSBlastNode;
using NiflibBSDamageStage= Niflib::BSDamageStage;
using BSDamageStage = ObjectRegistryClasses::BSDamageStage;
using NiflibBSRefractionFirePeriodController= Niflib::BSRefractionFirePeriodController;
using BSRefractionFirePeriodController = ObjectRegistryClasses::BSRefractionFirePeriodController;
using NiflibbhkConvexListShape= Niflib::bhkConvexListShape;
using bhkConvexListShape = ObjectRegistryClasses::bhkConvexListShape;
using NiflibBSTreadTransfInterpolator= Niflib::BSTreadTransfInterpolator;
using BSTreadTransfInterpolator = ObjectRegistryClasses::BSTreadTransfInterpolator;
using NiflibBSAnimNotes= Niflib::BSAnimNotes;
using BSAnimNotes = ObjectRegistryClasses::BSAnimNotes;
using NiflibbhkLiquidAction= Niflib::bhkLiquidAction;
using bhkLiquidAction = ObjectRegistryClasses::bhkLiquidAction;
using NiflibBSMultiBoundNode= Niflib::BSMultiBoundNode;
using BSMultiBoundNode = ObjectRegistryClasses::BSMultiBoundNode;
using NiflibBSMultiBound= Niflib::BSMultiBound;
using BSMultiBound = ObjectRegistryClasses::BSMultiBound;
using NiflibBSMultiBoundData= Niflib::BSMultiBoundData;
using BSMultiBoundData = ObjectRegistryClasses::BSMultiBoundData;
using NiflibBSMultiBoundOBB= Niflib::BSMultiBoundOBB;
using BSMultiBoundOBB = ObjectRegistryClasses::BSMultiBoundOBB;
using NiflibBSMultiBoundSphere= Niflib::BSMultiBoundSphere;
using BSMultiBoundSphere = ObjectRegistryClasses::BSMultiBoundSphere;
using NiflibBSSegmentedTriShape= Niflib::BSSegmentedTriShape;
using BSSegmentedTriShape = ObjectRegistryClasses::BSSegmentedTriShape;
using NiflibBSMultiBoundAABB= Niflib::BSMultiBoundAABB;
using BSMultiBoundAABB = ObjectRegistryClasses::BSMultiBoundAABB;
using NiflibNiAdditionalGeometryData= Niflib::NiAdditionalGeometryData;
using NiAdditionalGeometryData = ObjectRegistryClasses::NiAdditionalGeometryData;
using NiflibBSPackedAdditionalGeometryData= Niflib::BSPackedAdditionalGeometryData;
using BSPackedAdditionalGeometryData = ObjectRegistryClasses::BSPackedAdditionalGeometryData;
using NiflibBSWArray= Niflib::BSWArray;
using BSWArray = ObjectRegistryClasses::BSWArray;
using NiflibbhkAabbPhantom= Niflib::bhkAabbPhantom;
using bhkAabbPhantom = ObjectRegistryClasses::bhkAabbPhantom;
using NiflibBSFrustumFOVController= Niflib::BSFrustumFOVController;
using BSFrustumFOVController = ObjectRegistryClasses::BSFrustumFOVController;
using NiflibBSDebrisNode= Niflib::BSDebrisNode;
using BSDebrisNode = ObjectRegistryClasses::BSDebrisNode;
using NiflibbhkBreakableConstraint= Niflib::bhkBreakableConstraint;
using bhkBreakableConstraint = ObjectRegistryClasses::bhkBreakableConstraint;
using NiflibbhkOrientHingedBodyAction= Niflib::bhkOrientHingedBodyAction;
using bhkOrientHingedBodyAction = ObjectRegistryClasses::bhkOrientHingedBodyAction;
using NiflibNiDataStream= Niflib::NiDataStream;
using NiDataStream = ObjectRegistryClasses::NiDataStream;
using NiflibNiRenderObject= Niflib::NiRenderObject;
using NiRenderObject = ObjectRegistryClasses::NiRenderObject;
using NiflibNiMeshModifier= Niflib::NiMeshModifier;
using NiMeshModifier = ObjectRegistryClasses::NiMeshModifier;
using NiflibNiMesh= Niflib::NiMesh;
using NiMesh = ObjectRegistryClasses::NiMesh;
using NiflibNiMorphWeightsController= Niflib::NiMorphWeightsController;
using NiMorphWeightsController = ObjectRegistryClasses::NiMorphWeightsController;
using NiflibNiMorphMeshModifier= Niflib::NiMorphMeshModifier;
using NiMorphMeshModifier = ObjectRegistryClasses::NiMorphMeshModifier;
using NiflibNiSkinningMeshModifier= Niflib::NiSkinningMeshModifier;
using NiSkinningMeshModifier = ObjectRegistryClasses::NiSkinningMeshModifier;
using NiflibNiInstancingMeshModifier= Niflib::NiInstancingMeshModifier;
using NiInstancingMeshModifier = ObjectRegistryClasses::NiInstancingMeshModifier;
using NiflibNiSkinningLODController= Niflib::NiSkinningLODController;
using NiSkinningLODController = ObjectRegistryClasses::NiSkinningLODController;
using NiflibNiPSParticleSystem= Niflib::NiPSParticleSystem;
using NiPSParticleSystem = ObjectRegistryClasses::NiPSParticleSystem;
using NiflibNiPSMeshParticleSystem= Niflib::NiPSMeshParticleSystem;
using NiPSMeshParticleSystem = ObjectRegistryClasses::NiPSMeshParticleSystem;
using NiflibNiPSEmitParticlesCtlr= Niflib::NiPSEmitParticlesCtlr;
using NiPSEmitParticlesCtlr = ObjectRegistryClasses::NiPSEmitParticlesCtlr;
using NiflibNiPSForceActiveCtlr= Niflib::NiPSForceActiveCtlr;
using NiPSForceActiveCtlr = ObjectRegistryClasses::NiPSForceActiveCtlr;
using NiflibNiPSSimulator= Niflib::NiPSSimulator;
using NiPSSimulator = ObjectRegistryClasses::NiPSSimulator;
using NiflibNiPSSimulatorStep= Niflib::NiPSSimulatorStep;
using NiPSSimulatorStep = ObjectRegistryClasses::NiPSSimulatorStep;
using NiflibNiPSSimulatorGeneralStep= Niflib::NiPSSimulatorGeneralStep;
using NiPSSimulatorGeneralStep = ObjectRegistryClasses::NiPSSimulatorGeneralStep;
using NiflibNiPSSimulatorForcesStep= Niflib::NiPSSimulatorForcesStep;
using NiPSSimulatorForcesStep = ObjectRegistryClasses::NiPSSimulatorForcesStep;
using NiflibNiPSSimulatorCollidersStep= Niflib::NiPSSimulatorCollidersStep;
using NiPSSimulatorCollidersStep = ObjectRegistryClasses::NiPSSimulatorCollidersStep;
using NiflibNiPSSimulatorMeshAlignStep= Niflib::NiPSSimulatorMeshAlignStep;
using NiPSSimulatorMeshAlignStep = ObjectRegistryClasses::NiPSSimulatorMeshAlignStep;
using NiflibNiPSSimulatorFinalStep= Niflib::NiPSSimulatorFinalStep;
using NiPSSimulatorFinalStep = ObjectRegistryClasses::NiPSSimulatorFinalStep;
using NiflibNiPSFacingQuadGenerator= Niflib::NiPSFacingQuadGenerator;
using NiPSFacingQuadGenerator = ObjectRegistryClasses::NiPSFacingQuadGenerator;
using NiflibNiShadowGenerator= Niflib::NiShadowGenerator;
using NiShadowGenerator = ObjectRegistryClasses::NiShadowGenerator;
using NiflibNiPSBoundUpdater= Niflib::NiPSBoundUpdater;
using NiPSBoundUpdater = ObjectRegistryClasses::NiPSBoundUpdater;
using NiflibNiPSDragForce= Niflib::NiPSDragForce;
using NiPSDragForce = ObjectRegistryClasses::NiPSDragForce;
using NiflibNiPSGravityForce= Niflib::NiPSGravityForce;
using NiPSGravityForce = ObjectRegistryClasses::NiPSGravityForce;
using NiflibNiPSBoxEmitter= Niflib::NiPSBoxEmitter;
using NiPSBoxEmitter = ObjectRegistryClasses::NiPSBoxEmitter;
using NiflibNiPSMeshEmitter= Niflib::NiPSMeshEmitter;
using NiPSMeshEmitter = ObjectRegistryClasses::NiPSMeshEmitter;
using NiflibNiPSGravityStrengthCtlr= Niflib::NiPSGravityStrengthCtlr;
using NiPSGravityStrengthCtlr = ObjectRegistryClasses::NiPSGravityStrengthCtlr;
using NiflibNiPSPlanarCollider= Niflib::NiPSPlanarCollider;
using NiPSPlanarCollider = ObjectRegistryClasses::NiPSPlanarCollider;
using NiflibNiPSEmitterSpeedCtlr= Niflib::NiPSEmitterSpeedCtlr;
using NiPSEmitterSpeedCtlr = ObjectRegistryClasses::NiPSEmitterSpeedCtlr;
using NiflibNiPSEmitterRadiusCtlr= Niflib::NiPSEmitterRadiusCtlr;
using NiPSEmitterRadiusCtlr = ObjectRegistryClasses::NiPSEmitterRadiusCtlr;
using NiflibNiPSResetOnLoopCtlr= Niflib::NiPSResetOnLoopCtlr;
using NiPSResetOnLoopCtlr = ObjectRegistryClasses::NiPSResetOnLoopCtlr;
using NiflibNiPSSphereEmitter= Niflib::NiPSSphereEmitter;
using NiPSSphereEmitter = ObjectRegistryClasses::NiPSSphereEmitter;
using NiflibNiPSCylinderEmitter= Niflib::NiPSCylinderEmitter;
using NiPSCylinderEmitter = ObjectRegistryClasses::NiPSCylinderEmitter;
using NiflibNiPSEmitterDeclinationCtlr= Niflib::NiPSEmitterDeclinationCtlr;
using NiPSEmitterDeclinationCtlr = ObjectRegistryClasses::NiPSEmitterDeclinationCtlr;
using NiflibNiPSEmitterDeclinationVarCtlr= Niflib::NiPSEmitterDeclinationVarCtlr;
using NiPSEmitterDeclinationVarCtlr = ObjectRegistryClasses::NiPSEmitterDeclinationVarCtlr;
using NiflibNiPSEmitterPlanarAngleCtlr= Niflib::NiPSEmitterPlanarAngleCtlr;
using NiPSEmitterPlanarAngleCtlr = ObjectRegistryClasses::NiPSEmitterPlanarAngleCtlr;
using NiflibNiPSEmitterPlanarAngleVarCtlr= Niflib::NiPSEmitterPlanarAngleVarCtlr;
using NiPSEmitterPlanarAngleVarCtlr = ObjectRegistryClasses::NiPSEmitterPlanarAngleVarCtlr;
using NiflibNiPSEmitterRotAngleCtlr= Niflib::NiPSEmitterRotAngleCtlr;
using NiPSEmitterRotAngleCtlr = ObjectRegistryClasses::NiPSEmitterRotAngleCtlr;
using NiflibNiPSEmitterRotAngleVarCtlr= Niflib::NiPSEmitterRotAngleVarCtlr;
using NiPSEmitterRotAngleVarCtlr = ObjectRegistryClasses::NiPSEmitterRotAngleVarCtlr;
using NiflibNiPSEmitterRotSpeedCtlr= Niflib::NiPSEmitterRotSpeedCtlr;
using NiPSEmitterRotSpeedCtlr = ObjectRegistryClasses::NiPSEmitterRotSpeedCtlr;
using NiflibNiPSEmitterRotSpeedVarCtlr= Niflib::NiPSEmitterRotSpeedVarCtlr;
using NiPSEmitterRotSpeedVarCtlr = ObjectRegistryClasses::NiPSEmitterRotSpeedVarCtlr;
using NiflibNiPSEmitterLifeSpanCtlr= Niflib::NiPSEmitterLifeSpanCtlr;
using NiPSEmitterLifeSpanCtlr = ObjectRegistryClasses::NiPSEmitterLifeSpanCtlr;
using NiflibNiPSBombForce= Niflib::NiPSBombForce;
using NiPSBombForce = ObjectRegistryClasses::NiPSBombForce;
using NiflibNiPSSphericalCollider= Niflib::NiPSSphericalCollider;
using NiPSSphericalCollider = ObjectRegistryClasses::NiPSSphericalCollider;
using NiflibNiPSSpawner= Niflib::NiPSSpawner;
using NiPSSpawner = ObjectRegistryClasses::NiPSSpawner;
using NiflibNiSequenceData= Niflib::NiSequenceData;
using NiSequenceData = ObjectRegistryClasses::NiSequenceData;
using NiflibNiTransformEvaluator= Niflib::NiTransformEvaluator;
using NiTransformEvaluator = ObjectRegistryClasses::NiTransformEvaluator;
using NiflibNiBSplineCompTransformEvaluator= Niflib::NiBSplineCompTransformEvaluator;
using NiBSplineCompTransformEvaluator = ObjectRegistryClasses::NiBSplineCompTransformEvaluator;
using NiflibNiMeshHWInstance= Niflib::NiMeshHWInstance;
using NiMeshHWInstance = ObjectRegistryClasses::NiMeshHWInstance;
using NiflibNiFurSpringController= Niflib::NiFurSpringController;
using NiFurSpringController = ObjectRegistryClasses::NiFurSpringController;
using NiflibCStreamableAssetData= Niflib::CStreamableAssetData;
using CStreamableAssetData = ObjectRegistryClasses::CStreamableAssetData;
using NiflibbhkCompressedMeshShape= Niflib::bhkCompressedMeshShape;
using bhkCompressedMeshShape = ObjectRegistryClasses::bhkCompressedMeshShape;
using NiflibbhkCompressedMeshShapeData= Niflib::bhkCompressedMeshShapeData;
using bhkCompressedMeshShapeData = ObjectRegistryClasses::bhkCompressedMeshShapeData;
using NiflibBSInvMarker= Niflib::BSInvMarker;
using BSInvMarker = ObjectRegistryClasses::BSInvMarker;
using NiflibBSBoneLODExtraData= Niflib::BSBoneLODExtraData;
using BSBoneLODExtraData = ObjectRegistryClasses::BSBoneLODExtraData;
using NiflibBSBehaviorGraphExtraData= Niflib::BSBehaviorGraphExtraData;
using BSBehaviorGraphExtraData = ObjectRegistryClasses::BSBehaviorGraphExtraData;
using NiflibBSLagBoneController= Niflib::BSLagBoneController;
using BSLagBoneController = ObjectRegistryClasses::BSLagBoneController;
using NiflibBSLODTriShape= Niflib::BSLODTriShape;
using BSLODTriShape = ObjectRegistryClasses::BSLODTriShape;
using NiflibBSFurnitureMarkerNode= Niflib::BSFurnitureMarkerNode;
using BSFurnitureMarkerNode = ObjectRegistryClasses::BSFurnitureMarkerNode;
using NiflibBSLeafAnimNode= Niflib::BSLeafAnimNode;
using BSLeafAnimNode = ObjectRegistryClasses::BSLeafAnimNode;
using NiflibBSTreeNode= Niflib::BSTreeNode;
using BSTreeNode = ObjectRegistryClasses::BSTreeNode;
using NiflibNiLightRadiusController= Niflib::NiLightRadiusController;
using NiLightRadiusController = ObjectRegistryClasses::NiLightRadiusController;
using NiflibBSShape= Niflib::BSShape;
using BSShape = ObjectRegistryClasses::BSShape;
using NiflibBSTriShape= Niflib::BSTriShape;
using BSTriShape = ObjectRegistryClasses::BSTriShape;
using NiflibBSSubIndexTriShape= Niflib::BSSubIndexTriShape;
using BSSubIndexTriShape = ObjectRegistryClasses::BSSubIndexTriShape;
using NiflibBSMeshLODTriShape= Niflib::BSMeshLODTriShape;
using BSMeshLODTriShape = ObjectRegistryClasses::BSMeshLODTriShape;
using NiflibbhkNPCollisionObject= Niflib::bhkNPCollisionObject;
using bhkNPCollisionObject = ObjectRegistryClasses::bhkNPCollisionObject;
using NiflibBSExtraData= Niflib::BSExtraData;
using BSExtraData = ObjectRegistryClasses::BSExtraData;
using NiflibbhkPhysicsSystem= Niflib::bhkPhysicsSystem;
using bhkPhysicsSystem = ObjectRegistryClasses::bhkPhysicsSystem;
using NiflibbhkRagdollSystem= Niflib::bhkRagdollSystem;
using bhkRagdollSystem = ObjectRegistryClasses::bhkRagdollSystem;
using NiflibBSClothExtraData= Niflib::BSClothExtraData;
using BSClothExtraData = ObjectRegistryClasses::BSClothExtraData;
using NiflibBSSkin__Instance= Niflib::BSSkin__Instance;
using BSSkin__Instance = ObjectRegistryClasses::BSSkin__Instance;
using NiflibBSSkin__BoneData= Niflib::BSSkin__BoneData;
using BSSkin__BoneData = ObjectRegistryClasses::BSSkin__BoneData;
using NiflibBSPositionData= Niflib::BSPositionData;
using BSPositionData = ObjectRegistryClasses::BSPositionData;
using NiflibBSConnectPoint__Parents= Niflib::BSConnectPoint__Parents;
using BSConnectPoint__Parents = ObjectRegistryClasses::BSConnectPoint__Parents;
using NiflibBSConnectPoint__Children= Niflib::BSConnectPoint__Children;
using BSConnectPoint__Children = ObjectRegistryClasses::BSConnectPoint__Children;