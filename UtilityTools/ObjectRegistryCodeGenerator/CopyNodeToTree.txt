if(TargetNodeType == "NiObject")
{
	Index = TargetObjectRegistry.NiObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsAlphaAnimator")
{
	Index = TargetObjectRegistry.Ni3dsAlphaAnimator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsAlphaAnimator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsAnimationNode")
{
	Index = TargetObjectRegistry.Ni3dsAnimationNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsAnimationNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsColorAnimator")
{
	Index = TargetObjectRegistry.Ni3dsColorAnimator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsColorAnimator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsMorphShape")
{
	Index = TargetObjectRegistry.Ni3dsMorphShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsMorphShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsParticleSystem")
{
	Index = TargetObjectRegistry.Ni3dsParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Ni3dsPathController")
{
	Index = TargetObjectRegistry.Ni3dsPathController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Ni3dsPathController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleModifier")
{
	Index = TargetObjectRegistry.NiParticleModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysCollider")
{
	Index = TargetObjectRegistry.NiPSysCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkRefObject")
{
	Index = TargetObjectRegistry.bhkRefObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkRefObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkSerializable")
{
	Index = TargetObjectRegistry.bhkSerializable_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkSerializable_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkWorldObject")
{
	Index = TargetObjectRegistry.bhkWorldObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkWorldObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkPhantom")
{
	Index = TargetObjectRegistry.bhkPhantom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkPhantom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkShapePhantom")
{
	Index = TargetObjectRegistry.bhkShapePhantom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkShapePhantom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkSimpleShapePhantom")
{
	Index = TargetObjectRegistry.bhkSimpleShapePhantom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkSimpleShapePhantom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkEntity")
{
	Index = TargetObjectRegistry.bhkEntity_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkEntity_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkRigidBody")
{
	Index = TargetObjectRegistry.bhkRigidBody_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkRigidBody_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkRigidBodyT")
{
	Index = TargetObjectRegistry.bhkRigidBodyT_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkRigidBodyT_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkConstraint")
{
	Index = TargetObjectRegistry.bhkConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkLimitedHingeConstraint")
{
	Index = TargetObjectRegistry.bhkLimitedHingeConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkLimitedHingeConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkMalleableConstraint")
{
	Index = TargetObjectRegistry.bhkMalleableConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkMalleableConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkStiffSpringConstraint")
{
	Index = TargetObjectRegistry.bhkStiffSpringConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkStiffSpringConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkRagdollConstraint")
{
	Index = TargetObjectRegistry.bhkRagdollConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkRagdollConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkPrismaticConstraint")
{
	Index = TargetObjectRegistry.bhkPrismaticConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkPrismaticConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkHingeConstraint")
{
	Index = TargetObjectRegistry.bhkHingeConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkHingeConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBallAndSocketConstraint")
{
	Index = TargetObjectRegistry.bhkBallAndSocketConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBallAndSocketConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBallSocketConstraintChain")
{
	Index = TargetObjectRegistry.bhkBallSocketConstraintChain_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBallSocketConstraintChain_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkShape")
{
	Index = TargetObjectRegistry.bhkShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkTransformShape")
{
	Index = TargetObjectRegistry.bhkTransformShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkTransformShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkSphereRepShape")
{
	Index = TargetObjectRegistry.bhkSphereRepShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkSphereRepShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkConvexShape")
{
	Index = TargetObjectRegistry.bhkConvexShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkConvexShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkSphereShape")
{
	Index = TargetObjectRegistry.bhkSphereShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkSphereShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkCapsuleShape")
{
	Index = TargetObjectRegistry.bhkCapsuleShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkCapsuleShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBoxShape")
{
	Index = TargetObjectRegistry.bhkBoxShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBoxShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkConvexVerticesShape")
{
	Index = TargetObjectRegistry.bhkConvexVerticesShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkConvexVerticesShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkConvexTransformShape")
{
	Index = TargetObjectRegistry.bhkConvexTransformShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkConvexTransformShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkMultiSphereShape")
{
	Index = TargetObjectRegistry.bhkMultiSphereShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkMultiSphereShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBvTreeShape")
{
	Index = TargetObjectRegistry.bhkBvTreeShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBvTreeShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkMoppBvTreeShape")
{
	Index = TargetObjectRegistry.bhkMoppBvTreeShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkMoppBvTreeShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkShapeCollection")
{
	Index = TargetObjectRegistry.bhkShapeCollection_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkShapeCollection_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkListShape")
{
	Index = TargetObjectRegistry.bhkListShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkListShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkMeshShape")
{
	Index = TargetObjectRegistry.bhkMeshShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkMeshShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkPackedNiTriStripsShape")
{
	Index = TargetObjectRegistry.bhkPackedNiTriStripsShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkPackedNiTriStripsShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkNiTriStripsShape")
{
	Index = TargetObjectRegistry.bhkNiTriStripsShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkNiTriStripsShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiExtraData")
{
	Index = TargetObjectRegistry.NiExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiInterpolator")
{
	Index = TargetObjectRegistry.NiInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiKeyBasedInterpolator")
{
	Index = TargetObjectRegistry.NiKeyBasedInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiKeyBasedInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatInterpolator")
{
	Index = TargetObjectRegistry.NiFloatInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTransformInterpolator")
{
	Index = TargetObjectRegistry.NiTransformInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTransformInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPoint3Interpolator")
{
	Index = TargetObjectRegistry.NiPoint3Interpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPoint3Interpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPathInterpolator")
{
	Index = TargetObjectRegistry.NiPathInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPathInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBoolInterpolator")
{
	Index = TargetObjectRegistry.NiBoolInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBoolInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBoolTimelineInterpolator")
{
	Index = TargetObjectRegistry.NiBoolTimelineInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBoolTimelineInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBlendInterpolator")
{
	Index = TargetObjectRegistry.NiBlendInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBlendInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineInterpolator")
{
	Index = TargetObjectRegistry.NiBSplineInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiObjectNET")
{
	Index = TargetObjectRegistry.NiObjectNET_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiObjectNET_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiCollisionObject")
{
	Index = TargetObjectRegistry.NiCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiCollisionData")
{
	Index = TargetObjectRegistry.NiCollisionData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiCollisionData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkNiCollisionObject")
{
	Index = TargetObjectRegistry.bhkNiCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkNiCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkCollisionObject")
{
	Index = TargetObjectRegistry.bhkCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBlendCollisionObject")
{
	Index = TargetObjectRegistry.bhkBlendCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBlendCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkPCollisionObject")
{
	Index = TargetObjectRegistry.bhkPCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkPCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkSPCollisionObject")
{
	Index = TargetObjectRegistry.bhkSPCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkSPCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAVObject")
{
	Index = TargetObjectRegistry.NiAVObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAVObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiDynamicEffect")
{
	Index = TargetObjectRegistry.NiDynamicEffect_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiDynamicEffect_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLight")
{
	Index = TargetObjectRegistry.NiLight_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLight_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiProperty")
{
	Index = TargetObjectRegistry.NiProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTransparentProperty")
{
	Index = TargetObjectRegistry.NiTransparentProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTransparentProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysModifier")
{
	Index = TargetObjectRegistry.NiPSysModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitter")
{
	Index = TargetObjectRegistry.NiPSysEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysVolumeEmitter")
{
	Index = TargetObjectRegistry.NiPSysVolumeEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysVolumeEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTimeController")
{
	Index = TargetObjectRegistry.NiTimeController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTimeController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiInterpController")
{
	Index = TargetObjectRegistry.NiInterpController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiInterpController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMultiTargetTransformController")
{
	Index = TargetObjectRegistry.NiMultiTargetTransformController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMultiTargetTransformController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiGeomMorpherController")
{
	Index = TargetObjectRegistry.NiGeomMorpherController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiGeomMorpherController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMorphController")
{
	Index = TargetObjectRegistry.NiMorphController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMorphController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMorpherController")
{
	Index = TargetObjectRegistry.NiMorpherController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMorpherController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSingleInterpController")
{
	Index = TargetObjectRegistry.NiSingleInterpController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSingleInterpController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiKeyframeController")
{
	Index = TargetObjectRegistry.NiKeyframeController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiKeyframeController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTransformController")
{
	Index = TargetObjectRegistry.NiTransformController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTransformController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysModifierCtlr")
{
	Index = TargetObjectRegistry.NiPSysModifierCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysModifierCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysModifierBoolCtlr")
{
	Index = TargetObjectRegistry.NiPSysModifierBoolCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysModifierBoolCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysModifierActiveCtlr")
{
	Index = TargetObjectRegistry.NiPSysModifierActiveCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysModifierActiveCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysModifierFloatCtlr")
{
	Index = TargetObjectRegistry.NiPSysModifierFloatCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysModifierFloatCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterDeclinationCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterDeclinationCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterDeclinationCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterDeclinationVarCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterDeclinationVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterDeclinationVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterInitialRadiusCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterInitialRadiusCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterInitialRadiusCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterLifeSpanCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterLifeSpanCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterLifeSpanCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterSpeedCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterSpeedCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterSpeedCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysGravityStrengthCtlr")
{
	Index = TargetObjectRegistry.NiPSysGravityStrengthCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysGravityStrengthCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatInterpController")
{
	Index = TargetObjectRegistry.NiFloatInterpController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatInterpController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFlipController")
{
	Index = TargetObjectRegistry.NiFlipController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFlipController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAlphaController")
{
	Index = TargetObjectRegistry.NiAlphaController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAlphaController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTextureTransformController")
{
	Index = TargetObjectRegistry.NiTextureTransformController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTextureTransformController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLightDimmerController")
{
	Index = TargetObjectRegistry.NiLightDimmerController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLightDimmerController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBoolInterpController")
{
	Index = TargetObjectRegistry.NiBoolInterpController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBoolInterpController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiVisController")
{
	Index = TargetObjectRegistry.NiVisController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiVisController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPoint3InterpController")
{
	Index = TargetObjectRegistry.NiPoint3InterpController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPoint3InterpController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMaterialColorController")
{
	Index = TargetObjectRegistry.NiMaterialColorController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMaterialColorController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLightColorController")
{
	Index = TargetObjectRegistry.NiLightColorController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLightColorController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiExtraDataController")
{
	Index = TargetObjectRegistry.NiExtraDataController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiExtraDataController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatExtraDataController")
{
	Index = TargetObjectRegistry.NiFloatExtraDataController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatExtraDataController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBoneLODController")
{
	Index = TargetObjectRegistry.NiBoneLODController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBoneLODController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSBoneLODController")
{
	Index = TargetObjectRegistry.NiBSBoneLODController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSBoneLODController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiGeometry")
{
	Index = TargetObjectRegistry.NiGeometry_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiGeometry_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriBasedGeom")
{
	Index = TargetObjectRegistry.NiTriBasedGeom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriBasedGeom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiGeometryData")
{
	Index = TargetObjectRegistry.NiGeometryData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiGeometryData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "AbstractAdditionalGeometryData")
{
	Index = TargetObjectRegistry.AbstractAdditionalGeometryData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.AbstractAdditionalGeometryData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriBasedGeomData")
{
	Index = TargetObjectRegistry.NiTriBasedGeomData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriBasedGeomData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBlendController")
{
	Index = TargetObjectRegistry.bhkBlendController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBlendController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSBound")
{
	Index = TargetObjectRegistry.BSBound_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSBound_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSFurnitureMarker")
{
	Index = TargetObjectRegistry.BSFurnitureMarker_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSFurnitureMarker_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSParentVelocityModifier")
{
	Index = TargetObjectRegistry.BSParentVelocityModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSParentVelocityModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysArrayEmitter")
{
	Index = TargetObjectRegistry.BSPSysArrayEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysArrayEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSWindModifier")
{
	Index = TargetObjectRegistry.BSWindModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSWindModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "hkPackedNiTriStripsData")
{
	Index = TargetObjectRegistry.hkPackedNiTriStripsData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.hkPackedNiTriStripsData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAlphaProperty")
{
	Index = TargetObjectRegistry.NiAlphaProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAlphaProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAmbientLight")
{
	Index = TargetObjectRegistry.NiAmbientLight_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAmbientLight_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticlesData")
{
	Index = TargetObjectRegistry.NiParticlesData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticlesData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRotatingParticlesData")
{
	Index = TargetObjectRegistry.NiRotatingParticlesData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRotatingParticlesData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAutoNormalParticlesData")
{
	Index = TargetObjectRegistry.NiAutoNormalParticlesData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAutoNormalParticlesData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysData")
{
	Index = TargetObjectRegistry.NiPSysData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMeshPSysData")
{
	Index = TargetObjectRegistry.NiMeshPSysData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMeshPSysData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBinaryExtraData")
{
	Index = TargetObjectRegistry.NiBinaryExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBinaryExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBinaryVoxelExtraData")
{
	Index = TargetObjectRegistry.NiBinaryVoxelExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBinaryVoxelExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBinaryVoxelData")
{
	Index = TargetObjectRegistry.NiBinaryVoxelData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBinaryVoxelData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBlendBoolInterpolator")
{
	Index = TargetObjectRegistry.NiBlendBoolInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBlendBoolInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBlendFloatInterpolator")
{
	Index = TargetObjectRegistry.NiBlendFloatInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBlendFloatInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBlendPoint3Interpolator")
{
	Index = TargetObjectRegistry.NiBlendPoint3Interpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBlendPoint3Interpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBlendTransformInterpolator")
{
	Index = TargetObjectRegistry.NiBlendTransformInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBlendTransformInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBoolData")
{
	Index = TargetObjectRegistry.NiBoolData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBoolData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBooleanExtraData")
{
	Index = TargetObjectRegistry.NiBooleanExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBooleanExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineBasisData")
{
	Index = TargetObjectRegistry.NiBSplineBasisData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineBasisData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineFloatInterpolator")
{
	Index = TargetObjectRegistry.NiBSplineFloatInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineFloatInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineCompFloatInterpolator")
{
	Index = TargetObjectRegistry.NiBSplineCompFloatInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineCompFloatInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplinePoint3Interpolator")
{
	Index = TargetObjectRegistry.NiBSplinePoint3Interpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplinePoint3Interpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineCompPoint3Interpolator")
{
	Index = TargetObjectRegistry.NiBSplineCompPoint3Interpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineCompPoint3Interpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineTransformInterpolator")
{
	Index = TargetObjectRegistry.NiBSplineTransformInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineTransformInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineCompTransformInterpolator")
{
	Index = TargetObjectRegistry.NiBSplineCompTransformInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineCompTransformInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSRotAccumTransfInterpolator")
{
	Index = TargetObjectRegistry.BSRotAccumTransfInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSRotAccumTransfInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineData")
{
	Index = TargetObjectRegistry.NiBSplineData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiCamera")
{
	Index = TargetObjectRegistry.NiCamera_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiCamera_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiColorData")
{
	Index = TargetObjectRegistry.NiColorData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiColorData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiColorExtraData")
{
	Index = TargetObjectRegistry.NiColorExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiColorExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiControllerManager")
{
	Index = TargetObjectRegistry.NiControllerManager_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiControllerManager_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSequence")
{
	Index = TargetObjectRegistry.NiSequence_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSequence_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiControllerSequence")
{
	Index = TargetObjectRegistry.NiControllerSequence_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiControllerSequence_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAVObjectPalette")
{
	Index = TargetObjectRegistry.NiAVObjectPalette_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAVObjectPalette_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiDefaultAVObjectPalette")
{
	Index = TargetObjectRegistry.NiDefaultAVObjectPalette_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiDefaultAVObjectPalette_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiDirectionalLight")
{
	Index = TargetObjectRegistry.NiDirectionalLight_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiDirectionalLight_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiDitherProperty")
{
	Index = TargetObjectRegistry.NiDitherProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiDitherProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRollController")
{
	Index = TargetObjectRegistry.NiRollController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRollController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatData")
{
	Index = TargetObjectRegistry.NiFloatData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatExtraData")
{
	Index = TargetObjectRegistry.NiFloatExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFloatsExtraData")
{
	Index = TargetObjectRegistry.NiFloatsExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFloatsExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFogProperty")
{
	Index = TargetObjectRegistry.NiFogProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFogProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiGravity")
{
	Index = TargetObjectRegistry.NiGravity_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiGravity_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiIntegerExtraData")
{
	Index = TargetObjectRegistry.NiIntegerExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiIntegerExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSXFlags")
{
	Index = TargetObjectRegistry.BSXFlags_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSXFlags_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiIntegersExtraData")
{
	Index = TargetObjectRegistry.NiIntegersExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiIntegersExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSKeyframeController")
{
	Index = TargetObjectRegistry.BSKeyframeController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSKeyframeController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiKeyframeData")
{
	Index = TargetObjectRegistry.NiKeyframeData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiKeyframeData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLookAtController")
{
	Index = TargetObjectRegistry.NiLookAtController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLookAtController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLookAtInterpolator")
{
	Index = TargetObjectRegistry.NiLookAtInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLookAtInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMaterialProperty")
{
	Index = TargetObjectRegistry.NiMaterialProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMaterialProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMorphData")
{
	Index = TargetObjectRegistry.NiMorphData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMorphData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiNode")
{
	Index = TargetObjectRegistry.NiNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBone")
{
	Index = TargetObjectRegistry.NiBone_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBone_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "AvoidNode")
{
	Index = TargetObjectRegistry.AvoidNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.AvoidNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "FxWidget")
{
	Index = TargetObjectRegistry.FxWidget_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.FxWidget_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "FxButton")
{
	Index = TargetObjectRegistry.FxButton_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.FxButton_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "FxRadioButton")
{
	Index = TargetObjectRegistry.FxRadioButton_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.FxRadioButton_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBillboardNode")
{
	Index = TargetObjectRegistry.NiBillboardNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBillboardNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSAnimationNode")
{
	Index = TargetObjectRegistry.NiBSAnimationNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSAnimationNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSParticleNode")
{
	Index = TargetObjectRegistry.NiBSParticleNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSParticleNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSwitchNode")
{
	Index = TargetObjectRegistry.NiSwitchNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSwitchNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLODNode")
{
	Index = TargetObjectRegistry.NiLODNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLODNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPalette")
{
	Index = TargetObjectRegistry.NiPalette_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPalette_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleBomb")
{
	Index = TargetObjectRegistry.NiParticleBomb_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleBomb_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleColorModifier")
{
	Index = TargetObjectRegistry.NiParticleColorModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleColorModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleGrowFade")
{
	Index = TargetObjectRegistry.NiParticleGrowFade_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleGrowFade_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleMeshModifier")
{
	Index = TargetObjectRegistry.NiParticleMeshModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleMeshModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleRotation")
{
	Index = TargetObjectRegistry.NiParticleRotation_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleRotation_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticles")
{
	Index = TargetObjectRegistry.NiParticles_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticles_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAutoNormalParticles")
{
	Index = TargetObjectRegistry.NiAutoNormalParticles_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAutoNormalParticles_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleMeshes")
{
	Index = TargetObjectRegistry.NiParticleMeshes_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleMeshes_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleMeshesData")
{
	Index = TargetObjectRegistry.NiParticleMeshesData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleMeshesData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleSystem")
{
	Index = TargetObjectRegistry.NiParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMeshParticleSystem")
{
	Index = TargetObjectRegistry.NiMeshParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMeshParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiParticleSystemController")
{
	Index = TargetObjectRegistry.NiParticleSystemController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiParticleSystemController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSPArrayController")
{
	Index = TargetObjectRegistry.NiBSPArrayController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSPArrayController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPathController")
{
	Index = TargetObjectRegistry.NiPathController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPathController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "ATextureRenderData")
{
	Index = TargetObjectRegistry.ATextureRenderData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.ATextureRenderData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPersistentSrcTextureRendererData")
{
	Index = TargetObjectRegistry.NiPersistentSrcTextureRendererData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPersistentSrcTextureRendererData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPixelData")
{
	Index = TargetObjectRegistry.NiPixelData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPixelData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPlanarCollider")
{
	Index = TargetObjectRegistry.NiPlanarCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPlanarCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPointLight")
{
	Index = TargetObjectRegistry.NiPointLight_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPointLight_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPosData")
{
	Index = TargetObjectRegistry.NiPosData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPosData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysAgeDeathModifier")
{
	Index = TargetObjectRegistry.NiPSysAgeDeathModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysAgeDeathModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysBombModifier")
{
	Index = TargetObjectRegistry.NiPSysBombModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysBombModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysBoundUpdateModifier")
{
	Index = TargetObjectRegistry.NiPSysBoundUpdateModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysBoundUpdateModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysBoxEmitter")
{
	Index = TargetObjectRegistry.NiPSysBoxEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysBoxEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysColliderManager")
{
	Index = TargetObjectRegistry.NiPSysColliderManager_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysColliderManager_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysColorModifier")
{
	Index = TargetObjectRegistry.NiPSysColorModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysColorModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysCylinderEmitter")
{
	Index = TargetObjectRegistry.NiPSysCylinderEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysCylinderEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysDragModifier")
{
	Index = TargetObjectRegistry.NiPSysDragModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysDragModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterCtlrData")
{
	Index = TargetObjectRegistry.NiPSysEmitterCtlrData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterCtlrData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysGravityModifier")
{
	Index = TargetObjectRegistry.NiPSysGravityModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysGravityModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysGrowFadeModifier")
{
	Index = TargetObjectRegistry.NiPSysGrowFadeModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysGrowFadeModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysMeshEmitter")
{
	Index = TargetObjectRegistry.NiPSysMeshEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysMeshEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysMeshUpdateModifier")
{
	Index = TargetObjectRegistry.NiPSysMeshUpdateModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysMeshUpdateModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysInheritVelocityModifier")
{
	Index = TargetObjectRegistry.BSPSysInheritVelocityModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysInheritVelocityModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysHavokUpdateModifier")
{
	Index = TargetObjectRegistry.BSPSysHavokUpdateModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysHavokUpdateModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysRecycleBoundModifier")
{
	Index = TargetObjectRegistry.BSPSysRecycleBoundModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysRecycleBoundModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysSubTexModifier")
{
	Index = TargetObjectRegistry.BSPSysSubTexModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysSubTexModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysPlanarCollider")
{
	Index = TargetObjectRegistry.NiPSysPlanarCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysPlanarCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysSphericalCollider")
{
	Index = TargetObjectRegistry.NiPSysSphericalCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysSphericalCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysPositionModifier")
{
	Index = TargetObjectRegistry.NiPSysPositionModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysPositionModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysResetOnLoopCtlr")
{
	Index = TargetObjectRegistry.NiPSysResetOnLoopCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysResetOnLoopCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysRotationModifier")
{
	Index = TargetObjectRegistry.NiPSysRotationModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysRotationModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysSpawnModifier")
{
	Index = TargetObjectRegistry.NiPSysSpawnModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysSpawnModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysSphereEmitter")
{
	Index = TargetObjectRegistry.NiPSysSphereEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysSphereEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysUpdateCtlr")
{
	Index = TargetObjectRegistry.NiPSysUpdateCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysUpdateCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysVortexFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysVortexFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysVortexFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysGravityFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysGravityFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysGravityFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysDragFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysDragFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysDragFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysTurbulenceFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysTurbulenceFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysTurbulenceFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysLODModifier")
{
	Index = TargetObjectRegistry.BSPSysLODModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysLODModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysScaleModifier")
{
	Index = TargetObjectRegistry.BSPSysScaleModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysScaleModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysFieldMagnitudeCtlr")
{
	Index = TargetObjectRegistry.NiPSysFieldMagnitudeCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysFieldMagnitudeCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysFieldAttenuationCtlr")
{
	Index = TargetObjectRegistry.NiPSysFieldAttenuationCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysFieldAttenuationCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysFieldMaxDistanceCtlr")
{
	Index = TargetObjectRegistry.NiPSysFieldMaxDistanceCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysFieldMaxDistanceCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysAirFieldAirFrictionCtlr")
{
	Index = TargetObjectRegistry.NiPSysAirFieldAirFrictionCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysAirFieldAirFrictionCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysAirFieldInheritVelocityCtlr")
{
	Index = TargetObjectRegistry.NiPSysAirFieldInheritVelocityCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysAirFieldInheritVelocityCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysAirFieldSpreadCtlr")
{
	Index = TargetObjectRegistry.NiPSysAirFieldSpreadCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysAirFieldSpreadCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysInitialRotSpeedCtlr")
{
	Index = TargetObjectRegistry.NiPSysInitialRotSpeedCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysInitialRotSpeedCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysInitialRotSpeedVarCtlr")
{
	Index = TargetObjectRegistry.NiPSysInitialRotSpeedVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysInitialRotSpeedVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysInitialRotAngleCtlr")
{
	Index = TargetObjectRegistry.NiPSysInitialRotAngleCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysInitialRotAngleCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysInitialRotAngleVarCtlr")
{
	Index = TargetObjectRegistry.NiPSysInitialRotAngleVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysInitialRotAngleVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterPlanarAngleCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterPlanarAngleCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterPlanarAngleCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysEmitterPlanarAngleVarCtlr")
{
	Index = TargetObjectRegistry.NiPSysEmitterPlanarAngleVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysEmitterPlanarAngleVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysAirFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysAirFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysAirFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysTrailEmitter")
{
	Index = TargetObjectRegistry.NiPSysTrailEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysTrailEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLightIntensityController")
{
	Index = TargetObjectRegistry.NiLightIntensityController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLightIntensityController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSysRadialFieldModifier")
{
	Index = TargetObjectRegistry.NiPSysRadialFieldModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSysRadialFieldModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLODData")
{
	Index = TargetObjectRegistry.NiLODData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLODData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRangeLODData")
{
	Index = TargetObjectRegistry.NiRangeLODData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRangeLODData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiScreenLODData")
{
	Index = TargetObjectRegistry.NiScreenLODData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiScreenLODData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRotatingParticles")
{
	Index = TargetObjectRegistry.NiRotatingParticles_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRotatingParticles_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSequenceStreamHelper")
{
	Index = TargetObjectRegistry.NiSequenceStreamHelper_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSequenceStreamHelper_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiShadeProperty")
{
	Index = TargetObjectRegistry.NiShadeProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiShadeProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSkinData")
{
	Index = TargetObjectRegistry.NiSkinData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSkinData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSkinInstance")
{
	Index = TargetObjectRegistry.NiSkinInstance_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSkinInstance_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriShapeSkinController")
{
	Index = TargetObjectRegistry.NiTriShapeSkinController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriShapeSkinController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiClodSkinInstance")
{
	Index = TargetObjectRegistry.NiClodSkinInstance_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiClodSkinInstance_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSkinPartition")
{
	Index = TargetObjectRegistry.NiSkinPartition_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSkinPartition_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTexture")
{
	Index = TargetObjectRegistry.NiTexture_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTexture_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSourceTexture")
{
	Index = TargetObjectRegistry.NiSourceTexture_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSourceTexture_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSpecularProperty")
{
	Index = TargetObjectRegistry.NiSpecularProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSpecularProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSphericalCollider")
{
	Index = TargetObjectRegistry.NiSphericalCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSphericalCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSpotLight")
{
	Index = TargetObjectRegistry.NiSpotLight_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSpotLight_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiStencilProperty")
{
	Index = TargetObjectRegistry.NiStencilProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiStencilProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiStringExtraData")
{
	Index = TargetObjectRegistry.NiStringExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiStringExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiStringPalette")
{
	Index = TargetObjectRegistry.NiStringPalette_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiStringPalette_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiStringsExtraData")
{
	Index = TargetObjectRegistry.NiStringsExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiStringsExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTextKeyExtraData")
{
	Index = TargetObjectRegistry.NiTextKeyExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTextKeyExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTextureEffect")
{
	Index = TargetObjectRegistry.NiTextureEffect_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTextureEffect_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTextureModeProperty")
{
	Index = TargetObjectRegistry.NiTextureModeProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTextureModeProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiImage")
{
	Index = TargetObjectRegistry.NiImage_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiImage_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTextureProperty")
{
	Index = TargetObjectRegistry.NiTextureProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTextureProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMultiTextureProperty")
{
	Index = TargetObjectRegistry.NiMultiTextureProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMultiTextureProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTexturingProperty")
{
	Index = TargetObjectRegistry.NiTexturingProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTexturingProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTransformData")
{
	Index = TargetObjectRegistry.NiTransformData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTransformData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriShape")
{
	Index = TargetObjectRegistry.NiTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriShapeData")
{
	Index = TargetObjectRegistry.NiTriShapeData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriShapeData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriStrips")
{
	Index = TargetObjectRegistry.NiTriStrips_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriStrips_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTriStripsData")
{
	Index = TargetObjectRegistry.NiTriStripsData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTriStripsData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiEnvMappedTriShape")
{
	Index = TargetObjectRegistry.NiEnvMappedTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiEnvMappedTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiEnvMappedTriShapeData")
{
	Index = TargetObjectRegistry.NiEnvMappedTriShapeData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiEnvMappedTriShapeData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBezierTriangle4")
{
	Index = TargetObjectRegistry.NiBezierTriangle4_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBezierTriangle4_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBezierMesh")
{
	Index = TargetObjectRegistry.NiBezierMesh_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBezierMesh_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiClod")
{
	Index = TargetObjectRegistry.NiClod_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiClod_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiClodData")
{
	Index = TargetObjectRegistry.NiClodData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiClodData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiUVController")
{
	Index = TargetObjectRegistry.NiUVController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiUVController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiUVData")
{
	Index = TargetObjectRegistry.NiUVData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiUVData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiVectorExtraData")
{
	Index = TargetObjectRegistry.NiVectorExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiVectorExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiVertexColorProperty")
{
	Index = TargetObjectRegistry.NiVertexColorProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiVertexColorProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiVertWeightsExtraData")
{
	Index = TargetObjectRegistry.NiVertWeightsExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiVertWeightsExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiVisData")
{
	Index = TargetObjectRegistry.NiVisData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiVisData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiWireframeProperty")
{
	Index = TargetObjectRegistry.NiWireframeProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiWireframeProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiZBufferProperty")
{
	Index = TargetObjectRegistry.NiZBufferProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiZBufferProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "RootCollisionNode")
{
	Index = TargetObjectRegistry.RootCollisionNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.RootCollisionNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRawImageData")
{
	Index = TargetObjectRegistry.NiRawImageData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRawImageData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSortAdjustNode")
{
	Index = TargetObjectRegistry.NiSortAdjustNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSortAdjustNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSourceCubeMap")
{
	Index = TargetObjectRegistry.NiSourceCubeMap_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSourceCubeMap_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXProp")
{
	Index = TargetObjectRegistry.NiPhysXProp_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXProp_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXPropDesc")
{
	Index = TargetObjectRegistry.NiPhysXPropDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXPropDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXActorDesc")
{
	Index = TargetObjectRegistry.NiPhysXActorDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXActorDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXBodyDesc")
{
	Index = TargetObjectRegistry.NiPhysXBodyDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXBodyDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXD6JointDesc")
{
	Index = TargetObjectRegistry.NiPhysXD6JointDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXD6JointDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXShapeDesc")
{
	Index = TargetObjectRegistry.NiPhysXShapeDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXShapeDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXMeshDesc")
{
	Index = TargetObjectRegistry.NiPhysXMeshDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXMeshDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXMaterialDesc")
{
	Index = TargetObjectRegistry.NiPhysXMaterialDesc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXMaterialDesc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXKinematicSrc")
{
	Index = TargetObjectRegistry.NiPhysXKinematicSrc_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXKinematicSrc_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPhysXTransformDest")
{
	Index = TargetObjectRegistry.NiPhysXTransformDest_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPhysXTransformDest_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiArkAnimationExtraData")
{
	Index = TargetObjectRegistry.NiArkAnimationExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiArkAnimationExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiArkImporterExtraData")
{
	Index = TargetObjectRegistry.NiArkImporterExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiArkImporterExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiArkTextureExtraData")
{
	Index = TargetObjectRegistry.NiArkTextureExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiArkTextureExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiArkViewportInfoExtraData")
{
	Index = TargetObjectRegistry.NiArkViewportInfoExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiArkViewportInfoExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiArkShaderExtraData")
{
	Index = TargetObjectRegistry.NiArkShaderExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiArkShaderExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLines")
{
	Index = TargetObjectRegistry.NiLines_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLines_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLinesData")
{
	Index = TargetObjectRegistry.NiLinesData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLinesData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiScreenElementsData")
{
	Index = TargetObjectRegistry.NiScreenElementsData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiScreenElementsData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiScreenElements")
{
	Index = TargetObjectRegistry.NiScreenElements_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiScreenElements_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRoomGroup")
{
	Index = TargetObjectRegistry.NiRoomGroup_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRoomGroup_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRoom")
{
	Index = TargetObjectRegistry.NiRoom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRoom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPortal")
{
	Index = TargetObjectRegistry.NiPortal_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPortal_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSFadeNode")
{
	Index = TargetObjectRegistry.BSFadeNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSFadeNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShaderProperty")
{
	Index = TargetObjectRegistry.BSShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShaderLightingProperty")
{
	Index = TargetObjectRegistry.BSShaderLightingProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShaderLightingProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShaderNoLightingProperty")
{
	Index = TargetObjectRegistry.BSShaderNoLightingProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShaderNoLightingProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShaderPPLightingProperty")
{
	Index = TargetObjectRegistry.BSShaderPPLightingProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShaderPPLightingProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSEffectShaderPropertyFloatController")
{
	Index = TargetObjectRegistry.BSEffectShaderPropertyFloatController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSEffectShaderPropertyFloatController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSEffectShaderPropertyColorController")
{
	Index = TargetObjectRegistry.BSEffectShaderPropertyColorController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSEffectShaderPropertyColorController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLightingShaderPropertyFloatController")
{
	Index = TargetObjectRegistry.BSLightingShaderPropertyFloatController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLightingShaderPropertyFloatController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLightingShaderPropertyColorController")
{
	Index = TargetObjectRegistry.BSLightingShaderPropertyColorController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLightingShaderPropertyColorController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSNiAlphaPropertyTestRefController")
{
	Index = TargetObjectRegistry.BSNiAlphaPropertyTestRefController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSNiAlphaPropertyTestRefController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSProceduralLightningController")
{
	Index = TargetObjectRegistry.BSProceduralLightningController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSProceduralLightningController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShaderTextureSet")
{
	Index = TargetObjectRegistry.BSShaderTextureSet_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShaderTextureSet_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "WaterShaderProperty")
{
	Index = TargetObjectRegistry.WaterShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.WaterShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "SkyShaderProperty")
{
	Index = TargetObjectRegistry.SkyShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.SkyShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "TileShaderProperty")
{
	Index = TargetObjectRegistry.TileShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.TileShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "DistantLODShaderProperty")
{
	Index = TargetObjectRegistry.DistantLODShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.DistantLODShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSDistantTreeShaderProperty")
{
	Index = TargetObjectRegistry.BSDistantTreeShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSDistantTreeShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "TallGrassShaderProperty")
{
	Index = TargetObjectRegistry.TallGrassShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.TallGrassShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "VolumetricFogShaderProperty")
{
	Index = TargetObjectRegistry.VolumetricFogShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.VolumetricFogShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "HairShaderProperty")
{
	Index = TargetObjectRegistry.HairShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.HairShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "Lighting30ShaderProperty")
{
	Index = TargetObjectRegistry.Lighting30ShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.Lighting30ShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLightingShaderProperty")
{
	Index = TargetObjectRegistry.BSLightingShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLightingShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSEffectShaderProperty")
{
	Index = TargetObjectRegistry.BSEffectShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSEffectShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSWaterShaderProperty")
{
	Index = TargetObjectRegistry.BSWaterShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSWaterShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSSkyShaderProperty")
{
	Index = TargetObjectRegistry.BSSkyShaderProperty_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSSkyShaderProperty_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSDismemberSkinInstance")
{
	Index = TargetObjectRegistry.BSDismemberSkinInstance_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSDismemberSkinInstance_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSDecalPlacementVectorExtraData")
{
	Index = TargetObjectRegistry.BSDecalPlacementVectorExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSDecalPlacementVectorExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysSimpleColorModifier")
{
	Index = TargetObjectRegistry.BSPSysSimpleColorModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysSimpleColorModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSValueNode")
{
	Index = TargetObjectRegistry.BSValueNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSValueNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSStripParticleSystem")
{
	Index = TargetObjectRegistry.BSStripParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSStripParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSStripPSysData")
{
	Index = TargetObjectRegistry.BSStripPSysData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSStripPSysData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysStripUpdateModifier")
{
	Index = TargetObjectRegistry.BSPSysStripUpdateModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysStripUpdateModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMaterialEmittanceMultController")
{
	Index = TargetObjectRegistry.BSMaterialEmittanceMultController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMaterialEmittanceMultController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMasterParticleSystem")
{
	Index = TargetObjectRegistry.BSMasterParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMasterParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPSysMultiTargetEmitterCtlr")
{
	Index = TargetObjectRegistry.BSPSysMultiTargetEmitterCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPSysMultiTargetEmitterCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSRefractionStrengthController")
{
	Index = TargetObjectRegistry.BSRefractionStrengthController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSRefractionStrengthController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSOrderedNode")
{
	Index = TargetObjectRegistry.BSOrderedNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSOrderedNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSBlastNode")
{
	Index = TargetObjectRegistry.BSBlastNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSBlastNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSDamageStage")
{
	Index = TargetObjectRegistry.BSDamageStage_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSDamageStage_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSRefractionFirePeriodController")
{
	Index = TargetObjectRegistry.BSRefractionFirePeriodController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSRefractionFirePeriodController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkConvexListShape")
{
	Index = TargetObjectRegistry.bhkConvexListShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkConvexListShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSTreadTransfInterpolator")
{
	Index = TargetObjectRegistry.BSTreadTransfInterpolator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSTreadTransfInterpolator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSAnimNotes")
{
	Index = TargetObjectRegistry.BSAnimNotes_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSAnimNotes_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkLiquidAction")
{
	Index = TargetObjectRegistry.bhkLiquidAction_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkLiquidAction_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBoundNode")
{
	Index = TargetObjectRegistry.BSMultiBoundNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBoundNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBound")
{
	Index = TargetObjectRegistry.BSMultiBound_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBound_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBoundData")
{
	Index = TargetObjectRegistry.BSMultiBoundData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBoundData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBoundOBB")
{
	Index = TargetObjectRegistry.BSMultiBoundOBB_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBoundOBB_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBoundSphere")
{
	Index = TargetObjectRegistry.BSMultiBoundSphere_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBoundSphere_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSSegmentedTriShape")
{
	Index = TargetObjectRegistry.BSSegmentedTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSSegmentedTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMultiBoundAABB")
{
	Index = TargetObjectRegistry.BSMultiBoundAABB_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMultiBoundAABB_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiAdditionalGeometryData")
{
	Index = TargetObjectRegistry.NiAdditionalGeometryData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiAdditionalGeometryData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPackedAdditionalGeometryData")
{
	Index = TargetObjectRegistry.BSPackedAdditionalGeometryData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPackedAdditionalGeometryData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSWArray")
{
	Index = TargetObjectRegistry.BSWArray_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSWArray_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkAabbPhantom")
{
	Index = TargetObjectRegistry.bhkAabbPhantom_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkAabbPhantom_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSFrustumFOVController")
{
	Index = TargetObjectRegistry.BSFrustumFOVController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSFrustumFOVController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSDebrisNode")
{
	Index = TargetObjectRegistry.BSDebrisNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSDebrisNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkBreakableConstraint")
{
	Index = TargetObjectRegistry.bhkBreakableConstraint_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkBreakableConstraint_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkOrientHingedBodyAction")
{
	Index = TargetObjectRegistry.bhkOrientHingedBodyAction_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkOrientHingedBodyAction_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiDataStream")
{
	Index = TargetObjectRegistry.NiDataStream_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiDataStream_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiRenderObject")
{
	Index = TargetObjectRegistry.NiRenderObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiRenderObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMeshModifier")
{
	Index = TargetObjectRegistry.NiMeshModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMeshModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMesh")
{
	Index = TargetObjectRegistry.NiMesh_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMesh_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMorphWeightsController")
{
	Index = TargetObjectRegistry.NiMorphWeightsController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMorphWeightsController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMorphMeshModifier")
{
	Index = TargetObjectRegistry.NiMorphMeshModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMorphMeshModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSkinningMeshModifier")
{
	Index = TargetObjectRegistry.NiSkinningMeshModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSkinningMeshModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiInstancingMeshModifier")
{
	Index = TargetObjectRegistry.NiInstancingMeshModifier_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiInstancingMeshModifier_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSkinningLODController")
{
	Index = TargetObjectRegistry.NiSkinningLODController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSkinningLODController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSParticleSystem")
{
	Index = TargetObjectRegistry.NiPSParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSMeshParticleSystem")
{
	Index = TargetObjectRegistry.NiPSMeshParticleSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSMeshParticleSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitParticlesCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitParticlesCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitParticlesCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSForceActiveCtlr")
{
	Index = TargetObjectRegistry.NiPSForceActiveCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSForceActiveCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulator")
{
	Index = TargetObjectRegistry.NiPSSimulator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorGeneralStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorGeneralStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorGeneralStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorForcesStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorForcesStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorForcesStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorCollidersStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorCollidersStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorCollidersStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorMeshAlignStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorMeshAlignStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorMeshAlignStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSimulatorFinalStep")
{
	Index = TargetObjectRegistry.NiPSSimulatorFinalStep_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSimulatorFinalStep_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSFacingQuadGenerator")
{
	Index = TargetObjectRegistry.NiPSFacingQuadGenerator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSFacingQuadGenerator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiShadowGenerator")
{
	Index = TargetObjectRegistry.NiShadowGenerator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiShadowGenerator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSBoundUpdater")
{
	Index = TargetObjectRegistry.NiPSBoundUpdater_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSBoundUpdater_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSDragForce")
{
	Index = TargetObjectRegistry.NiPSDragForce_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSDragForce_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSGravityForce")
{
	Index = TargetObjectRegistry.NiPSGravityForce_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSGravityForce_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSBoxEmitter")
{
	Index = TargetObjectRegistry.NiPSBoxEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSBoxEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSMeshEmitter")
{
	Index = TargetObjectRegistry.NiPSMeshEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSMeshEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSGravityStrengthCtlr")
{
	Index = TargetObjectRegistry.NiPSGravityStrengthCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSGravityStrengthCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSPlanarCollider")
{
	Index = TargetObjectRegistry.NiPSPlanarCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSPlanarCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterSpeedCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterSpeedCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterSpeedCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterRadiusCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterRadiusCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterRadiusCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSResetOnLoopCtlr")
{
	Index = TargetObjectRegistry.NiPSResetOnLoopCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSResetOnLoopCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSphereEmitter")
{
	Index = TargetObjectRegistry.NiPSSphereEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSphereEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSCylinderEmitter")
{
	Index = TargetObjectRegistry.NiPSCylinderEmitter_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSCylinderEmitter_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterDeclinationCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterDeclinationCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterDeclinationCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterDeclinationVarCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterDeclinationVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterDeclinationVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterPlanarAngleCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterPlanarAngleCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterPlanarAngleCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterPlanarAngleVarCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterPlanarAngleVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterPlanarAngleVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterRotAngleCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterRotAngleCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterRotAngleCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterRotAngleVarCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterRotAngleVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterRotAngleVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterRotSpeedCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterRotSpeedCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterRotSpeedCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterRotSpeedVarCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterRotSpeedVarCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterRotSpeedVarCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSEmitterLifeSpanCtlr")
{
	Index = TargetObjectRegistry.NiPSEmitterLifeSpanCtlr_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSEmitterLifeSpanCtlr_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSBombForce")
{
	Index = TargetObjectRegistry.NiPSBombForce_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSBombForce_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSphericalCollider")
{
	Index = TargetObjectRegistry.NiPSSphericalCollider_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSphericalCollider_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiPSSpawner")
{
	Index = TargetObjectRegistry.NiPSSpawner_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiPSSpawner_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiSequenceData")
{
	Index = TargetObjectRegistry.NiSequenceData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiSequenceData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiTransformEvaluator")
{
	Index = TargetObjectRegistry.NiTransformEvaluator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiTransformEvaluator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiBSplineCompTransformEvaluator")
{
	Index = TargetObjectRegistry.NiBSplineCompTransformEvaluator_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiBSplineCompTransformEvaluator_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiMeshHWInstance")
{
	Index = TargetObjectRegistry.NiMeshHWInstance_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiMeshHWInstance_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiFurSpringController")
{
	Index = TargetObjectRegistry.NiFurSpringController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiFurSpringController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "CStreamableAssetData")
{
	Index = TargetObjectRegistry.CStreamableAssetData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.CStreamableAssetData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkCompressedMeshShape")
{
	Index = TargetObjectRegistry.bhkCompressedMeshShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkCompressedMeshShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkCompressedMeshShapeData")
{
	Index = TargetObjectRegistry.bhkCompressedMeshShapeData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkCompressedMeshShapeData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSInvMarker")
{
	Index = TargetObjectRegistry.BSInvMarker_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSInvMarker_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSBoneLODExtraData")
{
	Index = TargetObjectRegistry.BSBoneLODExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSBoneLODExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSBehaviorGraphExtraData")
{
	Index = TargetObjectRegistry.BSBehaviorGraphExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSBehaviorGraphExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLagBoneController")
{
	Index = TargetObjectRegistry.BSLagBoneController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLagBoneController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLODTriShape")
{
	Index = TargetObjectRegistry.BSLODTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLODTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSFurnitureMarkerNode")
{
	Index = TargetObjectRegistry.BSFurnitureMarkerNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSFurnitureMarkerNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSLeafAnimNode")
{
	Index = TargetObjectRegistry.BSLeafAnimNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSLeafAnimNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSTreeNode")
{
	Index = TargetObjectRegistry.BSTreeNode_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSTreeNode_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "NiLightRadiusController")
{
	Index = TargetObjectRegistry.NiLightRadiusController_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.NiLightRadiusController_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSShape")
{
	Index = TargetObjectRegistry.BSShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSTriShape")
{
	Index = TargetObjectRegistry.BSTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSSubIndexTriShape")
{
	Index = TargetObjectRegistry.BSSubIndexTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSSubIndexTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSMeshLODTriShape")
{
	Index = TargetObjectRegistry.BSMeshLODTriShape_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSMeshLODTriShape_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkNPCollisionObject")
{
	Index = TargetObjectRegistry.bhkNPCollisionObject_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkNPCollisionObject_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSExtraData")
{
	Index = TargetObjectRegistry.BSExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkPhysicsSystem")
{
	Index = TargetObjectRegistry.bhkPhysicsSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkPhysicsSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "bhkRagdollSystem")
{
	Index = TargetObjectRegistry.bhkRagdollSystem_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.bhkRagdollSystem_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSClothExtraData")
{
	Index = TargetObjectRegistry.BSClothExtraData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSClothExtraData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSSkin__Instance")
{
	Index = TargetObjectRegistry.BSSkin__Instance_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSSkin__Instance_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSSkin__BoneData")
{
	Index = TargetObjectRegistry.BSSkin__BoneData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSSkin__BoneData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSPositionData")
{
	Index = TargetObjectRegistry.BSPositionData_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSPositionData_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSConnectPoint__Parents")
{
	Index = TargetObjectRegistry.BSConnectPoint__Parents_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSConnectPoint__Parents_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}
if(TargetNodeType == "BSConnectPoint__Children")
{
	Index = TargetObjectRegistry.BSConnectPoint__Children_Registry.AddDataCopy(TargetNode);
	TargetObjectRegistry.BSConnectPoint__Children_Registry.GetElementPointerV2(Index)->InternalName = CurrentNode->InternalName;
}