ObjectRegistryClasses::NiObject_Storage NiObject_Registry;if(TargetNodeType == "NiObject"){	Index = TargetObjectRegistry.NiObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsAlphaAnimator_Storage Ni3dsAlphaAnimator_Registry;if(TargetNodeType == "Ni3dsAlphaAnimator"){	Index = TargetObjectRegistry.Ni3dsAlphaAnimator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsAnimationNode_Storage Ni3dsAnimationNode_Registry;if(TargetNodeType == "Ni3dsAnimationNode"){	Index = TargetObjectRegistry.Ni3dsAnimationNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsColorAnimator_Storage Ni3dsColorAnimator_Registry;if(TargetNodeType == "Ni3dsColorAnimator"){	Index = TargetObjectRegistry.Ni3dsColorAnimator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsMorphShape_Storage Ni3dsMorphShape_Registry;if(TargetNodeType == "Ni3dsMorphShape"){	Index = TargetObjectRegistry.Ni3dsMorphShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsParticleSystem_Storage Ni3dsParticleSystem_Registry;if(TargetNodeType == "Ni3dsParticleSystem"){	Index = TargetObjectRegistry.Ni3dsParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Ni3dsPathController_Storage Ni3dsPathController_Registry;if(TargetNodeType == "Ni3dsPathController"){	Index = TargetObjectRegistry.Ni3dsPathController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleModifier_Storage NiParticleModifier_Registry;if(TargetNodeType == "NiParticleModifier"){	Index = TargetObjectRegistry.NiParticleModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysCollider_Storage NiPSysCollider_Registry;if(TargetNodeType == "NiPSysCollider"){	Index = TargetObjectRegistry.NiPSysCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkRefObject_Storage bhkRefObject_Registry;if(TargetNodeType == "bhkRefObject"){	Index = TargetObjectRegistry.bhkRefObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkSerializable_Storage bhkSerializable_Registry;if(TargetNodeType == "bhkSerializable"){	Index = TargetObjectRegistry.bhkSerializable_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkWorldObject_Storage bhkWorldObject_Registry;if(TargetNodeType == "bhkWorldObject"){	Index = TargetObjectRegistry.bhkWorldObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkPhantom_Storage bhkPhantom_Registry;if(TargetNodeType == "bhkPhantom"){	Index = TargetObjectRegistry.bhkPhantom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkShapePhantom_Storage bhkShapePhantom_Registry;if(TargetNodeType == "bhkShapePhantom"){	Index = TargetObjectRegistry.bhkShapePhantom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkSimpleShapePhantom_Storage bhkSimpleShapePhantom_Registry;if(TargetNodeType == "bhkSimpleShapePhantom"){	Index = TargetObjectRegistry.bhkSimpleShapePhantom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkEntity_Storage bhkEntity_Registry;if(TargetNodeType == "bhkEntity"){	Index = TargetObjectRegistry.bhkEntity_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkRigidBody_Storage bhkRigidBody_Registry;if(TargetNodeType == "bhkRigidBody"){	Index = TargetObjectRegistry.bhkRigidBody_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkRigidBodyT_Storage bhkRigidBodyT_Registry;if(TargetNodeType == "bhkRigidBodyT"){	Index = TargetObjectRegistry.bhkRigidBodyT_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkConstraint_Storage bhkConstraint_Registry;if(TargetNodeType == "bhkConstraint"){	Index = TargetObjectRegistry.bhkConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkLimitedHingeConstraint_Storage bhkLimitedHingeConstraint_Registry;if(TargetNodeType == "bhkLimitedHingeConstraint"){	Index = TargetObjectRegistry.bhkLimitedHingeConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkMalleableConstraint_Storage bhkMalleableConstraint_Registry;if(TargetNodeType == "bhkMalleableConstraint"){	Index = TargetObjectRegistry.bhkMalleableConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkStiffSpringConstraint_Storage bhkStiffSpringConstraint_Registry;if(TargetNodeType == "bhkStiffSpringConstraint"){	Index = TargetObjectRegistry.bhkStiffSpringConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkRagdollConstraint_Storage bhkRagdollConstraint_Registry;if(TargetNodeType == "bhkRagdollConstraint"){	Index = TargetObjectRegistry.bhkRagdollConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkPrismaticConstraint_Storage bhkPrismaticConstraint_Registry;if(TargetNodeType == "bhkPrismaticConstraint"){	Index = TargetObjectRegistry.bhkPrismaticConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkHingeConstraint_Storage bhkHingeConstraint_Registry;if(TargetNodeType == "bhkHingeConstraint"){	Index = TargetObjectRegistry.bhkHingeConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBallAndSocketConstraint_Storage bhkBallAndSocketConstraint_Registry;if(TargetNodeType == "bhkBallAndSocketConstraint"){	Index = TargetObjectRegistry.bhkBallAndSocketConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBallSocketConstraintChain_Storage bhkBallSocketConstraintChain_Registry;if(TargetNodeType == "bhkBallSocketConstraintChain"){	Index = TargetObjectRegistry.bhkBallSocketConstraintChain_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkShape_Storage bhkShape_Registry;if(TargetNodeType == "bhkShape"){	Index = TargetObjectRegistry.bhkShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkTransformShape_Storage bhkTransformShape_Registry;if(TargetNodeType == "bhkTransformShape"){	Index = TargetObjectRegistry.bhkTransformShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkSphereRepShape_Storage bhkSphereRepShape_Registry;if(TargetNodeType == "bhkSphereRepShape"){	Index = TargetObjectRegistry.bhkSphereRepShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkConvexShape_Storage bhkConvexShape_Registry;if(TargetNodeType == "bhkConvexShape"){	Index = TargetObjectRegistry.bhkConvexShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkSphereShape_Storage bhkSphereShape_Registry;if(TargetNodeType == "bhkSphereShape"){	Index = TargetObjectRegistry.bhkSphereShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkCapsuleShape_Storage bhkCapsuleShape_Registry;if(TargetNodeType == "bhkCapsuleShape"){	Index = TargetObjectRegistry.bhkCapsuleShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBoxShape_Storage bhkBoxShape_Registry;if(TargetNodeType == "bhkBoxShape"){	Index = TargetObjectRegistry.bhkBoxShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkConvexVerticesShape_Storage bhkConvexVerticesShape_Registry;if(TargetNodeType == "bhkConvexVerticesShape"){	Index = TargetObjectRegistry.bhkConvexVerticesShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkConvexTransformShape_Storage bhkConvexTransformShape_Registry;if(TargetNodeType == "bhkConvexTransformShape"){	Index = TargetObjectRegistry.bhkConvexTransformShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkMultiSphereShape_Storage bhkMultiSphereShape_Registry;if(TargetNodeType == "bhkMultiSphereShape"){	Index = TargetObjectRegistry.bhkMultiSphereShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBvTreeShape_Storage bhkBvTreeShape_Registry;if(TargetNodeType == "bhkBvTreeShape"){	Index = TargetObjectRegistry.bhkBvTreeShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkMoppBvTreeShape_Storage bhkMoppBvTreeShape_Registry;if(TargetNodeType == "bhkMoppBvTreeShape"){	Index = TargetObjectRegistry.bhkMoppBvTreeShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkShapeCollection_Storage bhkShapeCollection_Registry;if(TargetNodeType == "bhkShapeCollection"){	Index = TargetObjectRegistry.bhkShapeCollection_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkListShape_Storage bhkListShape_Registry;if(TargetNodeType == "bhkListShape"){	Index = TargetObjectRegistry.bhkListShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkMeshShape_Storage bhkMeshShape_Registry;if(TargetNodeType == "bhkMeshShape"){	Index = TargetObjectRegistry.bhkMeshShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkPackedNiTriStripsShape_Storage bhkPackedNiTriStripsShape_Registry;if(TargetNodeType == "bhkPackedNiTriStripsShape"){	Index = TargetObjectRegistry.bhkPackedNiTriStripsShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkNiTriStripsShape_Storage bhkNiTriStripsShape_Registry;if(TargetNodeType == "bhkNiTriStripsShape"){	Index = TargetObjectRegistry.bhkNiTriStripsShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiExtraData_Storage NiExtraData_Registry;if(TargetNodeType == "NiExtraData"){	Index = TargetObjectRegistry.NiExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiInterpolator_Storage NiInterpolator_Registry;if(TargetNodeType == "NiInterpolator"){	Index = TargetObjectRegistry.NiInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiKeyBasedInterpolator_Storage NiKeyBasedInterpolator_Registry;if(TargetNodeType == "NiKeyBasedInterpolator"){	Index = TargetObjectRegistry.NiKeyBasedInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatInterpolator_Storage NiFloatInterpolator_Registry;if(TargetNodeType == "NiFloatInterpolator"){	Index = TargetObjectRegistry.NiFloatInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTransformInterpolator_Storage NiTransformInterpolator_Registry;if(TargetNodeType == "NiTransformInterpolator"){	Index = TargetObjectRegistry.NiTransformInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPoint3Interpolator_Storage NiPoint3Interpolator_Registry;if(TargetNodeType == "NiPoint3Interpolator"){	Index = TargetObjectRegistry.NiPoint3Interpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPathInterpolator_Storage NiPathInterpolator_Registry;if(TargetNodeType == "NiPathInterpolator"){	Index = TargetObjectRegistry.NiPathInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBoolInterpolator_Storage NiBoolInterpolator_Registry;if(TargetNodeType == "NiBoolInterpolator"){	Index = TargetObjectRegistry.NiBoolInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBoolTimelineInterpolator_Storage NiBoolTimelineInterpolator_Registry;if(TargetNodeType == "NiBoolTimelineInterpolator"){	Index = TargetObjectRegistry.NiBoolTimelineInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBlendInterpolator_Storage NiBlendInterpolator_Registry;if(TargetNodeType == "NiBlendInterpolator"){	Index = TargetObjectRegistry.NiBlendInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineInterpolator_Storage NiBSplineInterpolator_Registry;if(TargetNodeType == "NiBSplineInterpolator"){	Index = TargetObjectRegistry.NiBSplineInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiObjectNET_Storage NiObjectNET_Registry;if(TargetNodeType == "NiObjectNET"){	Index = TargetObjectRegistry.NiObjectNET_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiCollisionObject_Storage NiCollisionObject_Registry;if(TargetNodeType == "NiCollisionObject"){	Index = TargetObjectRegistry.NiCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiCollisionData_Storage NiCollisionData_Registry;if(TargetNodeType == "NiCollisionData"){	Index = TargetObjectRegistry.NiCollisionData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkNiCollisionObject_Storage bhkNiCollisionObject_Registry;if(TargetNodeType == "bhkNiCollisionObject"){	Index = TargetObjectRegistry.bhkNiCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkCollisionObject_Storage bhkCollisionObject_Registry;if(TargetNodeType == "bhkCollisionObject"){	Index = TargetObjectRegistry.bhkCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBlendCollisionObject_Storage bhkBlendCollisionObject_Registry;if(TargetNodeType == "bhkBlendCollisionObject"){	Index = TargetObjectRegistry.bhkBlendCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkPCollisionObject_Storage bhkPCollisionObject_Registry;if(TargetNodeType == "bhkPCollisionObject"){	Index = TargetObjectRegistry.bhkPCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkSPCollisionObject_Storage bhkSPCollisionObject_Registry;if(TargetNodeType == "bhkSPCollisionObject"){	Index = TargetObjectRegistry.bhkSPCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAVObject_Storage NiAVObject_Registry;if(TargetNodeType == "NiAVObject"){	Index = TargetObjectRegistry.NiAVObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiDynamicEffect_Storage NiDynamicEffect_Registry;if(TargetNodeType == "NiDynamicEffect"){	Index = TargetObjectRegistry.NiDynamicEffect_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLight_Storage NiLight_Registry;if(TargetNodeType == "NiLight"){	Index = TargetObjectRegistry.NiLight_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiProperty_Storage NiProperty_Registry;if(TargetNodeType == "NiProperty"){	Index = TargetObjectRegistry.NiProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTransparentProperty_Storage NiTransparentProperty_Registry;if(TargetNodeType == "NiTransparentProperty"){	Index = TargetObjectRegistry.NiTransparentProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysModifier_Storage NiPSysModifier_Registry;if(TargetNodeType == "NiPSysModifier"){	Index = TargetObjectRegistry.NiPSysModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitter_Storage NiPSysEmitter_Registry;if(TargetNodeType == "NiPSysEmitter"){	Index = TargetObjectRegistry.NiPSysEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysVolumeEmitter_Storage NiPSysVolumeEmitter_Registry;if(TargetNodeType == "NiPSysVolumeEmitter"){	Index = TargetObjectRegistry.NiPSysVolumeEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTimeController_Storage NiTimeController_Registry;if(TargetNodeType == "NiTimeController"){	Index = TargetObjectRegistry.NiTimeController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiInterpController_Storage NiInterpController_Registry;if(TargetNodeType == "NiInterpController"){	Index = TargetObjectRegistry.NiInterpController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMultiTargetTransformController_Storage NiMultiTargetTransformController_Registry;if(TargetNodeType == "NiMultiTargetTransformController"){	Index = TargetObjectRegistry.NiMultiTargetTransformController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiGeomMorpherController_Storage NiGeomMorpherController_Registry;if(TargetNodeType == "NiGeomMorpherController"){	Index = TargetObjectRegistry.NiGeomMorpherController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMorphController_Storage NiMorphController_Registry;if(TargetNodeType == "NiMorphController"){	Index = TargetObjectRegistry.NiMorphController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMorpherController_Storage NiMorpherController_Registry;if(TargetNodeType == "NiMorpherController"){	Index = TargetObjectRegistry.NiMorpherController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSingleInterpController_Storage NiSingleInterpController_Registry;if(TargetNodeType == "NiSingleInterpController"){	Index = TargetObjectRegistry.NiSingleInterpController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiKeyframeController_Storage NiKeyframeController_Registry;if(TargetNodeType == "NiKeyframeController"){	Index = TargetObjectRegistry.NiKeyframeController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTransformController_Storage NiTransformController_Registry;if(TargetNodeType == "NiTransformController"){	Index = TargetObjectRegistry.NiTransformController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysModifierCtlr_Storage NiPSysModifierCtlr_Registry;if(TargetNodeType == "NiPSysModifierCtlr"){	Index = TargetObjectRegistry.NiPSysModifierCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterCtlr_Storage NiPSysEmitterCtlr_Registry;if(TargetNodeType == "NiPSysEmitterCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysModifierBoolCtlr_Storage NiPSysModifierBoolCtlr_Registry;if(TargetNodeType == "NiPSysModifierBoolCtlr"){	Index = TargetObjectRegistry.NiPSysModifierBoolCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysModifierActiveCtlr_Storage NiPSysModifierActiveCtlr_Registry;if(TargetNodeType == "NiPSysModifierActiveCtlr"){	Index = TargetObjectRegistry.NiPSysModifierActiveCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysModifierFloatCtlr_Storage NiPSysModifierFloatCtlr_Registry;if(TargetNodeType == "NiPSysModifierFloatCtlr"){	Index = TargetObjectRegistry.NiPSysModifierFloatCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterDeclinationCtlr_Storage NiPSysEmitterDeclinationCtlr_Registry;if(TargetNodeType == "NiPSysEmitterDeclinationCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterDeclinationCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterDeclinationVarCtlr_Storage NiPSysEmitterDeclinationVarCtlr_Registry;if(TargetNodeType == "NiPSysEmitterDeclinationVarCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterDeclinationVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterInitialRadiusCtlr_Storage NiPSysEmitterInitialRadiusCtlr_Registry;if(TargetNodeType == "NiPSysEmitterInitialRadiusCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterInitialRadiusCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterLifeSpanCtlr_Storage NiPSysEmitterLifeSpanCtlr_Registry;if(TargetNodeType == "NiPSysEmitterLifeSpanCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterLifeSpanCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterSpeedCtlr_Storage NiPSysEmitterSpeedCtlr_Registry;if(TargetNodeType == "NiPSysEmitterSpeedCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterSpeedCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysGravityStrengthCtlr_Storage NiPSysGravityStrengthCtlr_Registry;if(TargetNodeType == "NiPSysGravityStrengthCtlr"){	Index = TargetObjectRegistry.NiPSysGravityStrengthCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatInterpController_Storage NiFloatInterpController_Registry;if(TargetNodeType == "NiFloatInterpController"){	Index = TargetObjectRegistry.NiFloatInterpController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFlipController_Storage NiFlipController_Registry;if(TargetNodeType == "NiFlipController"){	Index = TargetObjectRegistry.NiFlipController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAlphaController_Storage NiAlphaController_Registry;if(TargetNodeType == "NiAlphaController"){	Index = TargetObjectRegistry.NiAlphaController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTextureTransformController_Storage NiTextureTransformController_Registry;if(TargetNodeType == "NiTextureTransformController"){	Index = TargetObjectRegistry.NiTextureTransformController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLightDimmerController_Storage NiLightDimmerController_Registry;if(TargetNodeType == "NiLightDimmerController"){	Index = TargetObjectRegistry.NiLightDimmerController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBoolInterpController_Storage NiBoolInterpController_Registry;if(TargetNodeType == "NiBoolInterpController"){	Index = TargetObjectRegistry.NiBoolInterpController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiVisController_Storage NiVisController_Registry;if(TargetNodeType == "NiVisController"){	Index = TargetObjectRegistry.NiVisController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPoint3InterpController_Storage NiPoint3InterpController_Registry;if(TargetNodeType == "NiPoint3InterpController"){	Index = TargetObjectRegistry.NiPoint3InterpController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMaterialColorController_Storage NiMaterialColorController_Registry;if(TargetNodeType == "NiMaterialColorController"){	Index = TargetObjectRegistry.NiMaterialColorController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLightColorController_Storage NiLightColorController_Registry;if(TargetNodeType == "NiLightColorController"){	Index = TargetObjectRegistry.NiLightColorController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiExtraDataController_Storage NiExtraDataController_Registry;if(TargetNodeType == "NiExtraDataController"){	Index = TargetObjectRegistry.NiExtraDataController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatExtraDataController_Storage NiFloatExtraDataController_Registry;if(TargetNodeType == "NiFloatExtraDataController"){	Index = TargetObjectRegistry.NiFloatExtraDataController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBoneLODController_Storage NiBoneLODController_Registry;if(TargetNodeType == "NiBoneLODController"){	Index = TargetObjectRegistry.NiBoneLODController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSBoneLODController_Storage NiBSBoneLODController_Registry;if(TargetNodeType == "NiBSBoneLODController"){	Index = TargetObjectRegistry.NiBSBoneLODController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiGeometry_Storage NiGeometry_Registry;if(TargetNodeType == "NiGeometry"){	Index = TargetObjectRegistry.NiGeometry_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriBasedGeom_Storage NiTriBasedGeom_Registry;if(TargetNodeType == "NiTriBasedGeom"){	Index = TargetObjectRegistry.NiTriBasedGeom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiGeometryData_Storage NiGeometryData_Registry;if(TargetNodeType == "NiGeometryData"){	Index = TargetObjectRegistry.NiGeometryData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::AbstractAdditionalGeometryData_Storage AbstractAdditionalGeometryData_Registry;if(TargetNodeType == "AbstractAdditionalGeometryData"){	Index = TargetObjectRegistry.AbstractAdditionalGeometryData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriBasedGeomData_Storage NiTriBasedGeomData_Registry;if(TargetNodeType == "NiTriBasedGeomData"){	Index = TargetObjectRegistry.NiTriBasedGeomData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBlendController_Storage bhkBlendController_Registry;if(TargetNodeType == "bhkBlendController"){	Index = TargetObjectRegistry.bhkBlendController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSBound_Storage BSBound_Registry;if(TargetNodeType == "BSBound"){	Index = TargetObjectRegistry.BSBound_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSFurnitureMarker_Storage BSFurnitureMarker_Registry;if(TargetNodeType == "BSFurnitureMarker"){	Index = TargetObjectRegistry.BSFurnitureMarker_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSParentVelocityModifier_Storage BSParentVelocityModifier_Registry;if(TargetNodeType == "BSParentVelocityModifier"){	Index = TargetObjectRegistry.BSParentVelocityModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysArrayEmitter_Storage BSPSysArrayEmitter_Registry;if(TargetNodeType == "BSPSysArrayEmitter"){	Index = TargetObjectRegistry.BSPSysArrayEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSWindModifier_Storage BSWindModifier_Registry;if(TargetNodeType == "BSWindModifier"){	Index = TargetObjectRegistry.BSWindModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::hkPackedNiTriStripsData_Storage hkPackedNiTriStripsData_Registry;if(TargetNodeType == "hkPackedNiTriStripsData"){	Index = TargetObjectRegistry.hkPackedNiTriStripsData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAlphaProperty_Storage NiAlphaProperty_Registry;if(TargetNodeType == "NiAlphaProperty"){	Index = TargetObjectRegistry.NiAlphaProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAmbientLight_Storage NiAmbientLight_Registry;if(TargetNodeType == "NiAmbientLight"){	Index = TargetObjectRegistry.NiAmbientLight_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticlesData_Storage NiParticlesData_Registry;if(TargetNodeType == "NiParticlesData"){	Index = TargetObjectRegistry.NiParticlesData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRotatingParticlesData_Storage NiRotatingParticlesData_Registry;if(TargetNodeType == "NiRotatingParticlesData"){	Index = TargetObjectRegistry.NiRotatingParticlesData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAutoNormalParticlesData_Storage NiAutoNormalParticlesData_Registry;if(TargetNodeType == "NiAutoNormalParticlesData"){	Index = TargetObjectRegistry.NiAutoNormalParticlesData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysData_Storage NiPSysData_Registry;if(TargetNodeType == "NiPSysData"){	Index = TargetObjectRegistry.NiPSysData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMeshPSysData_Storage NiMeshPSysData_Registry;if(TargetNodeType == "NiMeshPSysData"){	Index = TargetObjectRegistry.NiMeshPSysData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBinaryExtraData_Storage NiBinaryExtraData_Registry;if(TargetNodeType == "NiBinaryExtraData"){	Index = TargetObjectRegistry.NiBinaryExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBinaryVoxelExtraData_Storage NiBinaryVoxelExtraData_Registry;if(TargetNodeType == "NiBinaryVoxelExtraData"){	Index = TargetObjectRegistry.NiBinaryVoxelExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBinaryVoxelData_Storage NiBinaryVoxelData_Registry;if(TargetNodeType == "NiBinaryVoxelData"){	Index = TargetObjectRegistry.NiBinaryVoxelData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBlendBoolInterpolator_Storage NiBlendBoolInterpolator_Registry;if(TargetNodeType == "NiBlendBoolInterpolator"){	Index = TargetObjectRegistry.NiBlendBoolInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBlendFloatInterpolator_Storage NiBlendFloatInterpolator_Registry;if(TargetNodeType == "NiBlendFloatInterpolator"){	Index = TargetObjectRegistry.NiBlendFloatInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBlendPoint3Interpolator_Storage NiBlendPoint3Interpolator_Registry;if(TargetNodeType == "NiBlendPoint3Interpolator"){	Index = TargetObjectRegistry.NiBlendPoint3Interpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBlendTransformInterpolator_Storage NiBlendTransformInterpolator_Registry;if(TargetNodeType == "NiBlendTransformInterpolator"){	Index = TargetObjectRegistry.NiBlendTransformInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBoolData_Storage NiBoolData_Registry;if(TargetNodeType == "NiBoolData"){	Index = TargetObjectRegistry.NiBoolData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBooleanExtraData_Storage NiBooleanExtraData_Registry;if(TargetNodeType == "NiBooleanExtraData"){	Index = TargetObjectRegistry.NiBooleanExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineBasisData_Storage NiBSplineBasisData_Registry;if(TargetNodeType == "NiBSplineBasisData"){	Index = TargetObjectRegistry.NiBSplineBasisData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineFloatInterpolator_Storage NiBSplineFloatInterpolator_Registry;if(TargetNodeType == "NiBSplineFloatInterpolator"){	Index = TargetObjectRegistry.NiBSplineFloatInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineCompFloatInterpolator_Storage NiBSplineCompFloatInterpolator_Registry;if(TargetNodeType == "NiBSplineCompFloatInterpolator"){	Index = TargetObjectRegistry.NiBSplineCompFloatInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplinePoint3Interpolator_Storage NiBSplinePoint3Interpolator_Registry;if(TargetNodeType == "NiBSplinePoint3Interpolator"){	Index = TargetObjectRegistry.NiBSplinePoint3Interpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineCompPoint3Interpolator_Storage NiBSplineCompPoint3Interpolator_Registry;if(TargetNodeType == "NiBSplineCompPoint3Interpolator"){	Index = TargetObjectRegistry.NiBSplineCompPoint3Interpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineTransformInterpolator_Storage NiBSplineTransformInterpolator_Registry;if(TargetNodeType == "NiBSplineTransformInterpolator"){	Index = TargetObjectRegistry.NiBSplineTransformInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineCompTransformInterpolator_Storage NiBSplineCompTransformInterpolator_Registry;if(TargetNodeType == "NiBSplineCompTransformInterpolator"){	Index = TargetObjectRegistry.NiBSplineCompTransformInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSRotAccumTransfInterpolator_Storage BSRotAccumTransfInterpolator_Registry;if(TargetNodeType == "BSRotAccumTransfInterpolator"){	Index = TargetObjectRegistry.BSRotAccumTransfInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineData_Storage NiBSplineData_Registry;if(TargetNodeType == "NiBSplineData"){	Index = TargetObjectRegistry.NiBSplineData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiCamera_Storage NiCamera_Registry;if(TargetNodeType == "NiCamera"){	Index = TargetObjectRegistry.NiCamera_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiColorData_Storage NiColorData_Registry;if(TargetNodeType == "NiColorData"){	Index = TargetObjectRegistry.NiColorData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiColorExtraData_Storage NiColorExtraData_Registry;if(TargetNodeType == "NiColorExtraData"){	Index = TargetObjectRegistry.NiColorExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiControllerManager_Storage NiControllerManager_Registry;if(TargetNodeType == "NiControllerManager"){	Index = TargetObjectRegistry.NiControllerManager_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSequence_Storage NiSequence_Registry;if(TargetNodeType == "NiSequence"){	Index = TargetObjectRegistry.NiSequence_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiControllerSequence_Storage NiControllerSequence_Registry;if(TargetNodeType == "NiControllerSequence"){	Index = TargetObjectRegistry.NiControllerSequence_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAVObjectPalette_Storage NiAVObjectPalette_Registry;if(TargetNodeType == "NiAVObjectPalette"){	Index = TargetObjectRegistry.NiAVObjectPalette_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiDefaultAVObjectPalette_Storage NiDefaultAVObjectPalette_Registry;if(TargetNodeType == "NiDefaultAVObjectPalette"){	Index = TargetObjectRegistry.NiDefaultAVObjectPalette_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiDirectionalLight_Storage NiDirectionalLight_Registry;if(TargetNodeType == "NiDirectionalLight"){	Index = TargetObjectRegistry.NiDirectionalLight_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiDitherProperty_Storage NiDitherProperty_Registry;if(TargetNodeType == "NiDitherProperty"){	Index = TargetObjectRegistry.NiDitherProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRollController_Storage NiRollController_Registry;if(TargetNodeType == "NiRollController"){	Index = TargetObjectRegistry.NiRollController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatData_Storage NiFloatData_Registry;if(TargetNodeType == "NiFloatData"){	Index = TargetObjectRegistry.NiFloatData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatExtraData_Storage NiFloatExtraData_Registry;if(TargetNodeType == "NiFloatExtraData"){	Index = TargetObjectRegistry.NiFloatExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFloatsExtraData_Storage NiFloatsExtraData_Registry;if(TargetNodeType == "NiFloatsExtraData"){	Index = TargetObjectRegistry.NiFloatsExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFogProperty_Storage NiFogProperty_Registry;if(TargetNodeType == "NiFogProperty"){	Index = TargetObjectRegistry.NiFogProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiGravity_Storage NiGravity_Registry;if(TargetNodeType == "NiGravity"){	Index = TargetObjectRegistry.NiGravity_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiIntegerExtraData_Storage NiIntegerExtraData_Registry;if(TargetNodeType == "NiIntegerExtraData"){	Index = TargetObjectRegistry.NiIntegerExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSXFlags_Storage BSXFlags_Registry;if(TargetNodeType == "BSXFlags"){	Index = TargetObjectRegistry.BSXFlags_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiIntegersExtraData_Storage NiIntegersExtraData_Registry;if(TargetNodeType == "NiIntegersExtraData"){	Index = TargetObjectRegistry.NiIntegersExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSKeyframeController_Storage BSKeyframeController_Registry;if(TargetNodeType == "BSKeyframeController"){	Index = TargetObjectRegistry.BSKeyframeController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiKeyframeData_Storage NiKeyframeData_Registry;if(TargetNodeType == "NiKeyframeData"){	Index = TargetObjectRegistry.NiKeyframeData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLookAtController_Storage NiLookAtController_Registry;if(TargetNodeType == "NiLookAtController"){	Index = TargetObjectRegistry.NiLookAtController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLookAtInterpolator_Storage NiLookAtInterpolator_Registry;if(TargetNodeType == "NiLookAtInterpolator"){	Index = TargetObjectRegistry.NiLookAtInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMaterialProperty_Storage NiMaterialProperty_Registry;if(TargetNodeType == "NiMaterialProperty"){	Index = TargetObjectRegistry.NiMaterialProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMorphData_Storage NiMorphData_Registry;if(TargetNodeType == "NiMorphData"){	Index = TargetObjectRegistry.NiMorphData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiNode_Storage NiNode_Registry;if(TargetNodeType == "NiNode"){	Index = TargetObjectRegistry.NiNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBone_Storage NiBone_Registry;if(TargetNodeType == "NiBone"){	Index = TargetObjectRegistry.NiBone_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::AvoidNode_Storage AvoidNode_Registry;if(TargetNodeType == "AvoidNode"){	Index = TargetObjectRegistry.AvoidNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::FxWidget_Storage FxWidget_Registry;if(TargetNodeType == "FxWidget"){	Index = TargetObjectRegistry.FxWidget_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::FxButton_Storage FxButton_Registry;if(TargetNodeType == "FxButton"){	Index = TargetObjectRegistry.FxButton_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::FxRadioButton_Storage FxRadioButton_Registry;if(TargetNodeType == "FxRadioButton"){	Index = TargetObjectRegistry.FxRadioButton_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBillboardNode_Storage NiBillboardNode_Registry;if(TargetNodeType == "NiBillboardNode"){	Index = TargetObjectRegistry.NiBillboardNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSAnimationNode_Storage NiBSAnimationNode_Registry;if(TargetNodeType == "NiBSAnimationNode"){	Index = TargetObjectRegistry.NiBSAnimationNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSParticleNode_Storage NiBSParticleNode_Registry;if(TargetNodeType == "NiBSParticleNode"){	Index = TargetObjectRegistry.NiBSParticleNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSwitchNode_Storage NiSwitchNode_Registry;if(TargetNodeType == "NiSwitchNode"){	Index = TargetObjectRegistry.NiSwitchNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLODNode_Storage NiLODNode_Registry;if(TargetNodeType == "NiLODNode"){	Index = TargetObjectRegistry.NiLODNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPalette_Storage NiPalette_Registry;if(TargetNodeType == "NiPalette"){	Index = TargetObjectRegistry.NiPalette_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleBomb_Storage NiParticleBomb_Registry;if(TargetNodeType == "NiParticleBomb"){	Index = TargetObjectRegistry.NiParticleBomb_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleColorModifier_Storage NiParticleColorModifier_Registry;if(TargetNodeType == "NiParticleColorModifier"){	Index = TargetObjectRegistry.NiParticleColorModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleGrowFade_Storage NiParticleGrowFade_Registry;if(TargetNodeType == "NiParticleGrowFade"){	Index = TargetObjectRegistry.NiParticleGrowFade_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleMeshModifier_Storage NiParticleMeshModifier_Registry;if(TargetNodeType == "NiParticleMeshModifier"){	Index = TargetObjectRegistry.NiParticleMeshModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleRotation_Storage NiParticleRotation_Registry;if(TargetNodeType == "NiParticleRotation"){	Index = TargetObjectRegistry.NiParticleRotation_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticles_Storage NiParticles_Registry;if(TargetNodeType == "NiParticles"){	Index = TargetObjectRegistry.NiParticles_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAutoNormalParticles_Storage NiAutoNormalParticles_Registry;if(TargetNodeType == "NiAutoNormalParticles"){	Index = TargetObjectRegistry.NiAutoNormalParticles_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleMeshes_Storage NiParticleMeshes_Registry;if(TargetNodeType == "NiParticleMeshes"){	Index = TargetObjectRegistry.NiParticleMeshes_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleMeshesData_Storage NiParticleMeshesData_Registry;if(TargetNodeType == "NiParticleMeshesData"){	Index = TargetObjectRegistry.NiParticleMeshesData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleSystem_Storage NiParticleSystem_Registry;if(TargetNodeType == "NiParticleSystem"){	Index = TargetObjectRegistry.NiParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMeshParticleSystem_Storage NiMeshParticleSystem_Registry;if(TargetNodeType == "NiMeshParticleSystem"){	Index = TargetObjectRegistry.NiMeshParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiParticleSystemController_Storage NiParticleSystemController_Registry;if(TargetNodeType == "NiParticleSystemController"){	Index = TargetObjectRegistry.NiParticleSystemController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSPArrayController_Storage NiBSPArrayController_Registry;if(TargetNodeType == "NiBSPArrayController"){	Index = TargetObjectRegistry.NiBSPArrayController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPathController_Storage NiPathController_Registry;if(TargetNodeType == "NiPathController"){	Index = TargetObjectRegistry.NiPathController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::ATextureRenderData_Storage ATextureRenderData_Registry;if(TargetNodeType == "ATextureRenderData"){	Index = TargetObjectRegistry.ATextureRenderData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPersistentSrcTextureRendererData_Storage NiPersistentSrcTextureRendererData_Registry;if(TargetNodeType == "NiPersistentSrcTextureRendererData"){	Index = TargetObjectRegistry.NiPersistentSrcTextureRendererData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPixelData_Storage NiPixelData_Registry;if(TargetNodeType == "NiPixelData"){	Index = TargetObjectRegistry.NiPixelData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPlanarCollider_Storage NiPlanarCollider_Registry;if(TargetNodeType == "NiPlanarCollider"){	Index = TargetObjectRegistry.NiPlanarCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPointLight_Storage NiPointLight_Registry;if(TargetNodeType == "NiPointLight"){	Index = TargetObjectRegistry.NiPointLight_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPosData_Storage NiPosData_Registry;if(TargetNodeType == "NiPosData"){	Index = TargetObjectRegistry.NiPosData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysAgeDeathModifier_Storage NiPSysAgeDeathModifier_Registry;if(TargetNodeType == "NiPSysAgeDeathModifier"){	Index = TargetObjectRegistry.NiPSysAgeDeathModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysBombModifier_Storage NiPSysBombModifier_Registry;if(TargetNodeType == "NiPSysBombModifier"){	Index = TargetObjectRegistry.NiPSysBombModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysBoundUpdateModifier_Storage NiPSysBoundUpdateModifier_Registry;if(TargetNodeType == "NiPSysBoundUpdateModifier"){	Index = TargetObjectRegistry.NiPSysBoundUpdateModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysBoxEmitter_Storage NiPSysBoxEmitter_Registry;if(TargetNodeType == "NiPSysBoxEmitter"){	Index = TargetObjectRegistry.NiPSysBoxEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysColliderManager_Storage NiPSysColliderManager_Registry;if(TargetNodeType == "NiPSysColliderManager"){	Index = TargetObjectRegistry.NiPSysColliderManager_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysColorModifier_Storage NiPSysColorModifier_Registry;if(TargetNodeType == "NiPSysColorModifier"){	Index = TargetObjectRegistry.NiPSysColorModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysCylinderEmitter_Storage NiPSysCylinderEmitter_Registry;if(TargetNodeType == "NiPSysCylinderEmitter"){	Index = TargetObjectRegistry.NiPSysCylinderEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysDragModifier_Storage NiPSysDragModifier_Registry;if(TargetNodeType == "NiPSysDragModifier"){	Index = TargetObjectRegistry.NiPSysDragModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterCtlrData_Storage NiPSysEmitterCtlrData_Registry;if(TargetNodeType == "NiPSysEmitterCtlrData"){	Index = TargetObjectRegistry.NiPSysEmitterCtlrData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysGravityModifier_Storage NiPSysGravityModifier_Registry;if(TargetNodeType == "NiPSysGravityModifier"){	Index = TargetObjectRegistry.NiPSysGravityModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysGrowFadeModifier_Storage NiPSysGrowFadeModifier_Registry;if(TargetNodeType == "NiPSysGrowFadeModifier"){	Index = TargetObjectRegistry.NiPSysGrowFadeModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysMeshEmitter_Storage NiPSysMeshEmitter_Registry;if(TargetNodeType == "NiPSysMeshEmitter"){	Index = TargetObjectRegistry.NiPSysMeshEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysMeshUpdateModifier_Storage NiPSysMeshUpdateModifier_Registry;if(TargetNodeType == "NiPSysMeshUpdateModifier"){	Index = TargetObjectRegistry.NiPSysMeshUpdateModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysInheritVelocityModifier_Storage BSPSysInheritVelocityModifier_Registry;if(TargetNodeType == "BSPSysInheritVelocityModifier"){	Index = TargetObjectRegistry.BSPSysInheritVelocityModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysHavokUpdateModifier_Storage BSPSysHavokUpdateModifier_Registry;if(TargetNodeType == "BSPSysHavokUpdateModifier"){	Index = TargetObjectRegistry.BSPSysHavokUpdateModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysRecycleBoundModifier_Storage BSPSysRecycleBoundModifier_Registry;if(TargetNodeType == "BSPSysRecycleBoundModifier"){	Index = TargetObjectRegistry.BSPSysRecycleBoundModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysSubTexModifier_Storage BSPSysSubTexModifier_Registry;if(TargetNodeType == "BSPSysSubTexModifier"){	Index = TargetObjectRegistry.BSPSysSubTexModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysPlanarCollider_Storage NiPSysPlanarCollider_Registry;if(TargetNodeType == "NiPSysPlanarCollider"){	Index = TargetObjectRegistry.NiPSysPlanarCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysSphericalCollider_Storage NiPSysSphericalCollider_Registry;if(TargetNodeType == "NiPSysSphericalCollider"){	Index = TargetObjectRegistry.NiPSysSphericalCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysPositionModifier_Storage NiPSysPositionModifier_Registry;if(TargetNodeType == "NiPSysPositionModifier"){	Index = TargetObjectRegistry.NiPSysPositionModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysResetOnLoopCtlr_Storage NiPSysResetOnLoopCtlr_Registry;if(TargetNodeType == "NiPSysResetOnLoopCtlr"){	Index = TargetObjectRegistry.NiPSysResetOnLoopCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysRotationModifier_Storage NiPSysRotationModifier_Registry;if(TargetNodeType == "NiPSysRotationModifier"){	Index = TargetObjectRegistry.NiPSysRotationModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysSpawnModifier_Storage NiPSysSpawnModifier_Registry;if(TargetNodeType == "NiPSysSpawnModifier"){	Index = TargetObjectRegistry.NiPSysSpawnModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysSphereEmitter_Storage NiPSysSphereEmitter_Registry;if(TargetNodeType == "NiPSysSphereEmitter"){	Index = TargetObjectRegistry.NiPSysSphereEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysUpdateCtlr_Storage NiPSysUpdateCtlr_Registry;if(TargetNodeType == "NiPSysUpdateCtlr"){	Index = TargetObjectRegistry.NiPSysUpdateCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysFieldModifier_Storage NiPSysFieldModifier_Registry;if(TargetNodeType == "NiPSysFieldModifier"){	Index = TargetObjectRegistry.NiPSysFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysVortexFieldModifier_Storage NiPSysVortexFieldModifier_Registry;if(TargetNodeType == "NiPSysVortexFieldModifier"){	Index = TargetObjectRegistry.NiPSysVortexFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysGravityFieldModifier_Storage NiPSysGravityFieldModifier_Registry;if(TargetNodeType == "NiPSysGravityFieldModifier"){	Index = TargetObjectRegistry.NiPSysGravityFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysDragFieldModifier_Storage NiPSysDragFieldModifier_Registry;if(TargetNodeType == "NiPSysDragFieldModifier"){	Index = TargetObjectRegistry.NiPSysDragFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysTurbulenceFieldModifier_Storage NiPSysTurbulenceFieldModifier_Registry;if(TargetNodeType == "NiPSysTurbulenceFieldModifier"){	Index = TargetObjectRegistry.NiPSysTurbulenceFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysLODModifier_Storage BSPSysLODModifier_Registry;if(TargetNodeType == "BSPSysLODModifier"){	Index = TargetObjectRegistry.BSPSysLODModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysScaleModifier_Storage BSPSysScaleModifier_Registry;if(TargetNodeType == "BSPSysScaleModifier"){	Index = TargetObjectRegistry.BSPSysScaleModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysFieldMagnitudeCtlr_Storage NiPSysFieldMagnitudeCtlr_Registry;if(TargetNodeType == "NiPSysFieldMagnitudeCtlr"){	Index = TargetObjectRegistry.NiPSysFieldMagnitudeCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysFieldAttenuationCtlr_Storage NiPSysFieldAttenuationCtlr_Registry;if(TargetNodeType == "NiPSysFieldAttenuationCtlr"){	Index = TargetObjectRegistry.NiPSysFieldAttenuationCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysFieldMaxDistanceCtlr_Storage NiPSysFieldMaxDistanceCtlr_Registry;if(TargetNodeType == "NiPSysFieldMaxDistanceCtlr"){	Index = TargetObjectRegistry.NiPSysFieldMaxDistanceCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysAirFieldAirFrictionCtlr_Storage NiPSysAirFieldAirFrictionCtlr_Registry;if(TargetNodeType == "NiPSysAirFieldAirFrictionCtlr"){	Index = TargetObjectRegistry.NiPSysAirFieldAirFrictionCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysAirFieldInheritVelocityCtlr_Storage NiPSysAirFieldInheritVelocityCtlr_Registry;if(TargetNodeType == "NiPSysAirFieldInheritVelocityCtlr"){	Index = TargetObjectRegistry.NiPSysAirFieldInheritVelocityCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysAirFieldSpreadCtlr_Storage NiPSysAirFieldSpreadCtlr_Registry;if(TargetNodeType == "NiPSysAirFieldSpreadCtlr"){	Index = TargetObjectRegistry.NiPSysAirFieldSpreadCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysInitialRotSpeedCtlr_Storage NiPSysInitialRotSpeedCtlr_Registry;if(TargetNodeType == "NiPSysInitialRotSpeedCtlr"){	Index = TargetObjectRegistry.NiPSysInitialRotSpeedCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysInitialRotSpeedVarCtlr_Storage NiPSysInitialRotSpeedVarCtlr_Registry;if(TargetNodeType == "NiPSysInitialRotSpeedVarCtlr"){	Index = TargetObjectRegistry.NiPSysInitialRotSpeedVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysInitialRotAngleCtlr_Storage NiPSysInitialRotAngleCtlr_Registry;if(TargetNodeType == "NiPSysInitialRotAngleCtlr"){	Index = TargetObjectRegistry.NiPSysInitialRotAngleCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysInitialRotAngleVarCtlr_Storage NiPSysInitialRotAngleVarCtlr_Registry;if(TargetNodeType == "NiPSysInitialRotAngleVarCtlr"){	Index = TargetObjectRegistry.NiPSysInitialRotAngleVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterPlanarAngleCtlr_Storage NiPSysEmitterPlanarAngleCtlr_Registry;if(TargetNodeType == "NiPSysEmitterPlanarAngleCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterPlanarAngleCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysEmitterPlanarAngleVarCtlr_Storage NiPSysEmitterPlanarAngleVarCtlr_Registry;if(TargetNodeType == "NiPSysEmitterPlanarAngleVarCtlr"){	Index = TargetObjectRegistry.NiPSysEmitterPlanarAngleVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysAirFieldModifier_Storage NiPSysAirFieldModifier_Registry;if(TargetNodeType == "NiPSysAirFieldModifier"){	Index = TargetObjectRegistry.NiPSysAirFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysTrailEmitter_Storage NiPSysTrailEmitter_Registry;if(TargetNodeType == "NiPSysTrailEmitter"){	Index = TargetObjectRegistry.NiPSysTrailEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLightIntensityController_Storage NiLightIntensityController_Registry;if(TargetNodeType == "NiLightIntensityController"){	Index = TargetObjectRegistry.NiLightIntensityController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSysRadialFieldModifier_Storage NiPSysRadialFieldModifier_Registry;if(TargetNodeType == "NiPSysRadialFieldModifier"){	Index = TargetObjectRegistry.NiPSysRadialFieldModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLODData_Storage NiLODData_Registry;if(TargetNodeType == "NiLODData"){	Index = TargetObjectRegistry.NiLODData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRangeLODData_Storage NiRangeLODData_Registry;if(TargetNodeType == "NiRangeLODData"){	Index = TargetObjectRegistry.NiRangeLODData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiScreenLODData_Storage NiScreenLODData_Registry;if(TargetNodeType == "NiScreenLODData"){	Index = TargetObjectRegistry.NiScreenLODData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRotatingParticles_Storage NiRotatingParticles_Registry;if(TargetNodeType == "NiRotatingParticles"){	Index = TargetObjectRegistry.NiRotatingParticles_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSequenceStreamHelper_Storage NiSequenceStreamHelper_Registry;if(TargetNodeType == "NiSequenceStreamHelper"){	Index = TargetObjectRegistry.NiSequenceStreamHelper_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiShadeProperty_Storage NiShadeProperty_Registry;if(TargetNodeType == "NiShadeProperty"){	Index = TargetObjectRegistry.NiShadeProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSkinData_Storage NiSkinData_Registry;if(TargetNodeType == "NiSkinData"){	Index = TargetObjectRegistry.NiSkinData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSkinInstance_Storage NiSkinInstance_Registry;if(TargetNodeType == "NiSkinInstance"){	Index = TargetObjectRegistry.NiSkinInstance_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriShapeSkinController_Storage NiTriShapeSkinController_Registry;if(TargetNodeType == "NiTriShapeSkinController"){	Index = TargetObjectRegistry.NiTriShapeSkinController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiClodSkinInstance_Storage NiClodSkinInstance_Registry;if(TargetNodeType == "NiClodSkinInstance"){	Index = TargetObjectRegistry.NiClodSkinInstance_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSkinPartition_Storage NiSkinPartition_Registry;if(TargetNodeType == "NiSkinPartition"){	Index = TargetObjectRegistry.NiSkinPartition_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTexture_Storage NiTexture_Registry;if(TargetNodeType == "NiTexture"){	Index = TargetObjectRegistry.NiTexture_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSourceTexture_Storage NiSourceTexture_Registry;if(TargetNodeType == "NiSourceTexture"){	Index = TargetObjectRegistry.NiSourceTexture_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSpecularProperty_Storage NiSpecularProperty_Registry;if(TargetNodeType == "NiSpecularProperty"){	Index = TargetObjectRegistry.NiSpecularProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSphericalCollider_Storage NiSphericalCollider_Registry;if(TargetNodeType == "NiSphericalCollider"){	Index = TargetObjectRegistry.NiSphericalCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSpotLight_Storage NiSpotLight_Registry;if(TargetNodeType == "NiSpotLight"){	Index = TargetObjectRegistry.NiSpotLight_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiStencilProperty_Storage NiStencilProperty_Registry;if(TargetNodeType == "NiStencilProperty"){	Index = TargetObjectRegistry.NiStencilProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiStringExtraData_Storage NiStringExtraData_Registry;if(TargetNodeType == "NiStringExtraData"){	Index = TargetObjectRegistry.NiStringExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiStringPalette_Storage NiStringPalette_Registry;if(TargetNodeType == "NiStringPalette"){	Index = TargetObjectRegistry.NiStringPalette_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiStringsExtraData_Storage NiStringsExtraData_Registry;if(TargetNodeType == "NiStringsExtraData"){	Index = TargetObjectRegistry.NiStringsExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTextKeyExtraData_Storage NiTextKeyExtraData_Registry;if(TargetNodeType == "NiTextKeyExtraData"){	Index = TargetObjectRegistry.NiTextKeyExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTextureEffect_Storage NiTextureEffect_Registry;if(TargetNodeType == "NiTextureEffect"){	Index = TargetObjectRegistry.NiTextureEffect_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTextureModeProperty_Storage NiTextureModeProperty_Registry;if(TargetNodeType == "NiTextureModeProperty"){	Index = TargetObjectRegistry.NiTextureModeProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiImage_Storage NiImage_Registry;if(TargetNodeType == "NiImage"){	Index = TargetObjectRegistry.NiImage_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTextureProperty_Storage NiTextureProperty_Registry;if(TargetNodeType == "NiTextureProperty"){	Index = TargetObjectRegistry.NiTextureProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMultiTextureProperty_Storage NiMultiTextureProperty_Registry;if(TargetNodeType == "NiMultiTextureProperty"){	Index = TargetObjectRegistry.NiMultiTextureProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTexturingProperty_Storage NiTexturingProperty_Registry;if(TargetNodeType == "NiTexturingProperty"){	Index = TargetObjectRegistry.NiTexturingProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTransformData_Storage NiTransformData_Registry;if(TargetNodeType == "NiTransformData"){	Index = TargetObjectRegistry.NiTransformData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriShape_Storage NiTriShape_Registry;if(TargetNodeType == "NiTriShape"){	Index = TargetObjectRegistry.NiTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriShapeData_Storage NiTriShapeData_Registry;if(TargetNodeType == "NiTriShapeData"){	Index = TargetObjectRegistry.NiTriShapeData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriStrips_Storage NiTriStrips_Registry;if(TargetNodeType == "NiTriStrips"){	Index = TargetObjectRegistry.NiTriStrips_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTriStripsData_Storage NiTriStripsData_Registry;if(TargetNodeType == "NiTriStripsData"){	Index = TargetObjectRegistry.NiTriStripsData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiEnvMappedTriShape_Storage NiEnvMappedTriShape_Registry;if(TargetNodeType == "NiEnvMappedTriShape"){	Index = TargetObjectRegistry.NiEnvMappedTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiEnvMappedTriShapeData_Storage NiEnvMappedTriShapeData_Registry;if(TargetNodeType == "NiEnvMappedTriShapeData"){	Index = TargetObjectRegistry.NiEnvMappedTriShapeData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBezierTriangle4_Storage NiBezierTriangle4_Registry;if(TargetNodeType == "NiBezierTriangle4"){	Index = TargetObjectRegistry.NiBezierTriangle4_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBezierMesh_Storage NiBezierMesh_Registry;if(TargetNodeType == "NiBezierMesh"){	Index = TargetObjectRegistry.NiBezierMesh_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiClod_Storage NiClod_Registry;if(TargetNodeType == "NiClod"){	Index = TargetObjectRegistry.NiClod_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiClodData_Storage NiClodData_Registry;if(TargetNodeType == "NiClodData"){	Index = TargetObjectRegistry.NiClodData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiUVController_Storage NiUVController_Registry;if(TargetNodeType == "NiUVController"){	Index = TargetObjectRegistry.NiUVController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiUVData_Storage NiUVData_Registry;if(TargetNodeType == "NiUVData"){	Index = TargetObjectRegistry.NiUVData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiVectorExtraData_Storage NiVectorExtraData_Registry;if(TargetNodeType == "NiVectorExtraData"){	Index = TargetObjectRegistry.NiVectorExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiVertexColorProperty_Storage NiVertexColorProperty_Registry;if(TargetNodeType == "NiVertexColorProperty"){	Index = TargetObjectRegistry.NiVertexColorProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiVertWeightsExtraData_Storage NiVertWeightsExtraData_Registry;if(TargetNodeType == "NiVertWeightsExtraData"){	Index = TargetObjectRegistry.NiVertWeightsExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiVisData_Storage NiVisData_Registry;if(TargetNodeType == "NiVisData"){	Index = TargetObjectRegistry.NiVisData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiWireframeProperty_Storage NiWireframeProperty_Registry;if(TargetNodeType == "NiWireframeProperty"){	Index = TargetObjectRegistry.NiWireframeProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiZBufferProperty_Storage NiZBufferProperty_Registry;if(TargetNodeType == "NiZBufferProperty"){	Index = TargetObjectRegistry.NiZBufferProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::RootCollisionNode_Storage RootCollisionNode_Registry;if(TargetNodeType == "RootCollisionNode"){	Index = TargetObjectRegistry.RootCollisionNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRawImageData_Storage NiRawImageData_Registry;if(TargetNodeType == "NiRawImageData"){	Index = TargetObjectRegistry.NiRawImageData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSortAdjustNode_Storage NiSortAdjustNode_Registry;if(TargetNodeType == "NiSortAdjustNode"){	Index = TargetObjectRegistry.NiSortAdjustNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSourceCubeMap_Storage NiSourceCubeMap_Registry;if(TargetNodeType == "NiSourceCubeMap"){	Index = TargetObjectRegistry.NiSourceCubeMap_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXProp_Storage NiPhysXProp_Registry;if(TargetNodeType == "NiPhysXProp"){	Index = TargetObjectRegistry.NiPhysXProp_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXPropDesc_Storage NiPhysXPropDesc_Registry;if(TargetNodeType == "NiPhysXPropDesc"){	Index = TargetObjectRegistry.NiPhysXPropDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXActorDesc_Storage NiPhysXActorDesc_Registry;if(TargetNodeType == "NiPhysXActorDesc"){	Index = TargetObjectRegistry.NiPhysXActorDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXBodyDesc_Storage NiPhysXBodyDesc_Registry;if(TargetNodeType == "NiPhysXBodyDesc"){	Index = TargetObjectRegistry.NiPhysXBodyDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXD6JointDesc_Storage NiPhysXD6JointDesc_Registry;if(TargetNodeType == "NiPhysXD6JointDesc"){	Index = TargetObjectRegistry.NiPhysXD6JointDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXShapeDesc_Storage NiPhysXShapeDesc_Registry;if(TargetNodeType == "NiPhysXShapeDesc"){	Index = TargetObjectRegistry.NiPhysXShapeDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXMeshDesc_Storage NiPhysXMeshDesc_Registry;if(TargetNodeType == "NiPhysXMeshDesc"){	Index = TargetObjectRegistry.NiPhysXMeshDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXMaterialDesc_Storage NiPhysXMaterialDesc_Registry;if(TargetNodeType == "NiPhysXMaterialDesc"){	Index = TargetObjectRegistry.NiPhysXMaterialDesc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXKinematicSrc_Storage NiPhysXKinematicSrc_Registry;if(TargetNodeType == "NiPhysXKinematicSrc"){	Index = TargetObjectRegistry.NiPhysXKinematicSrc_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPhysXTransformDest_Storage NiPhysXTransformDest_Registry;if(TargetNodeType == "NiPhysXTransformDest"){	Index = TargetObjectRegistry.NiPhysXTransformDest_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiArkAnimationExtraData_Storage NiArkAnimationExtraData_Registry;if(TargetNodeType == "NiArkAnimationExtraData"){	Index = TargetObjectRegistry.NiArkAnimationExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiArkImporterExtraData_Storage NiArkImporterExtraData_Registry;if(TargetNodeType == "NiArkImporterExtraData"){	Index = TargetObjectRegistry.NiArkImporterExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiArkTextureExtraData_Storage NiArkTextureExtraData_Registry;if(TargetNodeType == "NiArkTextureExtraData"){	Index = TargetObjectRegistry.NiArkTextureExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiArkViewportInfoExtraData_Storage NiArkViewportInfoExtraData_Registry;if(TargetNodeType == "NiArkViewportInfoExtraData"){	Index = TargetObjectRegistry.NiArkViewportInfoExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiArkShaderExtraData_Storage NiArkShaderExtraData_Registry;if(TargetNodeType == "NiArkShaderExtraData"){	Index = TargetObjectRegistry.NiArkShaderExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLines_Storage NiLines_Registry;if(TargetNodeType == "NiLines"){	Index = TargetObjectRegistry.NiLines_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLinesData_Storage NiLinesData_Registry;if(TargetNodeType == "NiLinesData"){	Index = TargetObjectRegistry.NiLinesData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiScreenElementsData_Storage NiScreenElementsData_Registry;if(TargetNodeType == "NiScreenElementsData"){	Index = TargetObjectRegistry.NiScreenElementsData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiScreenElements_Storage NiScreenElements_Registry;if(TargetNodeType == "NiScreenElements"){	Index = TargetObjectRegistry.NiScreenElements_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRoomGroup_Storage NiRoomGroup_Registry;if(TargetNodeType == "NiRoomGroup"){	Index = TargetObjectRegistry.NiRoomGroup_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRoom_Storage NiRoom_Registry;if(TargetNodeType == "NiRoom"){	Index = TargetObjectRegistry.NiRoom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPortal_Storage NiPortal_Registry;if(TargetNodeType == "NiPortal"){	Index = TargetObjectRegistry.NiPortal_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSFadeNode_Storage BSFadeNode_Registry;if(TargetNodeType == "BSFadeNode"){	Index = TargetObjectRegistry.BSFadeNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShaderProperty_Storage BSShaderProperty_Registry;if(TargetNodeType == "BSShaderProperty"){	Index = TargetObjectRegistry.BSShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShaderLightingProperty_Storage BSShaderLightingProperty_Registry;if(TargetNodeType == "BSShaderLightingProperty"){	Index = TargetObjectRegistry.BSShaderLightingProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShaderNoLightingProperty_Storage BSShaderNoLightingProperty_Registry;if(TargetNodeType == "BSShaderNoLightingProperty"){	Index = TargetObjectRegistry.BSShaderNoLightingProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShaderPPLightingProperty_Storage BSShaderPPLightingProperty_Registry;if(TargetNodeType == "BSShaderPPLightingProperty"){	Index = TargetObjectRegistry.BSShaderPPLightingProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSEffectShaderPropertyFloatController_Storage BSEffectShaderPropertyFloatController_Registry;if(TargetNodeType == "BSEffectShaderPropertyFloatController"){	Index = TargetObjectRegistry.BSEffectShaderPropertyFloatController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSEffectShaderPropertyColorController_Storage BSEffectShaderPropertyColorController_Registry;if(TargetNodeType == "BSEffectShaderPropertyColorController"){	Index = TargetObjectRegistry.BSEffectShaderPropertyColorController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLightingShaderPropertyFloatController_Storage BSLightingShaderPropertyFloatController_Registry;if(TargetNodeType == "BSLightingShaderPropertyFloatController"){	Index = TargetObjectRegistry.BSLightingShaderPropertyFloatController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLightingShaderPropertyColorController_Storage BSLightingShaderPropertyColorController_Registry;if(TargetNodeType == "BSLightingShaderPropertyColorController"){	Index = TargetObjectRegistry.BSLightingShaderPropertyColorController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSNiAlphaPropertyTestRefController_Storage BSNiAlphaPropertyTestRefController_Registry;if(TargetNodeType == "BSNiAlphaPropertyTestRefController"){	Index = TargetObjectRegistry.BSNiAlphaPropertyTestRefController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSProceduralLightningController_Storage BSProceduralLightningController_Registry;if(TargetNodeType == "BSProceduralLightningController"){	Index = TargetObjectRegistry.BSProceduralLightningController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShaderTextureSet_Storage BSShaderTextureSet_Registry;if(TargetNodeType == "BSShaderTextureSet"){	Index = TargetObjectRegistry.BSShaderTextureSet_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::WaterShaderProperty_Storage WaterShaderProperty_Registry;if(TargetNodeType == "WaterShaderProperty"){	Index = TargetObjectRegistry.WaterShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::SkyShaderProperty_Storage SkyShaderProperty_Registry;if(TargetNodeType == "SkyShaderProperty"){	Index = TargetObjectRegistry.SkyShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::TileShaderProperty_Storage TileShaderProperty_Registry;if(TargetNodeType == "TileShaderProperty"){	Index = TargetObjectRegistry.TileShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::DistantLODShaderProperty_Storage DistantLODShaderProperty_Registry;if(TargetNodeType == "DistantLODShaderProperty"){	Index = TargetObjectRegistry.DistantLODShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSDistantTreeShaderProperty_Storage BSDistantTreeShaderProperty_Registry;if(TargetNodeType == "BSDistantTreeShaderProperty"){	Index = TargetObjectRegistry.BSDistantTreeShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::TallGrassShaderProperty_Storage TallGrassShaderProperty_Registry;if(TargetNodeType == "TallGrassShaderProperty"){	Index = TargetObjectRegistry.TallGrassShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::VolumetricFogShaderProperty_Storage VolumetricFogShaderProperty_Registry;if(TargetNodeType == "VolumetricFogShaderProperty"){	Index = TargetObjectRegistry.VolumetricFogShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::HairShaderProperty_Storage HairShaderProperty_Registry;if(TargetNodeType == "HairShaderProperty"){	Index = TargetObjectRegistry.HairShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::Lighting30ShaderProperty_Storage Lighting30ShaderProperty_Registry;if(TargetNodeType == "Lighting30ShaderProperty"){	Index = TargetObjectRegistry.Lighting30ShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLightingShaderProperty_Storage BSLightingShaderProperty_Registry;if(TargetNodeType == "BSLightingShaderProperty"){	Index = TargetObjectRegistry.BSLightingShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSEffectShaderProperty_Storage BSEffectShaderProperty_Registry;if(TargetNodeType == "BSEffectShaderProperty"){	Index = TargetObjectRegistry.BSEffectShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSWaterShaderProperty_Storage BSWaterShaderProperty_Registry;if(TargetNodeType == "BSWaterShaderProperty"){	Index = TargetObjectRegistry.BSWaterShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSSkyShaderProperty_Storage BSSkyShaderProperty_Registry;if(TargetNodeType == "BSSkyShaderProperty"){	Index = TargetObjectRegistry.BSSkyShaderProperty_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSDismemberSkinInstance_Storage BSDismemberSkinInstance_Registry;if(TargetNodeType == "BSDismemberSkinInstance"){	Index = TargetObjectRegistry.BSDismemberSkinInstance_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSDecalPlacementVectorExtraData_Storage BSDecalPlacementVectorExtraData_Registry;if(TargetNodeType == "BSDecalPlacementVectorExtraData"){	Index = TargetObjectRegistry.BSDecalPlacementVectorExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysSimpleColorModifier_Storage BSPSysSimpleColorModifier_Registry;if(TargetNodeType == "BSPSysSimpleColorModifier"){	Index = TargetObjectRegistry.BSPSysSimpleColorModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSValueNode_Storage BSValueNode_Registry;if(TargetNodeType == "BSValueNode"){	Index = TargetObjectRegistry.BSValueNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSStripParticleSystem_Storage BSStripParticleSystem_Registry;if(TargetNodeType == "BSStripParticleSystem"){	Index = TargetObjectRegistry.BSStripParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSStripPSysData_Storage BSStripPSysData_Registry;if(TargetNodeType == "BSStripPSysData"){	Index = TargetObjectRegistry.BSStripPSysData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysStripUpdateModifier_Storage BSPSysStripUpdateModifier_Registry;if(TargetNodeType == "BSPSysStripUpdateModifier"){	Index = TargetObjectRegistry.BSPSysStripUpdateModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMaterialEmittanceMultController_Storage BSMaterialEmittanceMultController_Registry;if(TargetNodeType == "BSMaterialEmittanceMultController"){	Index = TargetObjectRegistry.BSMaterialEmittanceMultController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMasterParticleSystem_Storage BSMasterParticleSystem_Registry;if(TargetNodeType == "BSMasterParticleSystem"){	Index = TargetObjectRegistry.BSMasterParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPSysMultiTargetEmitterCtlr_Storage BSPSysMultiTargetEmitterCtlr_Registry;if(TargetNodeType == "BSPSysMultiTargetEmitterCtlr"){	Index = TargetObjectRegistry.BSPSysMultiTargetEmitterCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSRefractionStrengthController_Storage BSRefractionStrengthController_Registry;if(TargetNodeType == "BSRefractionStrengthController"){	Index = TargetObjectRegistry.BSRefractionStrengthController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSOrderedNode_Storage BSOrderedNode_Registry;if(TargetNodeType == "BSOrderedNode"){	Index = TargetObjectRegistry.BSOrderedNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSBlastNode_Storage BSBlastNode_Registry;if(TargetNodeType == "BSBlastNode"){	Index = TargetObjectRegistry.BSBlastNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSDamageStage_Storage BSDamageStage_Registry;if(TargetNodeType == "BSDamageStage"){	Index = TargetObjectRegistry.BSDamageStage_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSRefractionFirePeriodController_Storage BSRefractionFirePeriodController_Registry;if(TargetNodeType == "BSRefractionFirePeriodController"){	Index = TargetObjectRegistry.BSRefractionFirePeriodController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkConvexListShape_Storage bhkConvexListShape_Registry;if(TargetNodeType == "bhkConvexListShape"){	Index = TargetObjectRegistry.bhkConvexListShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSTreadTransfInterpolator_Storage BSTreadTransfInterpolator_Registry;if(TargetNodeType == "BSTreadTransfInterpolator"){	Index = TargetObjectRegistry.BSTreadTransfInterpolator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSAnimNotes_Storage BSAnimNotes_Registry;if(TargetNodeType == "BSAnimNotes"){	Index = TargetObjectRegistry.BSAnimNotes_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkLiquidAction_Storage bhkLiquidAction_Registry;if(TargetNodeType == "bhkLiquidAction"){	Index = TargetObjectRegistry.bhkLiquidAction_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBoundNode_Storage BSMultiBoundNode_Registry;if(TargetNodeType == "BSMultiBoundNode"){	Index = TargetObjectRegistry.BSMultiBoundNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBound_Storage BSMultiBound_Registry;if(TargetNodeType == "BSMultiBound"){	Index = TargetObjectRegistry.BSMultiBound_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBoundData_Storage BSMultiBoundData_Registry;if(TargetNodeType == "BSMultiBoundData"){	Index = TargetObjectRegistry.BSMultiBoundData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBoundOBB_Storage BSMultiBoundOBB_Registry;if(TargetNodeType == "BSMultiBoundOBB"){	Index = TargetObjectRegistry.BSMultiBoundOBB_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBoundSphere_Storage BSMultiBoundSphere_Registry;if(TargetNodeType == "BSMultiBoundSphere"){	Index = TargetObjectRegistry.BSMultiBoundSphere_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSSegmentedTriShape_Storage BSSegmentedTriShape_Registry;if(TargetNodeType == "BSSegmentedTriShape"){	Index = TargetObjectRegistry.BSSegmentedTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMultiBoundAABB_Storage BSMultiBoundAABB_Registry;if(TargetNodeType == "BSMultiBoundAABB"){	Index = TargetObjectRegistry.BSMultiBoundAABB_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiAdditionalGeometryData_Storage NiAdditionalGeometryData_Registry;if(TargetNodeType == "NiAdditionalGeometryData"){	Index = TargetObjectRegistry.NiAdditionalGeometryData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPackedAdditionalGeometryData_Storage BSPackedAdditionalGeometryData_Registry;if(TargetNodeType == "BSPackedAdditionalGeometryData"){	Index = TargetObjectRegistry.BSPackedAdditionalGeometryData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSWArray_Storage BSWArray_Registry;if(TargetNodeType == "BSWArray"){	Index = TargetObjectRegistry.BSWArray_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkAabbPhantom_Storage bhkAabbPhantom_Registry;if(TargetNodeType == "bhkAabbPhantom"){	Index = TargetObjectRegistry.bhkAabbPhantom_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSFrustumFOVController_Storage BSFrustumFOVController_Registry;if(TargetNodeType == "BSFrustumFOVController"){	Index = TargetObjectRegistry.BSFrustumFOVController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSDebrisNode_Storage BSDebrisNode_Registry;if(TargetNodeType == "BSDebrisNode"){	Index = TargetObjectRegistry.BSDebrisNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkBreakableConstraint_Storage bhkBreakableConstraint_Registry;if(TargetNodeType == "bhkBreakableConstraint"){	Index = TargetObjectRegistry.bhkBreakableConstraint_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkOrientHingedBodyAction_Storage bhkOrientHingedBodyAction_Registry;if(TargetNodeType == "bhkOrientHingedBodyAction"){	Index = TargetObjectRegistry.bhkOrientHingedBodyAction_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiDataStream_Storage NiDataStream_Registry;if(TargetNodeType == "NiDataStream"){	Index = TargetObjectRegistry.NiDataStream_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiRenderObject_Storage NiRenderObject_Registry;if(TargetNodeType == "NiRenderObject"){	Index = TargetObjectRegistry.NiRenderObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMeshModifier_Storage NiMeshModifier_Registry;if(TargetNodeType == "NiMeshModifier"){	Index = TargetObjectRegistry.NiMeshModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMesh_Storage NiMesh_Registry;if(TargetNodeType == "NiMesh"){	Index = TargetObjectRegistry.NiMesh_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMorphWeightsController_Storage NiMorphWeightsController_Registry;if(TargetNodeType == "NiMorphWeightsController"){	Index = TargetObjectRegistry.NiMorphWeightsController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMorphMeshModifier_Storage NiMorphMeshModifier_Registry;if(TargetNodeType == "NiMorphMeshModifier"){	Index = TargetObjectRegistry.NiMorphMeshModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSkinningMeshModifier_Storage NiSkinningMeshModifier_Registry;if(TargetNodeType == "NiSkinningMeshModifier"){	Index = TargetObjectRegistry.NiSkinningMeshModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiInstancingMeshModifier_Storage NiInstancingMeshModifier_Registry;if(TargetNodeType == "NiInstancingMeshModifier"){	Index = TargetObjectRegistry.NiInstancingMeshModifier_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSkinningLODController_Storage NiSkinningLODController_Registry;if(TargetNodeType == "NiSkinningLODController"){	Index = TargetObjectRegistry.NiSkinningLODController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSParticleSystem_Storage NiPSParticleSystem_Registry;if(TargetNodeType == "NiPSParticleSystem"){	Index = TargetObjectRegistry.NiPSParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSMeshParticleSystem_Storage NiPSMeshParticleSystem_Registry;if(TargetNodeType == "NiPSMeshParticleSystem"){	Index = TargetObjectRegistry.NiPSMeshParticleSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitParticlesCtlr_Storage NiPSEmitParticlesCtlr_Registry;if(TargetNodeType == "NiPSEmitParticlesCtlr"){	Index = TargetObjectRegistry.NiPSEmitParticlesCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSForceActiveCtlr_Storage NiPSForceActiveCtlr_Registry;if(TargetNodeType == "NiPSForceActiveCtlr"){	Index = TargetObjectRegistry.NiPSForceActiveCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulator_Storage NiPSSimulator_Registry;if(TargetNodeType == "NiPSSimulator"){	Index = TargetObjectRegistry.NiPSSimulator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorStep_Storage NiPSSimulatorStep_Registry;if(TargetNodeType == "NiPSSimulatorStep"){	Index = TargetObjectRegistry.NiPSSimulatorStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorGeneralStep_Storage NiPSSimulatorGeneralStep_Registry;if(TargetNodeType == "NiPSSimulatorGeneralStep"){	Index = TargetObjectRegistry.NiPSSimulatorGeneralStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorForcesStep_Storage NiPSSimulatorForcesStep_Registry;if(TargetNodeType == "NiPSSimulatorForcesStep"){	Index = TargetObjectRegistry.NiPSSimulatorForcesStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorCollidersStep_Storage NiPSSimulatorCollidersStep_Registry;if(TargetNodeType == "NiPSSimulatorCollidersStep"){	Index = TargetObjectRegistry.NiPSSimulatorCollidersStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorMeshAlignStep_Storage NiPSSimulatorMeshAlignStep_Registry;if(TargetNodeType == "NiPSSimulatorMeshAlignStep"){	Index = TargetObjectRegistry.NiPSSimulatorMeshAlignStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSimulatorFinalStep_Storage NiPSSimulatorFinalStep_Registry;if(TargetNodeType == "NiPSSimulatorFinalStep"){	Index = TargetObjectRegistry.NiPSSimulatorFinalStep_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSFacingQuadGenerator_Storage NiPSFacingQuadGenerator_Registry;if(TargetNodeType == "NiPSFacingQuadGenerator"){	Index = TargetObjectRegistry.NiPSFacingQuadGenerator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiShadowGenerator_Storage NiShadowGenerator_Registry;if(TargetNodeType == "NiShadowGenerator"){	Index = TargetObjectRegistry.NiShadowGenerator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSBoundUpdater_Storage NiPSBoundUpdater_Registry;if(TargetNodeType == "NiPSBoundUpdater"){	Index = TargetObjectRegistry.NiPSBoundUpdater_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSDragForce_Storage NiPSDragForce_Registry;if(TargetNodeType == "NiPSDragForce"){	Index = TargetObjectRegistry.NiPSDragForce_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSGravityForce_Storage NiPSGravityForce_Registry;if(TargetNodeType == "NiPSGravityForce"){	Index = TargetObjectRegistry.NiPSGravityForce_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSBoxEmitter_Storage NiPSBoxEmitter_Registry;if(TargetNodeType == "NiPSBoxEmitter"){	Index = TargetObjectRegistry.NiPSBoxEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSMeshEmitter_Storage NiPSMeshEmitter_Registry;if(TargetNodeType == "NiPSMeshEmitter"){	Index = TargetObjectRegistry.NiPSMeshEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSGravityStrengthCtlr_Storage NiPSGravityStrengthCtlr_Registry;if(TargetNodeType == "NiPSGravityStrengthCtlr"){	Index = TargetObjectRegistry.NiPSGravityStrengthCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSPlanarCollider_Storage NiPSPlanarCollider_Registry;if(TargetNodeType == "NiPSPlanarCollider"){	Index = TargetObjectRegistry.NiPSPlanarCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterSpeedCtlr_Storage NiPSEmitterSpeedCtlr_Registry;if(TargetNodeType == "NiPSEmitterSpeedCtlr"){	Index = TargetObjectRegistry.NiPSEmitterSpeedCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterRadiusCtlr_Storage NiPSEmitterRadiusCtlr_Registry;if(TargetNodeType == "NiPSEmitterRadiusCtlr"){	Index = TargetObjectRegistry.NiPSEmitterRadiusCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSResetOnLoopCtlr_Storage NiPSResetOnLoopCtlr_Registry;if(TargetNodeType == "NiPSResetOnLoopCtlr"){	Index = TargetObjectRegistry.NiPSResetOnLoopCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSphereEmitter_Storage NiPSSphereEmitter_Registry;if(TargetNodeType == "NiPSSphereEmitter"){	Index = TargetObjectRegistry.NiPSSphereEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSCylinderEmitter_Storage NiPSCylinderEmitter_Registry;if(TargetNodeType == "NiPSCylinderEmitter"){	Index = TargetObjectRegistry.NiPSCylinderEmitter_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterDeclinationCtlr_Storage NiPSEmitterDeclinationCtlr_Registry;if(TargetNodeType == "NiPSEmitterDeclinationCtlr"){	Index = TargetObjectRegistry.NiPSEmitterDeclinationCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterDeclinationVarCtlr_Storage NiPSEmitterDeclinationVarCtlr_Registry;if(TargetNodeType == "NiPSEmitterDeclinationVarCtlr"){	Index = TargetObjectRegistry.NiPSEmitterDeclinationVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterPlanarAngleCtlr_Storage NiPSEmitterPlanarAngleCtlr_Registry;if(TargetNodeType == "NiPSEmitterPlanarAngleCtlr"){	Index = TargetObjectRegistry.NiPSEmitterPlanarAngleCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterPlanarAngleVarCtlr_Storage NiPSEmitterPlanarAngleVarCtlr_Registry;if(TargetNodeType == "NiPSEmitterPlanarAngleVarCtlr"){	Index = TargetObjectRegistry.NiPSEmitterPlanarAngleVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterRotAngleCtlr_Storage NiPSEmitterRotAngleCtlr_Registry;if(TargetNodeType == "NiPSEmitterRotAngleCtlr"){	Index = TargetObjectRegistry.NiPSEmitterRotAngleCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterRotAngleVarCtlr_Storage NiPSEmitterRotAngleVarCtlr_Registry;if(TargetNodeType == "NiPSEmitterRotAngleVarCtlr"){	Index = TargetObjectRegistry.NiPSEmitterRotAngleVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterRotSpeedCtlr_Storage NiPSEmitterRotSpeedCtlr_Registry;if(TargetNodeType == "NiPSEmitterRotSpeedCtlr"){	Index = TargetObjectRegistry.NiPSEmitterRotSpeedCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterRotSpeedVarCtlr_Storage NiPSEmitterRotSpeedVarCtlr_Registry;if(TargetNodeType == "NiPSEmitterRotSpeedVarCtlr"){	Index = TargetObjectRegistry.NiPSEmitterRotSpeedVarCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSEmitterLifeSpanCtlr_Storage NiPSEmitterLifeSpanCtlr_Registry;if(TargetNodeType == "NiPSEmitterLifeSpanCtlr"){	Index = TargetObjectRegistry.NiPSEmitterLifeSpanCtlr_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSBombForce_Storage NiPSBombForce_Registry;if(TargetNodeType == "NiPSBombForce"){	Index = TargetObjectRegistry.NiPSBombForce_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSphericalCollider_Storage NiPSSphericalCollider_Registry;if(TargetNodeType == "NiPSSphericalCollider"){	Index = TargetObjectRegistry.NiPSSphericalCollider_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiPSSpawner_Storage NiPSSpawner_Registry;if(TargetNodeType == "NiPSSpawner"){	Index = TargetObjectRegistry.NiPSSpawner_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiSequenceData_Storage NiSequenceData_Registry;if(TargetNodeType == "NiSequenceData"){	Index = TargetObjectRegistry.NiSequenceData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiTransformEvaluator_Storage NiTransformEvaluator_Registry;if(TargetNodeType == "NiTransformEvaluator"){	Index = TargetObjectRegistry.NiTransformEvaluator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiBSplineCompTransformEvaluator_Storage NiBSplineCompTransformEvaluator_Registry;if(TargetNodeType == "NiBSplineCompTransformEvaluator"){	Index = TargetObjectRegistry.NiBSplineCompTransformEvaluator_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiMeshHWInstance_Storage NiMeshHWInstance_Registry;if(TargetNodeType == "NiMeshHWInstance"){	Index = TargetObjectRegistry.NiMeshHWInstance_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiFurSpringController_Storage NiFurSpringController_Registry;if(TargetNodeType == "NiFurSpringController"){	Index = TargetObjectRegistry.NiFurSpringController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::CStreamableAssetData_Storage CStreamableAssetData_Registry;if(TargetNodeType == "CStreamableAssetData"){	Index = TargetObjectRegistry.CStreamableAssetData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkCompressedMeshShape_Storage bhkCompressedMeshShape_Registry;if(TargetNodeType == "bhkCompressedMeshShape"){	Index = TargetObjectRegistry.bhkCompressedMeshShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkCompressedMeshShapeData_Storage bhkCompressedMeshShapeData_Registry;if(TargetNodeType == "bhkCompressedMeshShapeData"){	Index = TargetObjectRegistry.bhkCompressedMeshShapeData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSInvMarker_Storage BSInvMarker_Registry;if(TargetNodeType == "BSInvMarker"){	Index = TargetObjectRegistry.BSInvMarker_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSBoneLODExtraData_Storage BSBoneLODExtraData_Registry;if(TargetNodeType == "BSBoneLODExtraData"){	Index = TargetObjectRegistry.BSBoneLODExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSBehaviorGraphExtraData_Storage BSBehaviorGraphExtraData_Registry;if(TargetNodeType == "BSBehaviorGraphExtraData"){	Index = TargetObjectRegistry.BSBehaviorGraphExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLagBoneController_Storage BSLagBoneController_Registry;if(TargetNodeType == "BSLagBoneController"){	Index = TargetObjectRegistry.BSLagBoneController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLODTriShape_Storage BSLODTriShape_Registry;if(TargetNodeType == "BSLODTriShape"){	Index = TargetObjectRegistry.BSLODTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSFurnitureMarkerNode_Storage BSFurnitureMarkerNode_Registry;if(TargetNodeType == "BSFurnitureMarkerNode"){	Index = TargetObjectRegistry.BSFurnitureMarkerNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSLeafAnimNode_Storage BSLeafAnimNode_Registry;if(TargetNodeType == "BSLeafAnimNode"){	Index = TargetObjectRegistry.BSLeafAnimNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSTreeNode_Storage BSTreeNode_Registry;if(TargetNodeType == "BSTreeNode"){	Index = TargetObjectRegistry.BSTreeNode_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::NiLightRadiusController_Storage NiLightRadiusController_Registry;if(TargetNodeType == "NiLightRadiusController"){	Index = TargetObjectRegistry.NiLightRadiusController_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSShape_Storage BSShape_Registry;if(TargetNodeType == "BSShape"){	Index = TargetObjectRegistry.BSShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSTriShape_Storage BSTriShape_Registry;if(TargetNodeType == "BSTriShape"){	Index = TargetObjectRegistry.BSTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSSubIndexTriShape_Storage BSSubIndexTriShape_Registry;if(TargetNodeType == "BSSubIndexTriShape"){	Index = TargetObjectRegistry.BSSubIndexTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSMeshLODTriShape_Storage BSMeshLODTriShape_Registry;if(TargetNodeType == "BSMeshLODTriShape"){	Index = TargetObjectRegistry.BSMeshLODTriShape_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkNPCollisionObject_Storage bhkNPCollisionObject_Registry;if(TargetNodeType == "bhkNPCollisionObject"){	Index = TargetObjectRegistry.bhkNPCollisionObject_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSExtraData_Storage BSExtraData_Registry;if(TargetNodeType == "BSExtraData"){	Index = TargetObjectRegistry.BSExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkPhysicsSystem_Storage bhkPhysicsSystem_Registry;if(TargetNodeType == "bhkPhysicsSystem"){	Index = TargetObjectRegistry.bhkPhysicsSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::bhkRagdollSystem_Storage bhkRagdollSystem_Registry;if(TargetNodeType == "bhkRagdollSystem"){	Index = TargetObjectRegistry.bhkRagdollSystem_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSClothExtraData_Storage BSClothExtraData_Registry;if(TargetNodeType == "BSClothExtraData"){	Index = TargetObjectRegistry.BSClothExtraData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSSkin__Instance_Storage BSSkin__Instance_Registry;if(TargetNodeType == "BSSkin__Instance"){	Index = TargetObjectRegistry.BSSkin__Instance_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSSkin__BoneData_Storage BSSkin__BoneData_Registry;if(TargetNodeType == "BSSkin__BoneData"){	Index = TargetObjectRegistry.BSSkin__BoneData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSPositionData_Storage BSPositionData_Registry;if(TargetNodeType == "BSPositionData"){	Index = TargetObjectRegistry.BSPositionData_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSConnectPoint__Parents_Storage BSConnectPoint__Parents_Registry;if(TargetNodeType == "BSConnectPoint__Parents"){	Index = TargetObjectRegistry.BSConnectPoint__Parents_Registry.AddData(this, CurrentNode->InternalName);}
ObjectRegistryClasses::BSConnectPoint__Children_Storage BSConnectPoint__Children_Registry;if(TargetNodeType == "BSConnectPoint__Children"){	Index = TargetObjectRegistry.BSConnectPoint__Children_Registry.AddData(this, CurrentNode->InternalName);}